{
    "name": "iexist-backend",
    "version": "1.0.0",
    "private": true,
    "scripts": {
        "start": "ts-node -r tsconfig-paths/register index.ts",
        "dev": "nodemon --exec ts-node -r tsconfig-paths/register index.ts",
        "build": "tsc && tsc-alias",
        "db:test": "ts-node -r tsconfig-paths/register utils/testDb.ts",
        "db:check": "ts-node -r tsconfig-paths/register utils/checkDb.ts",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "type-check": "tsc --noEmit",
        "migrate": "sequelize-cli db:migrate",
        "migrate:undo": "sequelize-cli db:migrate:undo",
        "start:db": "ts-node config/database.ts",
        "coverage": "jest --config ./jest.config.ts --coverage",
        "test": "cross-env NODE_ENV=test jest --config ./jest.config.ts --detectOpenHandles --forceExit",
        "test:watch": "cross-env NODE_ENV=test jest --config ./jest.config.ts --watch",
        "test:coverage": "cross-env NODE_ENV=test jest --config ./jest.config.ts --coverage",
        "test:challenge": "jest --config ./jest.config.ts tests/integration/challengeIntegration.test.ts --detectOpenHandles --forceExit",
        "test:challenge:unit": "jest --config ./jest.config.ts tests/unit/challengeController.test.ts",
        "test:connection": "cross-env NODE_ENV=test jest --config ./jest.config.ts tests/database/connection.test.ts --detectOpenHandles --forceExit",
        "test:transaction": "cross-env NODE_ENV=test jest --config ./jest.config.ts tests/database/transaction.test.ts --detectOpenHandles --forceExit",
        "test:complex": "cross-env NODE_ENV=test jest --config ./jest.config.ts tests/database/complex-transaction.test.ts --detectOpenHandles --forceExit",
        "test:errors": "cross-env NODE_ENV=test jest --config ./jest.config.ts tests/database/error-handling.test.ts --detectOpenHandles --forceExit",
        "test:db": "cross-env NODE_ENV=test jest --config ./jest.config.ts tests/database/*.test.ts --detectOpenHandles --forceExit",
        "test:websocket": "cross-env NODE_ENV=test jest tests/websocket.test.ts --detectOpenHandles --forceExit",
        "test:api-docs": "cross-env NODE_ENV=test jest --config ./jest.config.ts tests/api-docs.test.ts --detectOpenHandles --forceExit",
        "test:controllers:coverage": "cross-env NODE_ENV=test jest --config ./jest.config.ts --coverage --collectCoverageFrom=\"controllers/**/*.ts\" --coverageReporters=json-summary --coverageDirectory=\"coverage/controllers\" --testMatch \"tests/**/*Controller.test.ts\" --passWithNoTests",
        "test:comfort-wall": "jest --testPathPattern=comfortWall",
        "test:comfortwall": "cross-env NODE_ENV=test jest tests/coverage/comfortWallController.coverage.test.ts --coverage",
        "test:comfort-wall-full-coverage": "jest --testPathPattern='comfortWall|comfortWallController' --coverage",
        "test:comfort-wall-coverage": "jest --config=jest.config.ts --testPathPattern=comfortWallController --coverage",
        "test:postcontroller": "jest tests/unit/postController.test.ts --coverage --collectCoverageFrom=\"controllers/postController.ts\""
    },
    "dependencies": {
        "@types/nodemailer": "^6.4.17",
        "bcryptjs": "^2.4.3",
        "cookie-parser": "^1.4.7",
        "cors": "2.8.5",
        "dotenv": "^16.4.5",
        "express": "^4.18.2",
        "express-rate-limit": "^7.5.0",
        "express-validator": "^7.2.0",
        "helmet": "^8.0.0",
        "hpp": "^0.2.3",
        "jsonwebtoken": "^9.0.2",
        "morgan": "^1.10.0",
        "multer": "^1.4.5-lts.1",
        "mysql2": "^3.11.3",
        "nodemailer": "^6.10.0",
        "sequelize": "^6.x.x",
        "socket.io": "^4.8.1",
        "xss-clean": "^0.1.4"
    },
    "devDependencies": {
        "@babel/core": "^7.24.0",
        "@babel/preset-env": "^7.24.0",
        "@babel/preset-typescript": "^7.24.0",
        "@swc/core": "^1.10.16",
        "@swc/jest": "^0.2.37",
        "@types/bcryptjs": "^2.4.6",
        "@types/cookie-parser": "^1.4.8",
        "@types/cors": "^2.8.17",
        "@types/express": "^4.17.21",
        "@types/express-rate-limit": "^5.1.3",
        "@types/helmet": "^0.0.48",
        "@types/hpp": "^0.2.6",
        "@types/jest": "^29.5.14",
        "@types/jsonwebtoken": "^9.0.6",
        "@types/morgan": "^1.9.9",
        "@types/multer": "^1.4.12",
        "@types/node": "^22.13.1",
        "@types/socket.io": "^3.0.1",
        "@types/supertest": "^6.0.3",
        "ajv": "^8.17.1",
        "ajv-formats": "^3.0.1",
        "axios": "^1.8.4",
        "babel-jest": "^29.7.0",
        "cross-env": "^7.0.3",
        "http-status-codes": "^2.3.0",
        "jest": "^29.7.0",
        "k6": "^0.0.0",
        "nodemon": "^3.1.9",
        "socket.io-client": "^4.8.1",
        "supertest": "^7.0.0",
        "swagger-parser": "^10.0.3",
        "ts-jest": "^29.2.5",
        "ts-node": "^10.9.2",
        "tsconfig-paths": "^4.2.0",
        "typescript": "^5.7.3"
    },
    "type": "commonjs",
    "engines": {
        "node": ">=14.0.0"
    },
    "jest": {
        "preset": "ts-jest",
        "testEnvironment": "node",
        "testRegex": "(tests/.*\\.(test|spec))\\.[tj]s$",
        "setupFilesAfterEnv": [
            "./tests/setup.ts"
        ],
        "collectCoverageFrom": [
            "**/controllers/comfortWallController.ts"
        ],
        "coverageReporters": [
            "text",
            "text-summary",
            "html"
        ],
        "moduleNameMapper": {
            "^@/(.*)$": "<rootDir>/$1"
        },
        "transform": {
            "^.+\\.(ts|tsx)$": "ts-jest"
        },
        "testTimeout": 600000,
        "detectOpenHandles": true,
        "forceExit": true
    }
}
