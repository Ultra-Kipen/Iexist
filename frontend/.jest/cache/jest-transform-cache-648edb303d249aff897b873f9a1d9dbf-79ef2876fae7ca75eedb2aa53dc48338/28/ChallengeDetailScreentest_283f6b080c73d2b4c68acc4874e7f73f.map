{"version":3,"names":["_getJestObj","mock","useNavigation","goBack","jest","fn","useRoute","params","challengeId","getChallengeDetails","mockGetChallengeDetails","apply","arguments","participateInChallenge","mockParticipateInChallenge","leaveChallenge","mockLeaveChallenge","updateChallengeProgress","mockUpdateChallengeProgress","getAllEmotions","mockGetAllEmotions","_ref","title","onPress","MockText","require","Text","_jsxRuntime","jsx","children","_interopRequireDefault","_asyncToGenerator2","_react","_reactNative","_reactNative2","_ChallengeDetailScreen","_require","spyOn","Alert","mockImplementation","describe","mockChallenge","data","challenge_id","description","start_date","end_date","is_public","max_participants","participant_count","creator","user_id","username","nickname","is_participating","created_at","participants","profile_image_url","progress_entries","mockEmotions","emotion_id","name","icon","color","beforeEach","clearAllMocks","mockResolvedValue","success","it","default","_render","render","getByText","waitFor","expect","toHaveBeenCalledTimes","timeout","toBeTruthy","mockRejectedValueOnce","Error","_render2","_render3","fireEvent","press","toHaveBeenCalledWith","alert","currentDate","Date","futureDate","setDate","getDate","mockResolvedValueOnce","Object","assign","toISOString","split","_render4"],"sources":["ChallengeDetailScreen.test.tsx"],"sourcesContent":["// __tests__/screens/ChallengeDetailScreen.test.tsx\r\nimport React from 'react';\r\nimport { render, act, fireEvent, waitFor } from '@testing-library/react-native';\r\nimport { Alert, Text } from 'react-native';\r\nimport ChallengeDetailScreen from '../../src/screens/ChallengeDetailScreen';\r\n\r\n// 필요한 모듈 모킹\r\njest.mock('@react-navigation/native', () => ({\r\n  useNavigation: () => ({\r\n    goBack: jest.fn(),\r\n  }),\r\n  useRoute: () => ({\r\n    params: { challengeId: 1 },\r\n  }),\r\n}));\r\n\r\n// 서비스 모킹\r\nconst mockGetChallengeDetails = jest.fn();\r\nconst mockParticipateInChallenge = jest.fn();\r\nconst mockLeaveChallenge = jest.fn();\r\nconst mockUpdateChallengeProgress = jest.fn();\r\nconst mockGetAllEmotions = jest.fn();\r\n\r\njest.mock('../../src/services/api/challengeService', () => ({\r\n  getChallengeDetails: (...args) => mockGetChallengeDetails(...args),\r\n  participateInChallenge: (...args) => mockParticipateInChallenge(...args),\r\n  leaveChallenge: (...args) => mockLeaveChallenge(...args),\r\n  updateChallengeProgress: (...args) => mockUpdateChallengeProgress(...args),\r\n}));\r\n\r\njest.mock('../../src/services/api/emotionService', () => ({\r\n  getAllEmotions: (...args) => mockGetAllEmotions(...args),\r\n}));\r\n\r\n// Button 컴포넌트 모킹 - 텍스트가 직접 보이도록 모킹\r\njest.mock('../../src/components/Button', () => {\r\n  // eslint-disable-next-line react/display-name\r\n  return ({ title, onPress }) => {\r\n    const MockText = require('react-native').Text;\r\n    return <MockText onPress={onPress}>{title}</MockText>;\r\n  };\r\n});\r\n\r\n// Alert.alert 모킹\r\njest.spyOn(Alert, 'alert').mockImplementation(() => {});\r\n\r\ndescribe('ChallengeDetailScreen', () => {\r\n  // 기본 응답 데이터 준비\r\n  const mockChallenge = {\r\n    data: {\r\n      data: {\r\n        challenge_id: 1,\r\n        title: '7일간의 감사 일기',\r\n        description: '매일 감사한 일 3가지를 기록해보세요.',\r\n        start_date: '2025-04-01',\r\n        end_date: '2025-04-30',\r\n        is_public: true,\r\n        max_participants: null,\r\n        participant_count: 10,\r\n        creator: {\r\n          user_id: 1,\r\n          username: 'creator',\r\n          nickname: 'Creator',\r\n        },\r\n        is_participating: false,\r\n        created_at: '2025-03-25T00:00:00.000Z',\r\n        participants: [\r\n          {\r\n            user_id: 2,\r\n            username: 'user1',\r\n            nickname: 'User1',\r\n            profile_image_url: null,\r\n          },\r\n        ],\r\n        progress_entries: [],\r\n      }\r\n    }\r\n  };\r\n\r\n  const mockEmotions = {\r\n    data: {\r\n      data: [\r\n        { emotion_id: 1, name: '행복', icon: 'emoticon-happy-outline', color: '#FFD700' },\r\n        { emotion_id: 2, name: '감사', icon: 'hand-heart', color: '#FF69B4' },\r\n      ]\r\n    }\r\n  };\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // 기본 모킹 설정\r\n    mockGetChallengeDetails.mockResolvedValue(mockChallenge);\r\n    mockGetAllEmotions.mockResolvedValue(mockEmotions);\r\n    mockParticipateInChallenge.mockResolvedValue({ data: { success: true } });\r\n    mockLeaveChallenge.mockResolvedValue({ data: { success: true } });\r\n    mockUpdateChallengeProgress.mockResolvedValue({ data: { success: true } });\r\n  });\r\n\r\n  it('renders challenge details correctly', async () => {\r\n    const { getByText } = render(<ChallengeDetailScreen />);\r\n    \r\n    // 데이터 로딩이 완료될 때까지 대기\r\n    await waitFor(() => expect(mockGetChallengeDetails).toHaveBeenCalledTimes(1), { timeout: 5000 });\r\n    \r\n    // 비동기 작업 완료 후 UI 업데이트 대기\r\n    await waitFor(() => expect(getByText('7일간의 감사 일기')).toBeTruthy(), { timeout: 5000 });\r\n    expect(getByText('매일 감사한 일 3가지를 기록해보세요.')).toBeTruthy();\r\n    await waitFor(() => expect(getByText('챌린지 참여하기')).toBeTruthy(), { timeout: 5000 });\r\n  }, 30000);\r\n\r\n  it('handles error state', async () => {\r\n    mockGetChallengeDetails.mockRejectedValueOnce(new Error('API 오류'));\r\n    \r\n    const { getByText } = render(<ChallengeDetailScreen />);\r\n    \r\n    // 에러 상태가 표시될 때까지 대기\r\n    await waitFor(() => expect(mockGetChallengeDetails).toHaveBeenCalledTimes(1), { timeout: 5000 });\r\n    await waitFor(() => expect(getByText('챌린지 정보를 불러오는 중 오류가 발생했습니다.')).toBeTruthy(), { timeout: 5000 });\r\n    await waitFor(() => expect(getByText('다시 시도')).toBeTruthy(), { timeout: 5000 });\r\n  }, 30000);\r\n\r\n  it('handles participation toggle', async () => {\r\n    const { getByText } = render(<ChallengeDetailScreen />);\r\n    \r\n    // 데이터 로딩이 완료될 때까지 대기\r\n    await waitFor(() => expect(mockGetChallengeDetails).toHaveBeenCalledTimes(1), { timeout: 5000 });\r\n    \r\n    // 참여 버튼이 렌더링될 때까지 대기\r\n    await waitFor(() => expect(getByText('챌린지 참여하기')).toBeTruthy(), { timeout: 5000 });\r\n    \r\n    // 참여 버튼 클릭\r\n    fireEvent.press(getByText('챌린지 참여하기'));\r\n    \r\n    // API 호출 확인\r\n    await waitFor(() => expect(mockParticipateInChallenge).toHaveBeenCalledWith(1), { timeout: 5000 });\r\n    expect(Alert.alert).toHaveBeenCalledWith('성공', '챌린지에 참여했습니다.');\r\n  }, 30000);\r\n\r\n  it('renders the record emotion button when participating', async () => {\r\n    // 참여 중인 챌린지로 설정 (active 상태)\r\n    const currentDate = new Date();\r\n    const futureDate = new Date();\r\n    futureDate.setDate(currentDate.getDate() + 30); // 30일 후 날짜\r\n\r\n    mockGetChallengeDetails.mockResolvedValueOnce({\r\n      data: {\r\n        data: {\r\n          ...mockChallenge.data.data,\r\n          is_participating: true,\r\n          end_date: futureDate.toISOString().split('T')[0] // 종료되지 않은 챌린지로 설정\r\n        }\r\n      }\r\n    });\r\n    \r\n    const { getByText } = render(<ChallengeDetailScreen />);\r\n    \r\n    // 화면이 로드되고 참여 중인 상태의 UI가 표시될 때까지 대기\r\n    await waitFor(() => expect(getByText('챌린지 나가기')).toBeTruthy(), { timeout: 5000 });\r\n    \r\n    // 감정 기록하기 버튼 확인\r\n    await waitFor(() => expect(getByText('감정 기록하기')).toBeTruthy(), { timeout: 5000 });\r\n  }, 30000);\r\n});"],"mappings":"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","ignoreList":[]}