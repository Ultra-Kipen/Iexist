b2094a5c033c48f0f39cde2321d0e86c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function cov_241axnkxpw() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\components\\ErrorBoundary.tsx";
  var hash = "f4023a9da95db9225fb58d558eaf8c6c254b5c86";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\components\\ErrorBoundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 17
        }
      },
      "1": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "2": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 37
        }
      },
      "3": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 33
        }
      },
      "4": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "5": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 43
        }
      },
      "6": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 57
        }
      },
      "7": {
        start: {
          line: 42,
          column: 15
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "8": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "9": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "10": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "11": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 35
        }
      },
      "12": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 69,
          column: 8
        }
      },
      "13": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 31
        }
      },
      "14": {
        start: {
          line: 76,
          column: 15
        },
        end: {
          line: 117,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        },
        loc: {
          start: {
            line: 26,
            column: 64
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        loc: {
          start: {
            line: 30,
            column: 62
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 15
          },
          end: {
            line: 42,
            column: 16
          }
        },
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 48,
            column: 3
          }
        },
        line: 42
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        loc: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 73,
            column: 3
          }
        },
        line: 50
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 6
          },
          end: {
            line: 54,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 6
          },
          end: {
            line: 54,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f4023a9da95db9225fb58d558eaf8c6c254b5c86"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_241axnkxpw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_241axnkxpw();
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var ErrorBoundary = function (_Component) {
  function ErrorBoundary(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ErrorBoundary);
    cov_241axnkxpw().f[0]++;
    cov_241axnkxpw().s[0]++;
    _this = _callSuper(this, ErrorBoundary, [props]);
    _this.resetError = (cov_241axnkxpw().s[7]++, function () {
      cov_241axnkxpw().f[3]++;
      cov_241axnkxpw().s[8]++;
      _this.setState({
        hasError: false,
        error: null,
        errorInfo: null
      });
    });
    cov_241axnkxpw().s[1]++;
    _this.state = {
      hasError: false,
      error: null,
      errorInfo: null
    };
    return _this;
  }
  (0, _inherits2.default)(ErrorBoundary, _Component);
  return (0, _createClass2.default)(ErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      cov_241axnkxpw().f[2]++;
      cov_241axnkxpw().s[3]++;
      this.setState({
        errorInfo: errorInfo
      });
      cov_241axnkxpw().s[4]++;
      if (this.props.onError) {
        cov_241axnkxpw().b[0][0]++;
        cov_241axnkxpw().s[5]++;
        this.props.onError(error, errorInfo);
      } else {
        cov_241axnkxpw().b[0][1]++;
      }
      cov_241axnkxpw().s[6]++;
      console.error('ErrorBoundary 오류:', error, errorInfo);
    }
  }, {
    key: "render",
    value: function render() {
      cov_241axnkxpw().f[4]++;
      cov_241axnkxpw().s[9]++;
      if (this.state.hasError) {
        var _this$state$error;
        cov_241axnkxpw().b[1][0]++;
        cov_241axnkxpw().s[10]++;
        if (this.props.fallback) {
          cov_241axnkxpw().b[2][0]++;
          cov_241axnkxpw().s[11]++;
          return this.props.fallback;
        } else {
          cov_241axnkxpw().b[2][1]++;
        }
        cov_241axnkxpw().s[12]++;
        return (0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.container,
          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.title,
            children: "\uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4"
          }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.description,
            children: "\uC571\uC5D0\uC11C \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uC544\uB798 \uBC84\uD2BC\uC744 \uB20C\uB7EC \uB2E4\uC2DC \uC2DC\uB3C4\uD558\uAC70\uB098 \uC571\uC744 \uC7AC\uC2DC\uC791\uD574 \uC8FC\uC138\uC694."
          }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.errorMessage,
            children: (_this$state$error = this.state.error) == null ? void 0 : _this$state$error.toString()
          }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
            style: styles.button,
            onPress: this.resetError,
            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: styles.buttonText,
              children: "\uB2E4\uC2DC \uC2DC\uB3C4"
            })
          })]
        });
      } else {
        cov_241axnkxpw().b[1][1]++;
      }
      cov_241axnkxpw().s[13]++;
      return this.props.children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error) {
      cov_241axnkxpw().f[1]++;
      cov_241axnkxpw().s[2]++;
      return {
        hasError: true,
        error: error
      };
    }
  }]);
}(_react.Component);
var styles = (cov_241axnkxpw().s[14]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f8f9fa',
    padding: 20
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 10,
    color: '#dc3545'
  },
  description: {
    fontSize: 16,
    marginBottom: 20,
    textAlign: 'center',
    color: '#343a40'
  },
  errorMessage: {
    fontSize: 14,
    marginVertical: 20,
    color: '#6c757d',
    backgroundColor: '#f1f1f1',
    padding: 10,
    borderRadius: 5,
    width: '100%'
  },
  button: {
    backgroundColor: '#007bff',
    paddingHorizontal: 20,
    paddingVertical: 10,
    borderRadius: 5,
    marginTop: 20
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold'
  }
}));
var _default = exports.default = ErrorBoundary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,