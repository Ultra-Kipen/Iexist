9f7169cae1502044ebbc2addc0d9cfa9
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
Object.defineProperty(exports, "useNotification", {
  enumerable: true,
  get: function get() {
    return _NotificationContext.useNotification;
  }
});
exports.useNotificationManager = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _NotificationContext = require("../contexts/NotificationContext");
var _notificationService = _interopRequireDefault(require("../services/api/notificationService"));
function cov_2hi76zudlv() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\hooks\\useNotification.ts";
  var hash = "9643d5bb7a0a405dc6a919e78cba639fcb3ad0a4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\hooks\\useNotification.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 38
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "1": {
        start: {
          line: 10,
          column: 32
        },
        end: {
          line: 10,
          column: 47
        }
      },
      "2": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 57
        }
      },
      "3": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 30
        }
      },
      "4": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 38,
          column: 33
        }
      },
      "5": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 21
        }
      },
      "6": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "7": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "8": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 27,
          column: 82
        }
      },
      "9": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "10": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "11": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "12": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "13": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 34,
          column: 84
        }
      },
      "14": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "15": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 16
        }
      },
      "16": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 51,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 38
          },
          end: {
            line: 9,
            column: 39
          }
        },
        loc: {
          start: {
            line: 9,
            column: 44
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 21,
            column: 42
          }
        },
        loc: {
          start: {
            line: 21,
            column: 82
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 23
          },
          end: {
            line: 34,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 46
          },
          end: {
            line: 34,
            column: 57
          }
        }, {
          start: {
            line: 34,
            column: 60
          },
          end: {
            line: 34,
            column: 84
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9643d5bb7a0a405dc6a919e78cba639fcb3ad0a4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2hi76zudlv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hi76zudlv();
cov_2hi76zudlv().s[0]++;
var useNotificationManager = exports.useNotificationManager = function useNotificationManager() {
  cov_2hi76zudlv().f[0]++;
  var _ref = (cov_2hi76zudlv().s[1]++, (0, _react.useState)(false)),
    _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    loading = _ref2[0],
    setLoading = _ref2[1];
  var _ref3 = (cov_2hi76zudlv().s[2]++, (0, _react.useState)(null)),
    _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
    error = _ref4[0],
    setError = _ref4[1];
  var _ref5 = (cov_2hi76zudlv().s[3]++, (0, _NotificationContext.useNotification)()),
    notifications = _ref5.notifications,
    unreadCount = _ref5.unreadCount,
    contextFetchNotifications = _ref5.fetchNotifications;
  var fetchNotifications = (cov_2hi76zudlv().s[4]++, (0, _react.useCallback)(function () {
    var _ref6 = (0, _asyncToGenerator2.default)(function* (page, limit) {
      cov_2hi76zudlv().f[1]++;
      cov_2hi76zudlv().s[5]++;
      setLoading(true);
      cov_2hi76zudlv().s[6]++;
      setError(null);
      cov_2hi76zudlv().s[7]++;
      try {
        var response = (cov_2hi76zudlv().s[8]++, yield _notificationService.default.getNotifications({
          page: page,
          limit: limit
        }));
        cov_2hi76zudlv().s[9]++;
        yield contextFetchNotifications();
        cov_2hi76zudlv().s[10]++;
        setLoading(false);
        cov_2hi76zudlv().s[11]++;
        return response.data;
      } catch (err) {
        cov_2hi76zudlv().s[12]++;
        setLoading(false);
        var errorMsg = (cov_2hi76zudlv().s[13]++, err instanceof Error ? (cov_2hi76zudlv().b[0][0]++, err.message) : (cov_2hi76zudlv().b[0][1]++, '알림을 불러오는 중 오류가 발생했습니다.'));
        cov_2hi76zudlv().s[14]++;
        setError(errorMsg);
        cov_2hi76zudlv().s[15]++;
        throw err;
      }
    });
    return function (_x, _x2) {
      return _ref6.apply(this, arguments);
    };
  }(), [contextFetchNotifications]));
  cov_2hi76zudlv().s[16]++;
  return {
    notifications: notifications,
    unreadCount: unreadCount,
    loading: loading,
    error: error,
    fetchNotifications: fetchNotifications,
    markAsRead: (0, _NotificationContext.useNotification)().markAsRead,
    markAllAsRead: (0, _NotificationContext.useNotification)().markAllAsRead,
    deleteNotification: (0, _NotificationContext.useNotification)().deleteNotification
  };
};
var _default = exports.default = useNotificationManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,