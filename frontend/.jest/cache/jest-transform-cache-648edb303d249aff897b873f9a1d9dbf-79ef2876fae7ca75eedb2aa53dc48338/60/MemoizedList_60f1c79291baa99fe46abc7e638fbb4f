4bf6584fdc89044dc02e96152401559b
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MemoizedCard = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var MemoizedCardComponent = function MemoizedCardComponent(_ref) {
  var title = _ref.title,
    content = _ref.content,
    imageUrl = _ref.imageUrl,
    onPress = _ref.onPress,
    footer = _ref.footer,
    timestamp = _ref.timestamp,
    authorName = _ref.authorName,
    authorImageUrl = _ref.authorImageUrl,
    _ref$isLiked = _ref.isLiked,
    isLiked = _ref$isLiked === void 0 ? false : _ref$isLiked,
    _ref$likesCount = _ref.likesCount,
    likesCount = _ref$likesCount === void 0 ? 0 : _ref$likesCount,
    _ref$commentsCount = _ref.commentsCount,
    commentsCount = _ref$commentsCount === void 0 ? 0 : _ref$commentsCount,
    onLike = _ref.onLike,
    onComment = _ref.onComment;
  return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
    style: styles.container,
    onPress: onPress,
    activeOpacity: onPress ? 0.7 : 1,
    children: [authorName && (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.authorContainer,
      children: [authorImageUrl && (0, _jsxRuntime.jsx)(_reactNative.Image, {
        source: {
          uri: authorImageUrl
        },
        style: styles.authorImage
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.authorInfo,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.authorName,
          children: authorName
        }), timestamp && (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.timestamp,
          children: timestamp
        })]
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.title,
      children: title
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.content,
      numberOfLines: 3,
      children: content
    }), imageUrl && (0, _jsxRuntime.jsx)(_reactNative.Image, {
      source: {
        uri: imageUrl
      },
      style: styles.image,
      resizeMode: "cover"
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.statsContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.statButton,
        onPress: onLike,
        disabled: !onLike,
        children: (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: [styles.statText, isLiked && styles.likedText],
          children: ["\uC88B\uC544\uC694 ", likesCount]
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.statButton,
        onPress: onComment,
        disabled: !onComment,
        children: (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: styles.statText,
          children: ["\uB313\uAE00 ", commentsCount]
        })
      })]
    }), footer && (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.footer,
      children: footer
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 16,
    marginVertical: 8,
    marginHorizontal: 16,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3
  },
  authorContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12
  },
  authorImage: {
    width: 32,
    height: 32,
    borderRadius: 16,
    marginRight: 8
  },
  authorInfo: {
    flex: 1
  },
  authorName: {
    fontWeight: 'bold',
    fontSize: 14,
    color: '#333'
  },
  timestamp: {
    fontSize: 12,
    color: '#999',
    marginTop: 2
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 8,
    color: '#333'
  },
  content: {
    fontSize: 14,
    color: '#666',
    lineHeight: 20,
    marginBottom: 12
  },
  image: {
    width: '100%',
    height: 200,
    borderRadius: 8,
    marginBottom: 12
  },
  statsContainer: {
    flexDirection: 'row',
    borderTopWidth: 1,
    borderTopColor: '#eee',
    paddingTop: 12
  },
  statButton: {
    flexDirection: 'row',
    alignItems: 'center',
    marginRight: 16,
    paddingVertical: 4
  },
  statText: {
    fontSize: 14,
    color: '#666'
  },
  likedText: {
    color: '#3b82f6',
    fontWeight: 'bold'
  },
  footer: {
    marginTop: 12,
    paddingTop: 12,
    borderTopWidth: 1,
    borderTopColor: '#eee'
  }
});
var MemoizedCard = exports.MemoizedCard = (0, _react.memo)(MemoizedCardComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,