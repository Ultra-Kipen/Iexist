7e5725fb18f3d8bbefd40119f3d5ae73
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _LoadingIndicator = _interopRequireDefault(require("./LoadingIndicator"));
var _TagSelector = _interopRequireDefault(require("./TagSelector"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var TITLE_MAX_LENGTH = 100;
var CONTENT_MAX_LENGTH = 2000;
var ComfortWallForm = function ComfortWallForm(_ref) {
  var onSubmit = _ref.onSubmit,
    _ref$isLoading = _ref.isLoading,
    isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading;
  var _useState = (0, _react.useState)(''),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    title = _useState2[0],
    setTitle = _useState2[1];
  var _useState3 = (0, _react.useState)(''),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    content = _useState4[0],
    setContent = _useState4[1];
  var _useState5 = (0, _react.useState)([]),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    tagIds = _useState6[0],
    setTagIds = _useState6[1];
  var _useState7 = (0, _react.useState)(true),
    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
    isAnonymous = _useState8[0],
    setIsAnonymous = _useState8[1];
  var handleTagSelect = function handleTagSelect(tagId) {
    setTagIds(function (prevTagIds) {
      return [].concat((0, _toConsumableArray2.default)(prevTagIds), [tagId]);
    });
  };
  var handleSubmit = function () {
    var _ref2 = (0, _asyncToGenerator2.default)(function* () {
      if (title.trim().length < 5) {
        _reactNative.Alert.alert('안내', '제목은 5자 이상 입력해주세요.');
        return;
      }
      if (content.trim().length < 20) {
        _reactNative.Alert.alert('안내', '내용은 20자 이상 입력해주세요.');
        return;
      }
      try {
        yield onSubmit({
          title: title.trim(),
          content: content.trim(),
          tag_ids: tagIds,
          is_anonymous: isAnonymous
        });
        setTitle('');
        setContent('');
        setTagIds([]);
        setIsAnonymous(true);
      } catch (error) {
        console.error('게시물 제출 오류:', error);
        _reactNative.Alert.alert('오류', '게시물 작성 중 문제가 발생했습니다. 다시 시도해주세요.');
      }
    });
    return function handleSubmit() {
      return _ref2.apply(this, arguments);
    };
  }();
  return (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
    style: styles.scrollContainer,
    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.container,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.title,
        children: "\uC704\uB85C\uC758 \uBCBD\uC5D0 \uAE00 \uB0A8\uAE30\uAE30"
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.subtitle,
        children: "\uB2F9\uC2E0\uC758 \uACE0\uBBFC\uC744 \uC775\uBA85\uC73C\uB85C \uACF5\uC720\uD558\uACE0 \uC704\uB85C\uC640 \uC870\uC5B8\uC744 \uBC1B\uC544\uBCF4\uC138\uC694."
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.inputContainer,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.label,
          children: "\uC81C\uBAA9"
        }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
          style: styles.titleInput,
          value: title,
          onChangeText: setTitle,
          placeholder: "\uC81C\uBAA9\uC744 \uC785\uB825\uD558\uC138\uC694 (5-100\uC790)",
          maxLength: TITLE_MAX_LENGTH
        }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: styles.charCount,
          children: [title.length, "/", TITLE_MAX_LENGTH]
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.inputContainer,
        children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: styles.label,
          children: ["\uD0DC\uADF8 ", (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.optional,
            children: "(\uC120\uD0DD\uC0AC\uD56D)"
          })]
        }), (0, _jsxRuntime.jsx)(_TagSelector.default, {
          tags: [],
          onTagSelect: handleTagSelect,
          selectedTags: tagIds
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.helperText,
          children: "\uD0DC\uADF8\uB97C \uCD94\uAC00\uD558\uBA74 \uBE44\uC2B7\uD55C \uACE0\uBBFC\uC744 \uAC00\uC9C4 \uC0AC\uB78C\uB4E4\uC774 \uB354 \uC27D\uAC8C \uCC3E\uC744 \uC218 \uC788\uC5B4\uC694."
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.inputContainer,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.label,
          children: "\uB0B4\uC6A9"
        }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
          style: styles.contentInput,
          value: content,
          onChangeText: setContent,
          placeholder: "\uB2F9\uC2E0\uC758 \uACE0\uBBFC\uC744 \uC790\uC720\uB86D\uAC8C \uC801\uC5B4\uC8FC\uC138\uC694 (20-2000\uC790)",
          multiline: true,
          textAlignVertical: "top",
          maxLength: CONTENT_MAX_LENGTH
        }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: styles.charCount,
          children: [content.length, "/", CONTENT_MAX_LENGTH]
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.anonymousContainer,
        children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
          style: [styles.checkbox, isAnonymous && styles.checkboxChecked],
          onPress: function onPress() {
            return setIsAnonymous(!isAnonymous);
          },
          disabled: isLoading,
          children: isAnonymous && (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.checkmark,
            children: "\u2713"
          })
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.anonymousText,
          children: "\uC775\uBA85\uC73C\uB85C \uAC8C\uC2DC\uD558\uAE30"
        })]
      }), (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.noticeContainer,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.noticeText,
          children: "\u26A0\uFE0F \uBD80\uC801\uC808\uD55C \uB0B4\uC6A9\uC774\uB098 \uB0A8\uC744 \uBE44\uBC29\uD558\uB294 \uAE00\uC740 \uC2E0\uACE0\uB420 \uC218 \uC788\uC2B5\uB2C8\uB2E4."
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: [styles.submitButton, (isLoading || title.trim().length < 5 || content.trim().length < 20) && styles.disabledButton],
        onPress: handleSubmit,
        disabled: isLoading || title.trim().length < 5 || content.trim().length < 20,
        children: isLoading ? (0, _jsxRuntime.jsx)(_LoadingIndicator.default, {
          size: "small",
          color: "#FFFFFF"
        }) : (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.submitButtonText,
          children: "\uC791\uC131 \uC644\uB8CC"
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.supportText,
        children: "\uD63C\uC790 \uACE0\uBBFC\uD558\uC9C0 \uB9C8\uC138\uC694. \uC5EC\uAE30\uC5D0 \uACF5\uC720\uD558\uBA74 \uB9CE\uC740 \uC0AC\uB78C\uB4E4\uC774 \uB2F9\uC2E0\uC5D0\uAC8C \uC704\uB85C\uC640 \uC9C0\uC9C0\uB97C \uBCF4\uB0BC \uAC70\uC608\uC694."
      })]
    })
  });
};
var styles = _reactNative.StyleSheet.create({
  scrollContainer: {
    flex: 1,
    backgroundColor: '#F8F9FA'
  },
  container: {
    padding: 16,
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    marginHorizontal: 16,
    marginVertical: 20,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#4A6572',
    textAlign: 'center',
    marginBottom: 8
  },
  subtitle: {
    fontSize: 14,
    color: '#657786',
    textAlign: 'center',
    marginBottom: 24
  },
  inputContainer: {
    marginBottom: 16
  },
  label: {
    fontSize: 16,
    fontWeight: '600',
    color: '#14171A',
    marginBottom: 8
  },
  optional: {
    fontWeight: 'normal',
    fontSize: 14,
    color: '#657786'
  },
  titleInput: {
    height: 48,
    borderWidth: 1,
    borderColor: '#E1E8ED',
    borderRadius: 8,
    paddingHorizontal: 12,
    fontSize: 16,
    backgroundColor: '#F8F9FA'
  },
  contentInput: {
    height: 200,
    borderWidth: 1,
    borderColor: '#E1E8ED',
    borderRadius: 8,
    padding: 12,
    fontSize: 16,
    backgroundColor: '#F8F9FA'
  },
  charCount: {
    fontSize: 12,
    color: '#657786',
    textAlign: 'right',
    marginTop: 4
  },
  helperText: {
    fontSize: 12,
    color: '#657786',
    marginTop: 4
  },
  anonymousContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 16
  },
  checkbox: {
    width: 24,
    height: 24,
    borderWidth: 2,
    borderColor: '#4A6572',
    borderRadius: 4,
    marginRight: 8,
    alignItems: 'center',
    justifyContent: 'center'
  },
  checkboxChecked: {
    backgroundColor: '#4A6572'
  },
  checkmark: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold'
  },
  anonymousText: {
    fontSize: 16,
    color: '#14171A'
  },
  noticeContainer: {
    backgroundColor: '#FFF3CD',
    padding: 12,
    borderRadius: 8,
    marginBottom: 16
  },
  noticeText: {
    fontSize: 14,
    color: '#856404'
  },
  submitButton: {
    backgroundColor: '#4A6572',
    borderRadius: 8,
    padding: 16,
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 16
  },
  disabledButton: {
    backgroundColor: '#A9A9A9'
  },
  submitButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold'
  },
  supportText: {
    fontSize: 14,
    color: '#657786',
    textAlign: 'center',
    fontStyle: 'italic'
  }
});
var _default = exports.default = ComfortWallForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,