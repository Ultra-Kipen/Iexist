9e72be817596f818f5c7244a8f636400
_getJestObj().mock("../../src/services/api/postService", function () {
  return {
    getMyPosts: jest.fn(function () {
      return Promise.resolve({
        data: {
          posts: [{
            post_id: 1,
            content: '첫 번째 테스트 게시물입니다.',
            emotion_summary: '행복',
            like_count: 5,
            comment_count: 2,
            created_at: '2025-03-01T12:00:00Z'
          }]
        }
      });
    }),
    deletePost: jest.fn(function () {
      return Promise.resolve({
        data: {
          success: true
        }
      });
    })
  };
});
_getJestObj().mock('react-native-paper', function () {
  var MockButton = 'Button';
  var MockChip = 'Chip';
  var MockPortal = 'Portal';
  var MockCard = 'Card';
  MockCard.Content = 'Card.Content';
  MockCard.Actions = 'Card.Actions';
  var MockDialog = 'Dialog';
  MockDialog.Title = 'Dialog.Title';
  MockDialog.Content = 'Dialog.Content';
  MockDialog.Actions = 'Dialog.Actions';
  return {
    Button: MockButton,
    Card: MockCard,
    Chip: MockChip,
    Dialog: MockDialog,
    Portal: MockPortal
  };
});
_getJestObj().mock('react-native-vector-icons/MaterialCommunityIcons', function () {
  return 'Icon';
});
_getJestObj().mock('react-native-safe-area-context', function () {
  return {
    SafeAreaView: 'SafeAreaView'
  };
});
_getJestObj().mock('@react-navigation/native', function () {
  return {
    useNavigation: function useNavigation() {
      return {
        navigate: mockNavigate,
        goBack: jest.fn(),
        addListener: mockAddListener
      };
    }
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _MyPostsScreen = _interopRequireDefault(require("../../src/screens/MyPostsScreen"));
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockNavigate = jest.fn();
var mockAddListener = jest.fn(function () {
  return jest.fn();
});
describe('MyPostsScreen', function () {
  it('imports without crashing', function () {
    expect(_MyPostsScreen.default).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJnZXRNeVBvc3RzIiwiamVzdCIsImZuIiwiUHJvbWlzZSIsInJlc29sdmUiLCJkYXRhIiwicG9zdHMiLCJwb3N0X2lkIiwiY29udGVudCIsImVtb3Rpb25fc3VtbWFyeSIsImxpa2VfY291bnQiLCJjb21tZW50X2NvdW50IiwiY3JlYXRlZF9hdCIsImRlbGV0ZVBvc3QiLCJzdWNjZXNzIiwiTW9ja0J1dHRvbiIsIk1vY2tDaGlwIiwiTW9ja1BvcnRhbCIsIk1vY2tDYXJkIiwiQ29udGVudCIsIkFjdGlvbnMiLCJNb2NrRGlhbG9nIiwiVGl0bGUiLCJCdXR0b24iLCJDYXJkIiwiQ2hpcCIsIkRpYWxvZyIsIlBvcnRhbCIsIlNhZmVBcmVhVmlldyIsInVzZU5hdmlnYXRpb24iLCJuYXZpZ2F0ZSIsIm1vY2tOYXZpZ2F0ZSIsImdvQmFjayIsImFkZExpc3RlbmVyIiwibW9ja0FkZExpc3RlbmVyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfTXlQb3N0c1NjcmVlbiIsIl9yZXF1aXJlIiwiZGVzY3JpYmUiLCJpdCIsImV4cGVjdCIsIk15UG9zdHNTY3JlZW4iLCJ0b0JlRGVmaW5lZCJdLCJzb3VyY2VzIjpbIk15UG9zdHNTY3JlZW4udGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gX19URVNUU19fL3NjcmVlbnMvTXlQb3N0c1NjcmVlbi50ZXN0LnRzeFxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCBNeVBvc3RzU2NyZWVuIGZyb20gJy4uLy4uL3NyYy9zY3JlZW5zL015UG9zdHNTY3JlZW4nO1xyXG5cclxuLy8g7ISc67mE7IqkIOuqqO2CuVxyXG5qZXN0Lm1vY2soJy4uLy4uL3NyYy9zZXJ2aWNlcy9hcGkvcG9zdFNlcnZpY2UnLCAoKSA9PiAoe1xyXG4gIGdldE15UG9zdHM6IGplc3QuZm4oKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHtcclxuICAgIGRhdGE6IHtcclxuICAgICAgcG9zdHM6IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICBwb3N0X2lkOiAxLFxyXG4gICAgICAgICAgY29udGVudDogJ+yyqyDrsojsp7gg7YWM7Iqk7Yq4IOqyjOyLnOusvOyeheuLiOuLpC4nLFxyXG4gICAgICAgICAgZW1vdGlvbl9zdW1tYXJ5OiAn7ZaJ67O1JyxcclxuICAgICAgICAgIGxpa2VfY291bnQ6IDUsXHJcbiAgICAgICAgICBjb21tZW50X2NvdW50OiAyLFxyXG4gICAgICAgICAgY3JlYXRlZF9hdDogJzIwMjUtMDMtMDFUMTI6MDA6MDBaJyxcclxuICAgICAgICB9XHJcbiAgICAgIF1cclxuICAgIH1cclxuICB9KSksXHJcbiAgZGVsZXRlUG9zdDogamVzdC5mbigoKSA9PiBQcm9taXNlLnJlc29sdmUoeyBkYXRhOiB7IHN1Y2Nlc3M6IHRydWUgfSB9KSlcclxufSkpO1xyXG5cclxuLy8g67O17ZWpIOy7tO2PrOuEjO2KuCDrqqjtgrlcclxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUtcGFwZXInLCAoKSA9PiB7XHJcbiAgLy8g6rCBIOy7tO2PrOuEjO2KuOulvCDrrLjsnpDsl7TroZwg66qo7YK5XHJcbiAgY29uc3QgTW9ja0J1dHRvbiA9ICdCdXR0b24nO1xyXG4gIGNvbnN0IE1vY2tDaGlwID0gJ0NoaXAnO1xyXG4gIGNvbnN0IE1vY2tQb3J0YWwgPSAnUG9ydGFsJztcclxuICBcclxuICAvLyBDYXJkIOy7tO2PrOuEjO2KuOulvCDtlajsiJjroZwg66qo7YK5XHJcbiAgY29uc3QgTW9ja0NhcmQgPSAnQ2FyZCc7XHJcbiAgTW9ja0NhcmQuQ29udGVudCA9ICdDYXJkLkNvbnRlbnQnO1xyXG4gIE1vY2tDYXJkLkFjdGlvbnMgPSAnQ2FyZC5BY3Rpb25zJztcclxuICBcclxuICAvLyBEaWFsb2cg7Lu07Y+s64SM7Yq466W8IO2VqOyImOuhnCDrqqjtgrlcclxuICBjb25zdCBNb2NrRGlhbG9nID0gJ0RpYWxvZyc7XHJcbiAgTW9ja0RpYWxvZy5UaXRsZSA9ICdEaWFsb2cuVGl0bGUnO1xyXG4gIE1vY2tEaWFsb2cuQ29udGVudCA9ICdEaWFsb2cuQ29udGVudCc7XHJcbiAgTW9ja0RpYWxvZy5BY3Rpb25zID0gJ0RpYWxvZy5BY3Rpb25zJztcclxuICBcclxuICByZXR1cm4ge1xyXG4gICAgQnV0dG9uOiBNb2NrQnV0dG9uLFxyXG4gICAgQ2FyZDogTW9ja0NhcmQsXHJcbiAgICBDaGlwOiBNb2NrQ2hpcCxcclxuICAgIERpYWxvZzogTW9ja0RpYWxvZyxcclxuICAgIFBvcnRhbDogTW9ja1BvcnRhbFxyXG4gIH07XHJcbn0pO1xyXG5cclxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUtdmVjdG9yLWljb25zL01hdGVyaWFsQ29tbXVuaXR5SWNvbnMnLCAoKSA9PiAnSWNvbicpO1xyXG5qZXN0Lm1vY2soJ3JlYWN0LW5hdGl2ZS1zYWZlLWFyZWEtY29udGV4dCcsICgpID0+ICh7IFNhZmVBcmVhVmlldzogJ1NhZmVBcmVhVmlldycgfSkpO1xyXG5cclxuLy8g64Sk67mE6rKM7J207IWYIOuqqO2CuVxyXG5jb25zdCBtb2NrTmF2aWdhdGUgPSBqZXN0LmZuKCk7XHJcbmNvbnN0IG1vY2tBZGRMaXN0ZW5lciA9IGplc3QuZm4oKCkgPT4gamVzdC5mbigpKTtcclxuXHJcbmplc3QubW9jaygnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJywgKCkgPT4gKHtcclxuICB1c2VOYXZpZ2F0aW9uOiAoKSA9PiAoe1xyXG4gICAgbmF2aWdhdGU6IG1vY2tOYXZpZ2F0ZSxcclxuICAgIGdvQmFjazogamVzdC5mbigpLFxyXG4gICAgYWRkTGlzdGVuZXI6IG1vY2tBZGRMaXN0ZW5lcixcclxuICB9KSxcclxufSkpO1xyXG5cclxuLy8g6rCE64uo7ZWcIO2FjOyKpO2KuFxyXG5kZXNjcmliZSgnTXlQb3N0c1NjcmVlbicsICgpID0+IHtcclxuICBpdCgnaW1wb3J0cyB3aXRob3V0IGNyYXNoaW5nJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KE15UG9zdHNTY3JlZW4pLnRvQmVEZWZpbmVkKCk7XHJcbiAgfSk7XHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBTUFBLFdBQUEsR0FBS0MsSUFBSSx1Q0FBdUM7RUFBQSxPQUFPO0lBQ3JEQyxVQUFVLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxDQUFDO01BQUEsT0FBTUMsT0FBTyxDQUFDQyxPQUFPLENBQUM7UUFDeENDLElBQUksRUFBRTtVQUNKQyxLQUFLLEVBQUUsQ0FDTDtZQUNFQyxPQUFPLEVBQUUsQ0FBQztZQUNWQyxPQUFPLEVBQUUsa0JBQWtCO1lBQzNCQyxlQUFlLEVBQUUsSUFBSTtZQUNyQkMsVUFBVSxFQUFFLENBQUM7WUFDYkMsYUFBYSxFQUFFLENBQUM7WUFDaEJDLFVBQVUsRUFBRTtVQUNkLENBQUM7UUFFTDtNQUNGLENBQUMsQ0FBQztJQUFBLEVBQUM7SUFDSEMsVUFBVSxFQUFFWixJQUFJLENBQUNDLEVBQUUsQ0FBQztNQUFBLE9BQU1DLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDO1FBQUVDLElBQUksRUFBRTtVQUFFUyxPQUFPLEVBQUU7UUFBSztNQUFFLENBQUMsQ0FBQztJQUFBO0VBQ3hFLENBQUM7QUFBQSxDQUFDLENBQUM7QUFHSGhCLFdBQUEsR0FBS0MsSUFBSSxDQUFDLG9CQUFvQixFQUFFLFlBQU07RUFFcEMsSUFBTWdCLFVBQVUsR0FBRyxRQUFRO0VBQzNCLElBQU1DLFFBQVEsR0FBRyxNQUFNO0VBQ3ZCLElBQU1DLFVBQVUsR0FBRyxRQUFRO0VBRzNCLElBQU1DLFFBQVEsR0FBRyxNQUFNO0VBQ3ZCQSxRQUFRLENBQUNDLE9BQU8sR0FBRyxjQUFjO0VBQ2pDRCxRQUFRLENBQUNFLE9BQU8sR0FBRyxjQUFjO0VBR2pDLElBQU1DLFVBQVUsR0FBRyxRQUFRO0VBQzNCQSxVQUFVLENBQUNDLEtBQUssR0FBRyxjQUFjO0VBQ2pDRCxVQUFVLENBQUNGLE9BQU8sR0FBRyxnQkFBZ0I7RUFDckNFLFVBQVUsQ0FBQ0QsT0FBTyxHQUFHLGdCQUFnQjtFQUVyQyxPQUFPO0lBQ0xHLE1BQU0sRUFBRVIsVUFBVTtJQUNsQlMsSUFBSSxFQUFFTixRQUFRO0lBQ2RPLElBQUksRUFBRVQsUUFBUTtJQUNkVSxNQUFNLEVBQUVMLFVBQVU7SUFDbEJNLE1BQU0sRUFBRVY7RUFDVixDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUZuQixXQUFBLEdBQUtDLElBQUksQ0FBQyxrREFBa0QsRUFBRTtFQUFBLE9BQU0sTUFBTTtBQUFBLEVBQUM7QUFDM0VELFdBQUEsR0FBS0MsSUFBSSxDQUFDLGdDQUFnQyxFQUFFO0VBQUEsT0FBTztJQUFFNkIsWUFBWSxFQUFFO0VBQWUsQ0FBQztBQUFBLENBQUMsQ0FBQztBQU1yRjlCLFdBQUEsR0FBS0MsSUFBSSxDQUFDLDBCQUEwQixFQUFFO0VBQUEsT0FBTztJQUMzQzhCLGFBQWEsRUFBRSxTQUFmQSxhQUFhQSxDQUFBO01BQUEsT0FBUztRQUNwQkMsUUFBUSxFQUFFQyxZQUFZO1FBQ3RCQyxNQUFNLEVBQUUvQixJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO1FBQ2pCK0IsV0FBVyxFQUFFQztNQUNmLENBQUM7SUFBQTtFQUNILENBQUM7QUFBQSxDQUFDLENBQUM7QUFBQyxJQUFBQyxzQkFBQSxHQUFBQyxPQUFBO0FBN0RKLElBQUFDLGNBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUE0RCxTQUFBdEMsWUFBQTtFQUFBLElBQUF3QyxRQUFBLEdBQUFGLE9BQUE7SUFBQW5DLElBQUEsR0FBQXFDLFFBQUEsQ0FBQXJDLElBQUE7RUFBQUgsV0FBQSxZQUFBQSxZQUFBO0lBQUEsT0FBQUcsSUFBQTtFQUFBO0VBQUEsT0FBQUEsSUFBQTtBQUFBO0FBb0Q1RCxJQUFNOEIsWUFBWSxHQUFHOUIsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztBQUM5QixJQUFNZ0MsZUFBZSxHQUFHakMsSUFBSSxDQUFDQyxFQUFFLENBQUM7RUFBQSxPQUFNRCxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0FBQUEsRUFBQztBQVdoRHFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBTTtFQUM5QkMsRUFBRSxDQUFDLDBCQUEwQixFQUFFLFlBQU07SUFDbkNDLE1BQU0sQ0FBQ0Msc0JBQWEsQ0FBQyxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUNyQyxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=