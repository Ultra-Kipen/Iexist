534ce2546b37cfb064aefba523f8127b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _client = _interopRequireDefault(require("./client"));
var authService = {
  login: function () {
    var _login = (0, _asyncToGenerator2.default)(function* (credentials) {
      return yield _client.default.post('/auth/login', credentials);
    });
    function login(_x) {
      return _login.apply(this, arguments);
    }
    return login;
  }(),
  register: function () {
    var _register = (0, _asyncToGenerator2.default)(function* (data) {
      return yield _client.default.post('/auth/register', data);
    });
    function register(_x2) {
      return _register.apply(this, arguments);
    }
    return register;
  }(),
  logout: function () {
    var _logout = (0, _asyncToGenerator2.default)(function* () {
      return yield _client.default.post('/auth/logout');
    });
    function logout() {
      return _logout.apply(this, arguments);
    }
    return logout;
  }(),
  refreshToken: function () {
    var _refreshToken = (0, _asyncToGenerator2.default)(function* (oldToken) {
      return yield _client.default.post('/auth/refresh', {
        token: oldToken
      });
    });
    function refreshToken(_x3) {
      return _refreshToken.apply(this, arguments);
    }
    return refreshToken;
  }(),
  forgotPassword: function () {
    var _forgotPassword = (0, _asyncToGenerator2.default)(function* (email) {
      return yield _client.default.post('/users/forgot-password', {
        email: email
      });
    });
    function forgotPassword(_x4) {
      return _forgotPassword.apply(this, arguments);
    }
    return forgotPassword;
  }(),
  resetPassword: function () {
    var _resetPassword = (0, _asyncToGenerator2.default)(function* (token, newPassword) {
      return yield _client.default.post('/users/reset-password', {
        token: token,
        newPassword: newPassword
      });
    });
    function resetPassword(_x5, _x6) {
      return _resetPassword.apply(this, arguments);
    }
    return resetPassword;
  }(),
  getProfile: function () {
    var _getProfile = (0, _asyncToGenerator2.default)(function* () {
      return yield _client.default.get('/users/profile');
    });
    function getProfile() {
      return _getProfile.apply(this, arguments);
    }
    return getProfile;
  }(),
  updateProfile: function () {
    var _updateProfile = (0, _asyncToGenerator2.default)(function* (data) {
      return yield _client.default.put('/users/profile', data);
    });
    function updateProfile(_x7) {
      return _updateProfile.apply(this, arguments);
    }
    return updateProfile;
  }()
};
var _default = exports.default = authService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2xpZW50IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJhdXRoU2VydmljZSIsImxvZ2luIiwiX2xvZ2luIiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwiZGVmYXVsdCIsImNyZWRlbnRpYWxzIiwiYXBpQ2xpZW50IiwicG9zdCIsIl94IiwiYXBwbHkiLCJhcmd1bWVudHMiLCJyZWdpc3RlciIsIl9yZWdpc3RlciIsImRhdGEiLCJfeDIiLCJsb2dvdXQiLCJfbG9nb3V0IiwicmVmcmVzaFRva2VuIiwiX3JlZnJlc2hUb2tlbiIsIm9sZFRva2VuIiwidG9rZW4iLCJfeDMiLCJmb3Jnb3RQYXNzd29yZCIsIl9mb3Jnb3RQYXNzd29yZCIsImVtYWlsIiwiX3g0IiwicmVzZXRQYXNzd29yZCIsIl9yZXNldFBhc3N3b3JkIiwibmV3UGFzc3dvcmQiLCJfeDUiLCJfeDYiLCJnZXRQcm9maWxlIiwiX2dldFByb2ZpbGUiLCJnZXQiLCJ1cGRhdGVQcm9maWxlIiwiX3VwZGF0ZVByb2ZpbGUiLCJwdXQiLCJfeDciLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJhdXRoU2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc2VydmljZXMvYXBpL2F1dGhTZXJ2aWNlLnRzXHJcblxyXG5pbXBvcnQgYXBpQ2xpZW50IGZyb20gJy4vY2xpZW50JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTG9naW5DcmVkZW50aWFscyB7XHJcbiAgZW1haWw6IHN0cmluZztcclxuICBwYXNzd29yZDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJlZ2lzdGVyRGF0YSB7XHJcbiAgdXNlcm5hbWU6IHN0cmluZztcclxuICBlbWFpbDogc3RyaW5nO1xyXG4gIHBhc3N3b3JkOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXV0aFJlc3BvbnNlIHtcclxuICBzdGF0dXM6IHN0cmluZztcclxuICBtZXNzYWdlOiBzdHJpbmc7XHJcbiAgZGF0YToge1xyXG4gICAgdG9rZW46IHN0cmluZztcclxuICAgIHVzZXI6IHtcclxuICAgICAgdXNlcl9pZDogbnVtYmVyO1xyXG4gICAgICB1c2VybmFtZTogc3RyaW5nO1xyXG4gICAgICBlbWFpbDogc3RyaW5nO1xyXG4gICAgICBuaWNrbmFtZT86IHN0cmluZztcclxuICAgIH07XHJcbiAgfTtcclxufVxyXG5cclxuY29uc3QgYXV0aFNlcnZpY2UgPSB7XHJcbiAgbG9naW46IGFzeW5jIChjcmVkZW50aWFsczogTG9naW5DcmVkZW50aWFscykgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5wb3N0PEF1dGhSZXNwb25zZT4oJy9hdXRoL2xvZ2luJywgY3JlZGVudGlhbHMpO1xyXG4gIH0sXHJcbiAgXHJcbiAgcmVnaXN0ZXI6IGFzeW5jIChkYXRhOiBSZWdpc3RlckRhdGEpID0+IHtcclxuICAgIHJldHVybiBhd2FpdCBhcGlDbGllbnQucG9zdDxBdXRoUmVzcG9uc2U+KCcvYXV0aC9yZWdpc3RlcicsIGRhdGEpO1xyXG4gIH0sXHJcbiAgXHJcbiAgbG9nb3V0OiBhc3luYyAoKSA9PiB7XHJcbiAgICByZXR1cm4gYXdhaXQgYXBpQ2xpZW50LnBvc3QoJy9hdXRoL2xvZ291dCcpO1xyXG4gIH0sXHJcbiAgXHJcbiAgcmVmcmVzaFRva2VuOiBhc3luYyAob2xkVG9rZW46IHN0cmluZykgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5wb3N0PEF1dGhSZXNwb25zZT4oJy9hdXRoL3JlZnJlc2gnLCB7IHRva2VuOiBvbGRUb2tlbiB9KTtcclxuICB9LFxyXG4gIFxyXG4gIGZvcmdvdFBhc3N3b3JkOiBhc3luYyAoZW1haWw6IHN0cmluZykgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5wb3N0KCcvdXNlcnMvZm9yZ290LXBhc3N3b3JkJywgeyBlbWFpbCB9KTtcclxuICB9LFxyXG4gIFxyXG4gIHJlc2V0UGFzc3dvcmQ6IGFzeW5jICh0b2tlbjogc3RyaW5nLCBuZXdQYXNzd29yZDogc3RyaW5nKSA9PiB7XHJcbiAgICByZXR1cm4gYXdhaXQgYXBpQ2xpZW50LnBvc3QoJy91c2Vycy9yZXNldC1wYXNzd29yZCcsIHsgdG9rZW4sIG5ld1Bhc3N3b3JkIH0pO1xyXG4gIH0sXHJcbiAgXHJcbiAgZ2V0UHJvZmlsZTogYXN5bmMgKCkgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5nZXQoJy91c2Vycy9wcm9maWxlJyk7XHJcbiAgfSxcclxuICBcclxuICB1cGRhdGVQcm9maWxlOiBhc3luYyAoZGF0YTogYW55KSA9PiB7XHJcbiAgICByZXR1cm4gYXdhaXQgYXBpQ2xpZW50LnB1dCgnL3VzZXJzL3Byb2ZpbGUnLCBkYXRhKTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhdXRoU2VydmljZTsiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLE9BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQTJCQSxJQUFNQyxXQUFXLEdBQUc7RUFDbEJDLEtBQUs7SUFBQSxJQUFBQyxNQUFBLE9BQUFDLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPQyxXQUE2QixFQUFLO01BQzlDLGFBQWFDLGVBQVMsQ0FBQ0MsSUFBSSxDQUFlLGFBQWEsRUFBRUYsV0FBVyxDQUFDO0lBQ3ZFLENBQUM7SUFBQSxTQUZESixLQUFLQSxDQUFBTyxFQUFBO01BQUEsT0FBQU4sTUFBQSxDQUFBTyxLQUFBLE9BQUFDLFNBQUE7SUFBQTtJQUFBLE9BQUxULEtBQUs7RUFBQSxHQUVKO0VBRURVLFFBQVE7SUFBQSxJQUFBQyxTQUFBLE9BQUFULGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPUyxJQUFrQixFQUFLO01BQ3RDLGFBQWFQLGVBQVMsQ0FBQ0MsSUFBSSxDQUFlLGdCQUFnQixFQUFFTSxJQUFJLENBQUM7SUFDbkUsQ0FBQztJQUFBLFNBRkRGLFFBQVFBLENBQUFHLEdBQUE7TUFBQSxPQUFBRixTQUFBLENBQUFI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