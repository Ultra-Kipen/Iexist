{"version":3,"names":["_getJestObj","mock","getPostById","jest","fn","mockResolvedValue","data","post","getComments","comments","addComment","success","Button","props","_jsxRuntime","jsx","onClick","onPress","disabled","loading","children","SafeAreaView","_interopRequireDefault","require","_react","_reactNative","_PostScreen","_postService","_require","mockPost","post_id","user_id","content","emotion_summary","like_count","comment_count","created_at","Date","toISOString","mockComments","comment_id","is_anonymous","describe","mockRoute","params","postId","mockNavigation","beforeEach","clearAllMocks","postService","it","render","default","route","navigation","expect","toHaveBeenCalledWith","mockRejectedValueOnce","Error"],"sources":["PostScreen.test.tsx"],"sourcesContent":["// __tests__/screens/PostScreen.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport PostScreen from '../../src/screens/PostScreen';\r\nimport postService from '../../src/services/api/postService';\r\n\r\n// 모의 데이터\r\nconst mockPost = {\r\n  post_id: 1,\r\n  user_id: 101,\r\n  content: '테스트 게시물 내용입니다.',\r\n  emotion_summary: '행복',\r\n  like_count: 5,\r\n  comment_count: 2,\r\n  created_at: new Date().toISOString(),\r\n};\r\n\r\nconst mockComments = [\r\n  {\r\n    comment_id: 1,\r\n    user_id: 102,\r\n    content: '좋은 글이네요!',\r\n    is_anonymous: false,\r\n    created_at: new Date().toISOString()\r\n  }\r\n];\r\n\r\n// postService 모킹\r\njest.mock('../../src/services/api/postService', () => ({\r\n  getPostById: jest.fn().mockResolvedValue({ data: { post: {} } }),\r\n  getComments: jest.fn().mockResolvedValue({ data: { comments: [] } }),\r\n  addComment: jest.fn().mockResolvedValue({ data: { success: true } }),\r\n}));\r\n\r\n// React Native Vector Icons 모킹\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'Icon');\r\n\r\n// React Native Paper 모킹\r\njest.mock('react-native-paper', () => ({\r\n  Button: (props: { children: React.ReactNode; onPress?: () => void; loading?: boolean; disabled?: boolean }) => \r\n    <button data-testid=\"button\" onClick={props.onPress} disabled={props.disabled || props.loading}>\r\n      {props.loading ? 'Loading...' : props.children}\r\n    </button>,\r\n}));\r\n\r\n// React Native Safe Area Context 모킹\r\njest.mock('react-native-safe-area-context', () => ({\r\n  SafeAreaView: (props: { children: React.ReactNode }) => <div>{props.children}</div>,\r\n}));\r\n\r\ndescribe('PostScreen', () => {\r\n  const mockRoute = {\r\n    params: {\r\n      postId: 1,\r\n    },\r\n  };\r\n  \r\n  const mockNavigation = {};\r\n  \r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // API 응답 모킹 - 즉시 해결되는 Promise\r\n    (postService.getPostById as jest.Mock).mockResolvedValue({\r\n      data: { post: mockPost }\r\n    });\r\n    \r\n    (postService.getComments as jest.Mock).mockResolvedValue({\r\n      data: { comments: mockComments }\r\n    });\r\n  });\r\n  \r\n  it('renders the component without crashing', () => {\r\n    render(\r\n      <PostScreen route={mockRoute} navigation={mockNavigation} />\r\n    );\r\n    \r\n    // API 호출 확인\r\n    expect(postService.getPostById).toHaveBeenCalledWith(1);\r\n    expect(postService.getComments).toHaveBeenCalledWith(1);\r\n  });\r\n  \r\n  it('handles error state when API fails', () => {\r\n    // API 오류 모킹\r\n    (postService.getPostById as jest.Mock).mockRejectedValueOnce(new Error('API 오류'));\r\n    \r\n    render(\r\n      <PostScreen route={mockRoute} navigation={mockNavigation} />\r\n    );\r\n    \r\n    // API 호출 확인\r\n    expect(postService.getPostById).toHaveBeenCalledWith(1);\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}