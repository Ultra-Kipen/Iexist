{"version":3,"names":["_client","_interopRequireDefault","require","cov_1qs0g3kyto","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","goalService","getGoals","_getGoals","_asyncToGenerator2","default","params","apiClient","get","_x","apply","arguments","getGoalById","_getGoalById","goalId","_x2","createGoal","_createGoal","data","post","_x3","updateGoalProgress","_updateGoalProgress","progress","put","_x4","_x5","deleteGoal","_deleteGoal","delete","_x6","getGoalStats","_getGoalStats","_x7","_default","exports"],"sources":["goalService.ts"],"sourcesContent":["// src/services/api/goalService.ts\r\n\r\nimport apiClient from './client';\r\n\r\nexport interface Goal {\r\n  goal_id: number;\r\n  user_id: number;\r\n  target_emotion_id: number;\r\n  emotion_name: string;\r\n  emotion_color: string;\r\n  start_date: string;\r\n  end_date: string;\r\n  progress: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface GoalCreateData {\r\n  target_emotion_id: number;\r\n  start_date: string;\r\n  end_date: string;\r\n}\r\n\r\nconst goalService = {\r\n  getGoals: async (params?: { \r\n    active_only?: boolean;\r\n    page?: number;\r\n    limit?: number;\r\n  }) => {\r\n    return await apiClient.get<{ \r\n      status: string; \r\n      data: Goal[];\r\n      pagination?: {\r\n        total: number;\r\n        page: number;\r\n        limit: number;\r\n      }\r\n    }>('/goals', { params });\r\n  },\r\n  \r\n  getGoalById: async (goalId: number) => {\r\n    return await apiClient.get<{ status: string; data: Goal }>(\r\n      `/goals/${goalId}`\r\n    );\r\n  },\r\n  \r\n  createGoal: async (data: GoalCreateData) => {\r\n    return await apiClient.post<{ status: string; data: Goal }>(\r\n      '/goals', \r\n      data\r\n    );\r\n  },\r\n  \r\n  updateGoalProgress: async (goalId: number, progress: number) => {\r\n    return await apiClient.put<{ status: string; message: string }>(\r\n      `/goals/${goalId}/progress`,\r\n      { progress }\r\n    );\r\n  },\r\n  \r\n  deleteGoal: async (goalId: number) => {\r\n    return await apiClient.delete<{ status: string; message: string }>(\r\n      `/goals/${goalId}`\r\n    );\r\n  },\r\n  \r\n  getGoalStats: async (params?: { \r\n    start_date?: string;\r\n    end_date?: string;\r\n  }) => {\r\n    return await apiClient.get<{ \r\n      status: string; \r\n      data: {\r\n        completed_goals: number;\r\n        active_goals: number;\r\n        average_progress: number;\r\n        most_targeted_emotion: {\r\n          emotion_id: number;\r\n          name: string;\r\n          count: number;\r\n        };\r\n      }\r\n    }>('/goals/stats', { params });\r\n  }\r\n};\r\n\r\nexport default goalService;"],"mappings":"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","ignoreList":[]}