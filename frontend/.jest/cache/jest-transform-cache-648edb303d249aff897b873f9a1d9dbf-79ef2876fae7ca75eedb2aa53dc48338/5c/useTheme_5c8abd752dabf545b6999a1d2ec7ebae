ba79843f0f184b40b0a4b9b12bb2ea03
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTheme = exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactNative = require("react-native");
var _ThemeContext = require("../contexts/ThemeContext");
var _theme = require("../constants/theme");
var _useLocalStorage3 = _interopRequireDefault(require("./useLocalStorage"));
var _constants = require("../constants");
var useTheme = exports.useTheme = function useTheme() {
  var context = (0, _react.useContext)(_ThemeContext.ThemeContext);
  var _useLocalStorage = (0, _useLocalStorage3.default)(_constants.APP_CONSTANTS.STORAGE_KEYS.THEME, _theme.DEFAULT_THEME),
    _useLocalStorage2 = (0, _slicedToArray2.default)(_useLocalStorage, 2),
    storedTheme = _useLocalStorage2[0],
    setStoredTheme = _useLocalStorage2[1];
  if (!context) {
    throw new Error('useTheme must be used within a ThemeProvider');
  }
  var themeType = context.theme,
    setTheme = context.setTheme;
  var getSystemTheme = (0, _react.useCallback)(function () {
    return _reactNative.Appearance.getColorScheme() || 'light';
  }, []);
  var changeTheme = (0, _react.useCallback)(function () {
    var _ref = (0, _asyncToGenerator2.default)(function* (newTheme) {
      yield setStoredTheme(newTheme);
      setTheme(newTheme === 'system' ? getSystemTheme() : newTheme);
    });
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), [getSystemTheme, setStoredTheme, setTheme]);
  (0, _react.useEffect)(function () {
    if (storedTheme === 'system') {
      setTheme(getSystemTheme());
      var subscription = _reactNative.Appearance.addChangeListener(function (_ref2) {
        var colorScheme = _ref2.colorScheme;
        if (colorScheme) {
          setTheme(colorScheme);
        }
      });
      return function () {
        subscription.remove();
      };
    }
  }, [getSystemTheme, setTheme, storedTheme]);
  (0, _react.useEffect)(function () {
    if (storedTheme) {
      setTheme(storedTheme === 'system' ? getSystemTheme() : storedTheme);
    }
  }, [getSystemTheme, setTheme, storedTheme]);
  return {
    theme: _theme.THEMES[themeType],
    themeType: themeType,
    themeSetting: storedTheme,
    isDarkMode: themeType === 'dark',
    changeTheme: changeTheme,
    getSystemTheme: getSystemTheme
  };
};
var _default = exports.default = useTheme;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX3JlYWN0TmF0aXZlIiwiX1RoZW1lQ29udGV4dCIsIl90aGVtZSIsIl91c2VMb2NhbFN0b3JhZ2UzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9jb25zdGFudHMiLCJ1c2VUaGVtZSIsImV4cG9ydHMiLCJjb250ZXh0IiwidXNlQ29udGV4dCIsIlRoZW1lQ29udGV4dCIsIl91c2VMb2NhbFN0b3JhZ2UiLCJ1c2VMb2NhbFN0b3JhZ2UiLCJBUFBfQ09OU1RBTlRTIiwiU1RPUkFHRV9LRVlTIiwiVEhFTUUiLCJERUZBVUxUX1RIRU1FIiwiX3VzZUxvY2FsU3RvcmFnZTIiLCJfc2xpY2VkVG9BcnJheTIiLCJkZWZhdWx0Iiwic3RvcmVkVGhlbWUiLCJzZXRTdG9yZWRUaGVtZSIsIkVycm9yIiwidGhlbWVUeXBlIiwidGhlbWUiLCJzZXRUaGVtZSIsImdldFN5c3RlbVRoZW1lIiwidXNlQ2FsbGJhY2siLCJBcHBlYXJhbmNlIiwiZ2V0Q29sb3JTY2hlbWUiLCJjaGFuZ2VUaGVtZSIsIl9yZWYiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJuZXdUaGVtZSIsIl94IiwiYXBwbHkiLCJhcmd1bWVudHMiLCJ1c2VFZmZlY3QiLCJzdWJzY3JpcHRpb24iLCJhZGRDaGFuZ2VMaXN0ZW5lciIsIl9yZWYyIiwiY29sb3JTY2hlbWUiLCJyZW1vdmUiLCJUSEVNRVMiLCJ0aGVtZVNldHRpbmciLCJpc0RhcmtNb2RlIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJ1c2VUaGVtZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBob29rcy91c2VUaGVtZS50c1xyXG4vLyDthYzrp4gg6rSA66as66W8IOychO2VnCDsu6TsiqTthYAg7ZuFXHJcbmltcG9ydCB7IHVzZUNvbnRleHQsIHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IEFwcGVhcmFuY2UsIENvbG9yU2NoZW1lTmFtZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCB7IFRoZW1lQ29udGV4dCB9IGZyb20gJy4uL2NvbnRleHRzL1RoZW1lQ29udGV4dCc7XHJcbmltcG9ydCB7IFRoZW1lVHlwZSwgVEhFTUVTLCBERUZBVUxUX1RIRU1FIH0gZnJvbSAnLi4vY29uc3RhbnRzL3RoZW1lJztcclxuaW1wb3J0IHVzZUxvY2FsU3RvcmFnZSBmcm9tICcuL3VzZUxvY2FsU3RvcmFnZSc7XHJcbmltcG9ydCB7IEFQUF9DT05TVEFOVFMgfSBmcm9tICcuLi9jb25zdGFudHMnO1xyXG5leHBvcnQgY29uc3QgdXNlVGhlbWUgPSAoKSA9PiB7XHJcbmNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XHJcbmNvbnN0IFtzdG9yZWRUaGVtZSwgc2V0U3RvcmVkVGhlbWVdID0gdXNlTG9jYWxTdG9yYWdlPFRoZW1lVHlwZT4oXHJcbkFQUF9DT05TVEFOVFMuU1RPUkFHRV9LRVlTLlRIRU1FLFxyXG5ERUZBVUxUX1RIRU1FXHJcbik7XHJcbmlmICghY29udGV4dCkge1xyXG50aHJvdyBuZXcgRXJyb3IoJ3VzZVRoZW1lIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBUaGVtZVByb3ZpZGVyJyk7XHJcbn1cclxuY29uc3QgeyB0aGVtZTogdGhlbWVUeXBlLCBzZXRUaGVtZSB9ID0gY29udGV4dDtcclxuLy8g7Iuc7Iqk7YWcIO2FjOuniCDqsIDsoLjsmKTquLBcclxuY29uc3QgZ2V0U3lzdGVtVGhlbWUgPSB1c2VDYWxsYmFjaygoKTogQ29sb3JTY2hlbWVOYW1lID0+IHtcclxucmV0dXJuIEFwcGVhcmFuY2UuZ2V0Q29sb3JTY2hlbWUoKSB8fCAnbGlnaHQnO1xyXG59LCBbXSk7XHJcbi8vIO2FjOuniCDrs4Dqsr3tlZjquLBcclxuY29uc3QgY2hhbmdlVGhlbWUgPSB1c2VDYWxsYmFjayhcclxuYXN5bmMgKG5ld1RoZW1lOiBUaGVtZVR5cGUpID0+IHtcclxuYXdhaXQgc2V0U3RvcmVkVGhlbWUobmV3VGhlbWUpO1xyXG5zZXRUaGVtZShuZXdUaGVtZSA9PT0gJ3N5c3RlbScgPyBnZXRTeXN0ZW1UaGVtZSgpIGFzIFRoZW1lVHlwZSA6IG5ld1RoZW1lKTtcclxufSxcclxuW2dldFN5c3RlbVRoZW1lLCBzZXRTdG9yZWRUaGVtZSwgc2V0VGhlbWVdXHJcbik7XHJcbi8vIOyLnOyKpO2FnCDthYzrp4gg67OA6rK9IOqwkOyngO2VmOq4sFxyXG51c2VFZmZlY3QoKCkgPT4ge1xyXG5pZiAoc3RvcmVkVGhlbWUgPT09ICdzeXN0ZW0nKSB7XHJcbiAgc2V0VGhlbWUoZ2V0U3lzdGVtVGhlbWUoKSBhcyBUaGVtZVR5cGUpO1xyXG5jb25zdCBzdWJzY3JpcHRpb24gPSBBcHBlYXJhbmNlLmFkZENoYW5nZUxpc3RlbmVyKCh7IGNvbG9yU2NoZW1lIH0pID0+IHtcclxuICBpZiAoY29sb3JTY2hlbWUpIHtcclxuICAgIHNldFRoZW1lKGNvbG9yU2NoZW1lKTtcclxuICB9XHJcbn0pO1xyXG5cclxucmV0dXJuICgpID0+IHtcclxuICBzdWJzY3JpcHRpb24ucmVtb3ZlKCk7XHJcbn07XHJcbn1cclxufSwgW2dldFN5c3RlbVRoZW1lLCBzZXRUaGVtZSwgc3RvcmVkVGhlbWVdKTtcclxuLy8g66Gc7LusIOyKpO2GoOumrOyngOydmCDthYzrp4gg67aI65+s7Jik6riwXHJcbnVzZUVmZmVjdCgoKSA9PiB7XHJcbmlmIChzdG9yZWRUaGVtZSkge1xyXG4gIHNldFRoZW1lKHN0b3JlZFRoZW1lID09PSAnc3lzdGVtJyA/IGdldFN5c3RlbVRoZW1lKCkgYXMgVGhlbWVUeXBlIDogc3RvcmVkVGhlbWUpO1xyXG59XHJcbn0sIFtnZXRTeXN0ZW1UaGVtZSwgc2V0VGhlbWUsIHN0b3JlZFRoZW1lXSk7XHJcbnJldHVybiB7XHJcbnRoZW1lOiBUSEVNRVNbdGhlbWVUeXBlIGFzIGtleW9mIHR5cGVvZiBUSEVNRVNdLC8vIHRoZW1lIOqwneyytCDrsJjtmZhcclxudGhlbWVUeXBlLCAvLyAnbGlnaHQnIOuYkOuKlCAnZGFyaydcclxudGhlbWVTZXR0aW5nOiBzdG9yZWRUaGVtZSwgLy8gJ2xpZ2h0JywgJ2RhcmsnLCDrmJDripQgJ3N5c3RlbSdcclxuaXNEYXJrTW9kZTogdGhlbWVUeXBlID09PSAnZGFyaycsXHJcbmNoYW5nZVRoZW1lLFxyXG5nZXRTeXN0ZW1UaGVtZSxcclxufTtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgdXNlVGhlbWU7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUEsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsYUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsTUFBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksaUJBQUEsR0FBQUMsc0JBQUEsQ0FBQUwsT0FBQTtBQUNBLElBQUFNLFVBQUEsR0FBQU4sT0FBQTtBQUNPLElBQU1PLFFBQVEsR0FBQUMsT0FBQSxDQUFBRCxRQUFBLEdBQUcsU0FBWEEsUUFBUUEsQ0FBQSxFQUFTO0VBQzlCLElBQU1FLE9BQU8sR0FBRyxJQUFBQyxpQkFBVSxFQUFDQywwQkFBWSxDQUFDO0VBQ3hDLElBQUFDLGdCQUFBLEdBQXNDLElBQUFDLHlCQUFlLEVBQ3JEQyx3QkFBYSxDQUFDQyxZQUFZLENBQUNDLEtBQUssRUFDaENDLG9CQUNBLENBQUM7SUFBQUMsaUJBQUEsT0FBQUMsZUFBQSxDQUFBQyxPQUFBLEVBQUFSLGdCQUFBO0lBSE1TLFdBQVcsR0FBQUgsaUJBQUE7SUFBRUksY0FBYyxHQUFBSixpQkFBQTtFQUlsQyxJQUFJLENBQUNULE9BQU8sRUFBRTtJQUNkLE1BQU0sSUFBSWMsS0FBSyxDQUFDLDhDQUE4QyxDQUFDO0VBQy9EO0VBQ0EsSUFBZUMsU0FBUyxHQUFlZixPQUFPLENBQXRDZ0IsS0FBSztJQUFhQyxRQUFRLEdBQUtqQixPQUFPLENBQXBCaUIsUUFBUTtFQUVsQyxJQUFNQyxjQUFjLEdBQUcsSUFBQUMsa0JBQVcsRUFBQyxZQUF1QjtJQUMxRCxPQUFPQyx1QkFBVSxDQUFDQyxjQUFjLENBQUMsQ0FBQyxJQUFJLE9BQU87RUFDN0MsQ0FBQyxFQUFFLEVBQUUsQ0FBQztFQUVOLElBQU1DLFdBQVcsR0FBRyxJQUFBSCxrQkFBVztJQUFBLElBQUFJLElBQUEsT0FBQUMsa0JBQUEsQ0FBQWIsT0FBQSxFQUMvQixXQUFPYyxRQUFtQixFQUFLO01BQy9CLE1BQU1aLGNBQWMsQ0FBQ1ksUUFBUSxDQUFDO01BQzlCUixRQUFRLENBQUNRLFFBQVEsS0FBSyxRQUFRLEdBQUdQLGNBQWMsQ0FBQyxDQUFDLEdBQWdCTyxRQUFRLENBQUM7SUFDMUUsQ0FBQztJQUFBLGlCQUFBQyxFQUFBO01BQUEsT0FBQUgsSUFBQSxDQUFBSSxLQUFBLE9BQUFDLFNBQUE7SUFBQTtFQUFBLEtBQ0QsQ0FBQ1YsY0FBYyxFQUFFTCxjQUFjLEVBQUVJLFFBQVEsQ0FDekMsQ0FBQztFQUVELElBQUFZLGdCQUFTLEVBQUMsWUFBTTtJQUNoQixJQUFJakIsV0FBVyxLQUFLLFFBQVEsRUFBRTtNQUM1QkssUUFBUSxDQUFDQyxjQUFjLENBQUMsQ0FBYyxDQUFDO01BQ3pDLElBQU1ZLFlBQVksR0FBR1YsdUJBQVUsQ0FBQ1csaUJBQWlCLENBQUMsVUFBQUMsS0FBQSxFQUFxQjtRQUFBLElBQWxCQyxXQUFXLEdBQUFELEtBQUEsQ0FBWEMsV0FBVztRQUM5RCxJQUFJQSxXQUFXLEVBQUU7VUFDZmhCLFFBQVEsQ0FBQ2dCLFdBQVcsQ0FBQztRQUN2QjtNQUNGLENBQUMsQ0FBQztNQUVGLE9BQU8sWUFBTTtRQUNYSCxZQUFZLENBQUNJLE1BQU0sQ0FBQyxDQUFDO01BQ3ZCLENBQUM7SUFDRDtFQUNBLENBQUMsRUFBRSxDQUFDaEIsY0FBYyxFQUFFRCxRQUFRLEVBQUVMLFdBQVcsQ0FBQyxDQUFDO0VBRTNDLElBQUFpQixnQkFBUyxFQUFDLFlBQU07SUFDaEIsSUFBSWpCLFdBQVcsRUFBRTtNQUNmSyxRQUFRLENBQUNMLFdBQVcsS0FBSyxRQUFRLEdBQUdNLGNBQWMsQ0FBQyxDQUFDLEdBQWdCTixXQUFXLENBQUM7SUFDbEY7RUFDQSxDQUFDLEVBQUUsQ0FBQ00sY0FBYyxFQUFFRCxRQUFRLEVBQUVMLFdBQVcsQ0FBQyxDQUFDO0VBQzNDLE9BQU87SUFDUEksS0FBSyxFQUFFbUIsYUFBTSxDQUFDcEIsU0FBUyxDQUF3QjtJQUMvQ0EsU0FBUyxFQUFUQSxTQUFTO0lBQ1RxQixZQUFZLEVBQUV4QixXQUFXO0lBQ3pCeUIsVUFBVSxFQUFFdEIsU0FBUyxLQUFLLE1BQU07SUFDaENPLFdBQVcsRUFBWEEsV0FBVztJQUNYSixjQUFjLEVBQWRBO0VBQ0EsQ0FBQztBQUNELENBQUM7QUFBQyxJQUFBb0IsUUFBQSxHQUFBdkMsT0FBQSxDQUFBWSxPQUFBLEdBQ2FiLFFBQVEiLCJpZ25vcmVMaXN0IjpbXX0=