{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativePaper","_MaterialCommunityIcons","_interopRequireDefault","_emotionService","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","EmotionLogScreen","_ref","navigation","_useState","useState","_useState2","_slicedToArray2","emotions","setEmotions","_useState3","_useState4","selectedEmotions","setSelectedEmotions","_useState5","_useState6","note","setNote","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isSubmitting","setIsSubmitting","useEffect","loadEmotions","_ref2","_asyncToGenerator2","response","emotionService","getAllEmotions","emotionResponse","data","error","Alert","alert","process","env","NODE_ENV","console","apply","arguments","toggleEmotion","emotionId","includes","filter","id","concat","_toConsumableArray2","handleSubmit","_ref3","length","recordEmotions","emotion_ids","trim","undefined","text","onPress","goBack","_error$response","message","jsxs","View","style","styles","loadingContainer","children","jsx","ActivityIndicator","size","Text","loadingText","ScrollView","container","title","subtitle","emotionsContainer","map","emotion","Chip","selected","emotion_id","emotionChip","backgroundColor","color","textStyle","icon","name","testID","TextInput","label","value","onChangeText","mode","multiline","numberOfLines","noteInput","Button","submitButton","disabled","StyleSheet","create","flex","padding","justifyContent","alignItems","marginTop","fontSize","fontWeight","marginBottom","flexDirection","flexWrap","margin","paddingVertical","_default","exports"],"sources":["EmotionLogScreen.tsx"],"sourcesContent":["// src/screens/EmotionLogScreen.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, ScrollView, StyleSheet, Alert } from 'react-native';\r\nimport { Text, Chip, Button, TextInput, ActivityIndicator } from 'react-native-paper';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport emotionService from '../services/api/emotionService';\r\n\r\ninterface Emotion {\r\n  emotion_id: number;\r\n  name: string;\r\n  icon: string;\r\n  color: string;\r\n}\r\n\r\ninterface EmotionResponse {\r\n  status: string;\r\n  data: Emotion[];\r\n}\r\n\r\nconst EmotionLogScreen = ({ navigation }: any) => {\r\n  const [emotions, setEmotions] = useState<Emotion[]>([]);\r\n  const [selectedEmotions, setSelectedEmotions] = useState<number[]>([]);\r\n  const [note, setNote] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadEmotions();\r\n  }, []);\r\n\r\n  const loadEmotions = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await emotionService.getAllEmotions();\r\n      // 타입 안전하게 접근\r\n      const emotionResponse = response.data as EmotionResponse;\r\n      setEmotions(emotionResponse.data);\r\n    } catch (error) {\r\n      Alert.alert('오류', '감정 데이터를 불러오는 중 오류가 발생했습니다.');\r\n      \r\n      // 개발 환경에서만 콘솔에 오류 출력\r\n      if (process.env.NODE_ENV !== 'test') {\r\n        console.error('감정 로드 오류:', error);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleEmotion = (emotionId: number) => {\r\n    if (selectedEmotions.includes(emotionId)) {\r\n      setSelectedEmotions(selectedEmotions.filter(id => id !== emotionId));\r\n    } else {\r\n      setSelectedEmotions([...selectedEmotions, emotionId]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (selectedEmotions.length === 0) {\r\n      Alert.alert('알림', '감정을 적어도 하나 이상 선택해주세요.');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      await emotionService.recordEmotions({\r\n        emotion_ids: selectedEmotions,\r\n        note: note.trim() || undefined\r\n      });\r\n      \r\n      Alert.alert(\r\n        '감정 기록 완료',\r\n        '오늘의 감정이 성공적으로 기록되었습니다.',\r\n        [{ text: '확인', onPress: () => navigation.goBack() }]\r\n      );\r\n    } catch (error: any) {\r\n      Alert.alert(\r\n        '오류',\r\n        error.response?.data?.message || '감정 기록 중 오류가 발생했습니다.'\r\n      );\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" />\r\n        <Text style={styles.loadingText}>감정 데이터를 불러오는 중...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.title}>오늘의 감정</Text>\r\n      <Text style={styles.subtitle}>현재 어떤 감정을 느끼고 계신가요?</Text>\r\n\r\n      <View style={styles.emotionsContainer}>\r\n        {emotions.map((emotion) => (\r\n        // EmotionLogScreen.tsx 수정된 부분\r\n\r\n// Chip 컴포넌트에 testID 추가\r\n<Chip\r\n  key={emotion.emotion_id}\r\n  selected={selectedEmotions.includes(emotion.emotion_id)}\r\n  onPress={() => toggleEmotion(emotion.emotion_id)}\r\n  style={[\r\n    styles.emotionChip,\r\n    selectedEmotions.includes(emotion.emotion_id) && { backgroundColor: emotion.color }\r\n  ]}\r\n  textStyle={{\r\n    color: selectedEmotions.includes(emotion.emotion_id) ? '#FFFFFF' : emotion.color\r\n  }}\r\n  icon={() => (\r\n    <MaterialCommunityIcons\r\n      name={emotion.icon}\r\n      size={20}\r\n      color={selectedEmotions.includes(emotion.emotion_id) ? '#FFFFFF' : emotion.color}\r\n    />\r\n  )}\r\n  testID=\"emotion-chip\" // 이 부분 추가\r\n>\r\n  {emotion.name}\r\n</Chip>\r\n        ))}\r\n      </View>\r\n\r\n      <TextInput\r\n        label=\"감정에 대한 메모 (선택사항)\"\r\n        value={note}\r\n        onChangeText={setNote}\r\n        mode=\"outlined\"\r\n        multiline\r\n        numberOfLines={4}\r\n        style={styles.noteInput}\r\n        testID=\"emotion-note-input\"\r\n      />\r\n\r\n<Button\r\n  mode=\"contained\"\r\n  onPress={handleSubmit}\r\n  style={styles.submitButton}\r\n  disabled={isSubmitting || selectedEmotions.length === 0}\r\n  testID=\"emotion-submit-button\"\r\n>\r\n  {isSubmitting ? <ActivityIndicator color=\"#fff\" /> : '감정 기록하기'}\r\n</Button>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n    color: '#4a0e4e',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    marginBottom: 24,\r\n  },\r\n  emotionsContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginBottom: 24,\r\n  },\r\n  emotionChip: {\r\n    margin: 4,\r\n  },\r\n  noteInput: {\r\n    marginBottom: 24,\r\n  },\r\n  submitButton: {\r\n    paddingVertical: 8,\r\n  },\r\n});\r\n\r\nexport default EmotionLogScreen;"],"mappings":"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","ignoreList":[]}