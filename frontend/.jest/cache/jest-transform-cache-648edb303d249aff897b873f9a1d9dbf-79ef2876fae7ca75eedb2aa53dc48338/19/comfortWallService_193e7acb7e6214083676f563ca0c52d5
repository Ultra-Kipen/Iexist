edb3745d04a18652f47d93a8f8d7db06
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _client = _interopRequireDefault(require("./client"));
var comfortWallService = {
  createPost: function () {
    var _createPost = (0, _asyncToGenerator2.default)(function* (data) {
      return yield _client.default.post('/comfort-wall', data);
    });
    function createPost(_x) {
      return _createPost.apply(this, arguments);
    }
    return createPost;
  }(),
  getPosts: function () {
    var _getPosts = (0, _asyncToGenerator2.default)(function* (params) {
      return yield _client.default.get('/comfort-wall', {
        params: params
      });
    });
    function getPosts(_x2) {
      return _getPosts.apply(this, arguments);
    }
    return getPosts;
  }(),
  getBestPosts: function () {
    var _getBestPosts = (0, _asyncToGenerator2.default)(function* (params) {
      return yield _client.default.get('/comfort-wall/best', {
        params: params
      });
    });
    function getBestPosts(_x3) {
      return _getBestPosts.apply(this, arguments);
    }
    return getBestPosts;
  }(),
  sendMessage: function () {
    var _sendMessage = (0, _asyncToGenerator2.default)(function* (postId, data) {
      return yield _client.default.post(`/comfort-wall/${postId}/message`, data);
    });
    function sendMessage(_x4, _x5) {
      return _sendMessage.apply(this, arguments);
    }
    return sendMessage;
  }()
};
var _default = exports.default = comfortWallService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2xpZW50IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJjb21mb3J0V2FsbFNlcnZpY2UiLCJjcmVhdGVQb3N0IiwiX2NyZWF0ZVBvc3QiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0IiwiZGF0YSIsImFwaUNsaWVudCIsInBvc3QiLCJfeCIsImFwcGx5IiwiYXJndW1lbnRzIiwiZ2V0UG9zdHMiLCJfZ2V0UG9zdHMiLCJwYXJhbXMiLCJnZXQiLCJfeDIiLCJnZXRCZXN0UG9zdHMiLCJfZ2V0QmVzdFBvc3RzIiwiX3gzIiwic2VuZE1lc3NhZ2UiLCJfc2VuZE1lc3NhZ2UiLCJwb3N0SWQiLCJfeDQiLCJfeDUiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJjb21mb3J0V2FsbFNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3NlcnZpY2VzL2FwaS9jb21mb3J0V2FsbFNlcnZpY2UudHNcclxuXHJcbmltcG9ydCBhcGlDbGllbnQgZnJvbSAnLi9jbGllbnQnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDb21mb3J0V2FsbFBvc3REYXRhIHtcclxuICB0aXRsZTogc3RyaW5nO1xyXG4gIGNvbnRlbnQ6IHN0cmluZztcclxuICBpc19hbm9ueW1vdXM/OiBib29sZWFuO1xyXG4gIHRhZ19pZHM/OiBudW1iZXJbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDb21mb3J0TWVzc2FnZURhdGEge1xyXG4gIG1lc3NhZ2U6IHN0cmluZztcclxuICBpc19hbm9ueW1vdXM/OiBib29sZWFuO1xyXG59XHJcblxyXG5jb25zdCBjb21mb3J0V2FsbFNlcnZpY2UgPSB7XHJcbiAgY3JlYXRlUG9zdDogYXN5bmMgKGRhdGE6IENvbWZvcnRXYWxsUG9zdERhdGEpID0+IHtcclxuICAgIHJldHVybiBhd2FpdCBhcGlDbGllbnQucG9zdCgnL2NvbWZvcnQtd2FsbCcsIGRhdGEpO1xyXG4gIH0sXHJcbiAgXHJcbiAgZ2V0UG9zdHM6IGFzeW5jIChwYXJhbXM/OiB7IFxyXG4gICAgcGFnZT86IG51bWJlcjsgXHJcbiAgICBsaW1pdD86IG51bWJlcjsgXHJcbiAgICBzb3J0X2J5PzogJ2xhdGVzdCcgfCAncG9wdWxhcic7XHJcbiAgICB0YWc/OiBzdHJpbmc7XHJcbiAgfSkgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5nZXQoJy9jb21mb3J0LXdhbGwnLCB7IHBhcmFtcyB9KTtcclxuICB9LFxyXG4gIFxyXG4gIGdldEJlc3RQb3N0czogYXN5bmMgKHBhcmFtcz86IHsgcGVyaW9kPzogJ2RhaWx5JyB8ICd3ZWVrbHknIHwgJ21vbnRobHknIH0pID0+IHtcclxuICAgIHJldHVybiBhd2FpdCBhcGlDbGllbnQuZ2V0KCcvY29tZm9ydC13YWxsL2Jlc3QnLCB7IHBhcmFtcyB9KTtcclxuICB9LFxyXG4gIFxyXG4gIHNlbmRNZXNzYWdlOiBhc3luYyAocG9zdElkOiBudW1iZXIsIGRhdGE6IENvbWZvcnRNZXNzYWdlRGF0YSkgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5wb3N0KGAvY29tZm9ydC13YWxsLyR7cG9zdElkfS9tZXNzYWdlYCwgZGF0YSk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29tZm9ydFdhbGxTZXJ2aWNlOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsSUFBQUEsT0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBY0EsSUFBTUMsa0JBQWtCLEdBQUc7RUFDekJDLFVBQVU7SUFBQSxJQUFBQyxXQUFBLE9BQUFDLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPQyxJQUF5QixFQUFLO01BQy9DLGFBQWFDLGVBQVMsQ0FBQ0MsSUFBSSxDQUFDLGVBQWUsRUFBRUYsSUFBSSxDQUFDO0lBQ3BELENBQUM7SUFBQSxTQUZESixVQUFVQSxDQUFBTyxFQUFBO01BQUEsT0FBQU4sV0FBQSxDQUFBTyxLQUFBLE9BQUFDLFNBQUE7SUFBQTtJQUFBLE9BQVZULFVBQVU7RUFBQSxHQUVUO0VBRURVLFFBQVE7SUFBQSxJQUFBQyxTQUFBLE9BQUFULGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPUyxNQUtoQixFQUFLO01BQ0osYUFBYVAsZUFBUyxDQUFDUSxHQUFHLENBQUMsZUFBZSxFQUFFO1FBQUVELE1BQU0sRUFBTkE7TUFBTyxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUFBLFNBUERGLFFBQVFBLENBQUFJLEdBQUE7TUFBQSxPQUFBSCxTQUFBLENBQUFILEtBQUEsT0FBQUMsU0FBQTtJQUFBO0lBQUEsT0FBUkMsUUFBUTtFQUFBLEdBT1A7RUFFREssWUFBWTtJQUFBLElBQUFDLGFBQUEsT0FBQWQsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFLFdBQU9TLE1BQW9ELEVBQUs7TUFDNUUsYUFBYVAsZUFBUyxDQUFDUSxHQUFHLENBQUMsb0JBQW9CLEVBQUU7UUFBRUQsTUFBTSxFQUFOQTtNQUFPLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBQUEsU0FGREcsWUFBWUEsQ0FBQUUsR0FBQTtNQUFBLE9BQUFELGFBQUEsQ0FBQVIsS0FBQSxPQUFBQyxTQUFBO0lBQUE7SUFBQSxPQUFaTSxZQUFZO0VBQUEsR0FFWDtFQUVERyxXQUFXO0lBQUEsSUFBQUMsWUFBQSxPQUFBakIsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFLFdBQU9pQixNQUFjLEVBQUVoQixJQUF3QixFQUFLO01BQy9ELGFBQWFDLGVBQVMsQ0FBQ0MsSUFBSSxDQUFDLGlCQUFpQmMsTUFBTSxVQUFVLEVBQUVoQixJQUFJLENBQUM7SUFDdEUsQ0FBQztJQUFBLFNBRkRjLFdBQVdBLENBQUFHLEdBQUEsRUFBQUMsR0FBQTtNQUFBLE9BQUFILFlBQUEsQ0FBQVgsS0FBQSxPQUFBQyxTQUFBO0lBQUE7SUFBQSxPQUFYUyxXQUFXO0VBQUE7QUFHYixDQUFDO0FBQUMsSUFBQUssUUFBQSxHQUFBQyxPQUFBLENBQUFyQixPQUFBLEdBRWFKLGtCQUFrQiIsImlnbm9yZUxpc3QiOltdfQ==