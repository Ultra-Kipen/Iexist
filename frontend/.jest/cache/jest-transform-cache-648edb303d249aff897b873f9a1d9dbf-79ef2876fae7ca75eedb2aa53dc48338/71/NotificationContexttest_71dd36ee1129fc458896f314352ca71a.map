{"version":3,"names":["_getJestObj","mock","getNotifications","jest","fn","markAsRead","markAllAsRead","deleteNotification","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_NotificationContext","_notificationService","_reactNative2","_jsxRuntime","_require","TestComponent","_useNotification","useNotification","notifications","unreadCount","isLoading","error","jsxs","View","children","jsx","Text","testID","toString","length","TouchableOpacity","onPress","describe","mockNotifications","id","user_id","content","notification_type","is_read","created_at","beforeEach","useFakeTimers","clearAllMocks","spyOn","global","mockImplementation","notificationService","mockResolvedValue","data","success","afterEach","clearAllTimers","useRealTimers","it","default","component","act","render","NotificationProvider","advanceTimersByTime","expect","toHaveBeenCalled","notificationsCountElement","getByTestId","unreadCountElement","errorElement","props","toBe","markReadButton","toHaveBeenCalledWith","toHaveBeenCalledTimes","markAllReadButton","deleteButton"],"sources":["NotificationContext.test.tsx"],"sourcesContent":["// __tests__/contexts/NotificationContext.test.tsx\r\nimport React from 'react';\r\nimport { render, act } from '@testing-library/react-native';\r\nimport { NotificationProvider, useNotification } from '../../src/contexts/NotificationContext';\r\nimport notificationService from '../../src/services/api/notificationService';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\n\r\n// 모의 알림 서비스\r\njest.mock('../../src/services/api/notificationService', () => ({\r\n  getNotifications: jest.fn(),\r\n  markAsRead: jest.fn(),\r\n  markAllAsRead: jest.fn(),\r\n  deleteNotification: jest.fn(),\r\n}));\r\n\r\n// 테스트 컴포넌트\r\nconst TestComponent = () => {\r\n  const { \r\n    notifications, \r\n    unreadCount, \r\n    isLoading, \r\n    error,\r\n    markAsRead,\r\n    markAllAsRead,\r\n    deleteNotification\r\n  } = useNotification();\r\n\r\n  return (\r\n    <View>\r\n      <Text testID=\"loading\">{isLoading ? 'loading' : 'not-loading'}</Text>\r\n      <Text testID=\"error\">{error || 'no-error'}</Text>\r\n      <Text testID=\"unread-count\">{unreadCount.toString()}</Text>\r\n      <Text testID=\"notifications-count\">{notifications.length.toString()}</Text>\r\n      <TouchableOpacity testID=\"mark-read\" onPress={() => markAsRead(1)}>\r\n        <Text>Mark Read</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity testID=\"mark-all-read\" onPress={() => markAllAsRead()}>\r\n        <Text>Mark All Read</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity testID=\"delete-notification\" onPress={() => deleteNotification(1)}>\r\n        <Text>Delete</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\ndescribe('NotificationContext', () => {\r\n  const mockNotifications = [\r\n    {\r\n      id: 1,\r\n      user_id: 1,\r\n      content: 'Test notification 1',\r\n      notification_type: 'like',\r\n      is_read: false,\r\n      created_at: '2024-01-01T00:00:00Z'\r\n    },\r\n    {\r\n      id: 2,\r\n      user_id: 1,\r\n      content: 'Test notification 2',\r\n      notification_type: 'comment',\r\n      is_read: true,\r\n      created_at: '2024-01-02T00:00:00Z'\r\n    }\r\n  ];\r\n\r\n  beforeEach(() => {\r\n    jest.useFakeTimers();\r\n    jest.clearAllMocks();\r\n    \r\n    // Prevent interval from actually running\r\n    jest.spyOn(global, 'setInterval').mockImplementation(() => {\r\n      return {} as unknown as NodeJS.Timeout;\r\n    });\r\n    \r\n    // getNotifications mock\r\n    (notificationService.getNotifications as jest.Mock).mockResolvedValue({\r\n      data: mockNotifications\r\n    });\r\n    \r\n    // markAsRead mock\r\n    (notificationService.markAsRead as jest.Mock).mockResolvedValue({\r\n      success: true\r\n    });\r\n    \r\n    // markAllAsRead mock\r\n    (notificationService.markAllAsRead as jest.Mock).mockResolvedValue({\r\n      success: true\r\n    });\r\n    \r\n    // deleteNotification mock\r\n    (notificationService.deleteNotification as jest.Mock).mockResolvedValue({\r\n      success: true\r\n    });\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.clearAllTimers();\r\n    jest.useRealTimers();\r\n  });\r\n\r\n  it('initializes with correct data', async () => {\r\n    let component;\r\n    \r\n    await act(async () => {\r\n      component = render(\r\n        <NotificationProvider>\r\n          <TestComponent />\r\n        </NotificationProvider>\r\n      );\r\n      // Advance timers to resolve promises\r\n      jest.advanceTimersByTime(100);\r\n    });\r\n\r\n    // Wait for state updates to complete\r\n    await act(async () => {\r\n      jest.advanceTimersByTime(100);\r\n    });\r\n\r\n    expect(notificationService.getNotifications).toHaveBeenCalled();\r\n    \r\n    const notificationsCountElement = component.getByTestId('notifications-count');\r\n    const unreadCountElement = component.getByTestId('unread-count');\r\n    const errorElement = component.getByTestId('error');\r\n    \r\n    expect(notificationsCountElement.props.children).toBe('2');\r\n    expect(unreadCountElement.props.children).toBe('1');\r\n    expect(errorElement.props.children).toBe('no-error');\r\n  });\r\n\r\n  // 나머지 테스트는 비슷한 방식으로 수정\r\n  it('can mark a notification as read', async () => {\r\n    let component;\r\n    \r\n    await act(async () => {\r\n      component = render(\r\n        <NotificationProvider>\r\n          <TestComponent />\r\n        </NotificationProvider>\r\n      );\r\n      jest.advanceTimersByTime(100);\r\n    });\r\n\r\n    const markReadButton = component.getByTestId('mark-read');\r\n    \r\n    await act(async () => {\r\n      markReadButton.props.onPress();\r\n      jest.advanceTimersByTime(100);\r\n    });\r\n\r\n    expect(notificationService.markAsRead).toHaveBeenCalledWith(1);\r\n    expect(notificationService.getNotifications).toHaveBeenCalledTimes(2);\r\n  });\r\n\r\n  it('can mark all notifications as read', async () => {\r\n    let component;\r\n    \r\n    await act(async () => {\r\n      component = render(\r\n        <NotificationProvider>\r\n          <TestComponent />\r\n        </NotificationProvider>\r\n      );\r\n      jest.advanceTimersByTime(100);\r\n    });\r\n\r\n    const markAllReadButton = component.getByTestId('mark-all-read');\r\n    \r\n    await act(async () => {\r\n      markAllReadButton.props.onPress();\r\n      jest.advanceTimersByTime(100);\r\n    });\r\n\r\n    expect(notificationService.markAllAsRead).toHaveBeenCalled();\r\n    expect(notificationService.getNotifications).toHaveBeenCalledTimes(2);\r\n  });\r\n\r\n  it('can delete a notification', async () => {\r\n    let component;\r\n    \r\n    await act(async () => {\r\n      component = render(\r\n        <NotificationProvider>\r\n          <TestComponent />\r\n        </NotificationProvider>\r\n      );\r\n      jest.advanceTimersByTime(100);\r\n    });\r\n\r\n    const deleteButton = component.getByTestId('delete-notification');\r\n    \r\n    await act(async () => {\r\n      deleteButton.props.onPress();\r\n      jest.advanceTimersByTime(100);\r\n    });\r\n\r\n    expect(notificationService.deleteNotification).toHaveBeenCalledWith(1);\r\n    expect(notificationService.getNotifications).toHaveBeenCalledTimes(2);\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}