{"version":3,"names":["_react","require","_cache","cov_mqjt0xf9o","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","useCache","key","fetchFn","options","arguments","length","_ref","ttl","_ref$autoLoad","autoLoad","_ref$cacheInstance","cacheInstance","globalCache","_ref2","useState","get","_ref3","_slicedToArray2","default","data","setData","_ref4","_ref5","loading","setLoading","_ref6","_ref7","error","setError","fetchData","useCallback","_asyncToGenerator2","force","result","set","err","Error","String","invalidateCache","delete","useEffect","refetch"],"sources":["useCache.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { globalCache, MemoryCache } from '../utils/cache';\r\n\r\ninterface UseCacheOptions {\r\n  /** 캐시 유효 시간 (밀리초) */\r\n  ttl?: number;\r\n  /** 자동 로딩 여부 */\r\n  autoLoad?: boolean;\r\n  /** 특정 캐시 인스턴스 사용 (기본값: globalCache) */\r\n  cacheInstance?: MemoryCache;\r\n}\r\n\r\n/**\r\n * 데이터 캐싱 및 불러오기를 위한 훅\r\n * @param key 캐시 키\r\n * @param fetchFn 데이터 불러오는 함수\r\n * @param options 캐시 옵션\r\n */\r\nexport function useCache<T>(\r\n  key: string,\r\n  fetchFn: () => Promise<T>,\r\n  options: UseCacheOptions = {}\r\n) {\r\n  const {\r\n    ttl,\r\n    autoLoad = true,\r\n    cacheInstance = globalCache\r\n  } = options;\r\n\r\n  const [data, setData] = useState<T | undefined>(cacheInstance.get<T>(key));\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  // 데이터 불러오기 함수\r\n  const fetchData = useCallback(async (force = false) => {\r\n    // 캐시에 있고 강제 갱신이 아니면 캐시 데이터 사용\r\n    if (!force && cacheInstance.get<T>(key)) {\r\n      setData(cacheInstance.get<T>(key));\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const result = await fetchFn();\r\n      setData(result);\r\n      cacheInstance.set(key, result, ttl);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err : new Error(String(err)));\r\n      setData(undefined);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [key, fetchFn, ttl, cacheInstance]);\r\n\r\n  // 캐시 강제 갱신\r\n  const invalidateCache = useCallback(() => {\r\n    cacheInstance.delete(key);\r\n    fetchData(true);\r\n  }, [key, fetchData, cacheInstance]);\r\n\r\n  // 컴포넌트 마운트 시 자동 로딩\r\n  useEffect(() => {\r\n    if (autoLoad) {\r\n      fetchData();\r\n    }\r\n  }, [autoLoad, fetchData]);\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    refetch: fetchData,\r\n    invalidateCache\r\n  };\r\n}"],"mappings":"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","ignoreList":[]}