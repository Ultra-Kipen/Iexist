b01701c26ef1128fd2a7efa27a4e8a65
_getJestObj().mock("../../src/hooks/useTheme", function () {
  return {
    useTheme: function useTheme() {
      return {
        theme: {
          colors: {
            background: '#ffffff'
          },
          dark: false
        }
      };
    }
  };
});
_getJestObj().mock("../../src/components/LoadingIndicator", function () {
  var React = require('react');
  var _require = require('react-native'),
    View = _require.View;
  return {
    __esModule: true,
    default: function _default() {
      return React.createElement(View, {
        testID: 'loading-indicator'
      });
    }
  };
});
_getJestObj().mock("../../src/assets/images/logo.png", function () {
  return {};
}, {
  virtual: true
});
_getJestObj().mock("../../src/assets/images/auth-background.jpg", function () {
  return {};
}, {
  virtual: true
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _reactNative2 = require("react-native");
var _AuthLayout = _interopRequireDefault(require("../../src/layouts/AuthLayout"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require2 = require("@jest/globals"),
    jest = _require2.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('AuthLayout', function () {
  it('renders children correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render.getByText;
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('shows loading indicator when loading is true', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        loading: true,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByTestId = _render2.getByTestId,
      queryByText = _render2.queryByText;
    expect(getByTestId('loading-indicator')).toBeTruthy();
    expect(queryByText('인증 내용')).toBeNull();
  });
  it('renders title and footer when provided', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        title: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uC81C\uBAA9"
        }),
        footer: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uD478\uD130"
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render3.getByText;
    expect(getByText('인증 제목')).toBeTruthy();
    expect(getByText('인증 푸터')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('renders with background image when imageBackground is true', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        imageBackground: true,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByTestId = _render4.getByTestId,
      getByText = _render4.getByText;
    expect(getByTestId('image-background')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('does not render logo when logoVisible is false', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        logoVisible: false,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      queryByTestId = _render5.queryByTestId,
      getByText = _render5.getByText;
    expect(queryByTestId('logo-image')).toBeNull();
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('renders with default background when imageBackground is false', function () {
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        imageBackground: false,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      queryByTestId = _render6.queryByTestId,
      getByText = _render6.getByText;
    expect(queryByTestId('image-background')).toBeNull();
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('renders logo when logoVisible is true', function () {
    var _render7 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        logoVisible: true,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByTestId = _render7.getByTestId;
    expect(getByTestId('logo-image')).toBeTruthy();
  });
  it('handles complex children correctly', function () {
    var _render8 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        children: (0, _jsxRuntime.jsxs)(_reactNative2.View, {
          children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
            children: "\uCCAB \uBC88\uC9F8 \uC790\uC2DD"
          }), (0, _jsxRuntime.jsx)(_reactNative2.Text, {
            children: "\uB450 \uBC88\uC9F8 \uC790\uC2DD"
          }), (0, _jsxRuntime.jsx)(_reactNative2.View, {
            children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
              children: "\uC911\uCCA9\uB41C \uC790\uC2DD"
            })
          })]
        })
      })),
      getByText = _render8.getByText;
    expect(getByText('첫 번째 자식')).toBeTruthy();
    expect(getByText('두 번째 자식')).toBeTruthy();
    expect(getByText('중첩된 자식')).toBeTruthy();
  });
  it('renders correctly without title and footer', function () {
    var _render9 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render9.getByText,
      queryByTestId = _render9.queryByTestId;
    expect(getByText('인증 내용')).toBeTruthy();
    expect(queryByTestId('title-container')).toBeNull();
    expect(queryByTestId('footer-container')).toBeNull();
  });
  it('renders correctly with only title', function () {
    var _render10 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        title: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uC81C\uBAA9\uB9CC"
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render10.getByText,
      queryByTestId = _render10.queryByTestId;
    expect(getByText('인증 제목만')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
    expect(queryByTestId('footer-container')).toBeNull();
  });
  it('renders correctly with only footer', function () {
    var _render11 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        footer: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uD478\uD130\uB9CC"
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render11.getByText,
      queryByTestId = _render11.queryByTestId;
    expect(getByText('인증 푸터만')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
    expect(queryByTestId('title-container')).toBeNull();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,