{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_tagService","_interopRequireDefault","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","isValidApiTagResponse","response","data","Array","isArray","every","tag","tag_id","name","TagSearchInput","_ref","onTagSelect","_ref$selectedTags","selectedTags","_ref$placeholder","placeholder","_ref$maxTags","maxTags","_useState","useState","_useState2","_slicedToArray2","searchText","setSearchText","_useState3","_useState4","tags","setTags","_useState5","_useState6","filteredTags","setFilteredTags","_useState7","_useState8","loading","setLoading","_useState9","_useState10","isDropdownVisible","setIsDropdownVisible","_useState11","_useState12","error","setError","inputRef","useRef","selectedTagIds","useMemo","map","fetchTags","useCallback","_asyncToGenerator2","tagService","getAllTags","Error","console","fallbackTags","useEffect","handleSearchChange","text","trim","filtered","filter","toLowerCase","includes","handleTagPress","_inputRef$current","length","current","focus","handleCreateTag","_ref3","createTag","newTag","prevTags","concat","_toConsumableArray2","apply","arguments","hideDropdown","keyboardDidHideListener","Keyboard","addListener","remove","jsxs","View","style","styles","container","children","jsx","Text","errorText","maxTagsText","Fragment","TextInput","ref","input","value","onChangeText","onFocus","onSubmitEditing","ActivityIndicator","size","color","dropdown","FlatList","keyExtractor","item","toString","renderItem","_ref4","TouchableOpacity","dropdownItem","onPress","dropdownItemText","ListEmptyComponent","createTagButton","createTagText","noResultsText","dropdownList","StyleSheet","create","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","fontSize","backgroundColor","marginTop","fontStyle","marginBottom","position","top","left","right","maxHeight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","zIndex","padding","borderBottomWidth","hairlineWidth","borderBottomColor","fontWeight","textAlign","_default","exports"],"sources":["TagSearchInput.tsx"],"sourcesContent":["// components/TagSearchInput.tsx\r\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { \r\n  View, \r\n  Text, \r\n  TextInput, \r\n  TouchableOpacity, \r\n  StyleSheet, \r\n  FlatList, \r\n  ActivityIndicator, \r\n  Keyboard \r\n} from 'react-native';\r\nimport tagService from '../services/api/tagService';\r\n\r\n// 타입 정의\r\ninterface Tag {\r\n  tag_id: number;\r\n  name: string;\r\n}\r\n\r\ninterface ApiTagResponse {\r\n  data: {\r\n    data: Tag[];\r\n  };\r\n}\r\n\r\ninterface TagSearchInputProps {\r\n  onTagSelect: (tag: Tag) => void;\r\n  selectedTags?: Tag[];\r\n  placeholder?: string;\r\n  maxTags?: number;\r\n}\r\n\r\n// 타입 가드 함수\r\nfunction isValidApiTagResponse(response: any): response is ApiTagResponse {\r\n  return (\r\n    response &&\r\n    response.data &&\r\n    Array.isArray(response.data.data) &&\r\n    response.data.data.every(\r\n      (tag: any) => \r\n        typeof tag === 'object' &&\r\n        typeof tag.tag_id === 'number' &&\r\n        typeof tag.name === 'string'\r\n    )\r\n  );\r\n}\r\n\r\nconst TagSearchInput: React.FC<TagSearchInputProps> = ({\r\n  onTagSelect,\r\n  selectedTags = [],\r\n  placeholder = '태그를 검색하세요',\r\n  maxTags = 5\r\n}) => {\r\n  const [searchText, setSearchText] = useState<string>('');\r\n  const [tags, setTags] = useState<Tag[]>([]);\r\n  const [filteredTags, setFilteredTags] = useState<Tag[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [isDropdownVisible, setIsDropdownVisible] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const inputRef = useRef<TextInput>(null);\r\n  \r\n  // 선택된 태그 ID 목록을 메모이제이션\r\n  const selectedTagIds = useMemo(() => {\r\n    return selectedTags.map(tag => tag.tag_id);\r\n  }, [selectedTags]);\r\n  \r\n  // 태그 목록 가져오기\r\n// components/TagSearchInput.tsx 에서 fetchTags 함수 수정\r\n// 기존 모의 구현을 실제 API 호출로 변경\r\n\r\n// 태그 목록 가져오기\r\nconst fetchTags = useCallback(async () => {\r\n  try {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    // 실제 태그 서비스 API 호출\r\n    const response = await tagService.getAllTags();\r\n    \r\n    if (isValidApiTagResponse(response)) {\r\n      setTags(response.data.data);\r\n    } else {\r\n      throw new Error('유효하지 않은 태그 응답 형식');\r\n    }\r\n    \r\n    setLoading(false);\r\n  } catch (error) {\r\n    console.error('태그 가져오기 오류:', error);\r\n    setError('태그 목록을 불러오는데 실패했습니다.');\r\n    \r\n    // 오류 발생 시 기본 태그 목록 제공\r\n    const fallbackTags: Tag[] = [\r\n      { tag_id: 1, name: '일상' },\r\n      { tag_id: 2, name: '감정' }\r\n    ];\r\n    setTags(fallbackTags);\r\n    setLoading(false);\r\n  }\r\n}, []);\r\n  \r\n  // 컴포넌트 마운트 시 태그 목록 가져오기\r\n  useEffect(() => {\r\n    fetchTags();\r\n  }, [fetchTags]);\r\n  \r\n  // 검색어 변경 핸들러\r\n  const handleSearchChange = (text: string) => {\r\n    setSearchText(text);\r\n    \r\n    // 검색어 필터링 로직\r\n    if (text.trim() === '') {\r\n      setFilteredTags([]);\r\n      setIsDropdownVisible(false);\r\n    } else {\r\n      const filtered = tags.filter(tag => \r\n        tag.name.toLowerCase().includes(text.toLowerCase()) &&\r\n        !selectedTagIds.includes(tag.tag_id)\r\n      );\r\n      setFilteredTags(filtered);\r\n      setIsDropdownVisible(true);\r\n    }\r\n  };\r\n  \r\n  // 태그 클릭 핸들러\r\n  const handleTagPress = (tag: Tag) => {\r\n    // 태그 최대 개수 확인\r\n    if (selectedTags.length >= maxTags) {\r\n      return;\r\n    }\r\n    \r\n    onTagSelect(tag);\r\n    setSearchText('');\r\n    setFilteredTags([]);\r\n    setIsDropdownVisible(false);\r\n    inputRef.current?.focus();\r\n  };\r\n  \r\n  // 태그 생성 핸들러 (검색 결과가 없을 때)\r\n// 태그 생성 핸들러 (검색 결과가 없을 때)\r\nconst handleCreateTag = async () => {\r\n  if (searchText.trim().length < 2) {\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    setLoading(true);\r\n    \r\n    // 실제 태그 생성 API 호출\r\n    const response = await tagService.createTag(searchText.trim());\r\n    \r\n    if (response && response.data && response.data.data) {\r\n      const newTag: Tag = response.data.data;\r\n      \r\n      // 태그 목록에 추가\r\n      setTags(prevTags => [...prevTags, newTag]);\r\n      \r\n      // 선택된 태그로 추가\r\n      onTagSelect(newTag);\r\n      \r\n      // 상태 초기화\r\n      setSearchText('');\r\n      setFilteredTags([]);\r\n      setIsDropdownVisible(false);\r\n    } else {\r\n      throw new Error('유효하지 않은 태그 생성 응답');\r\n    }\r\n    \r\n    setLoading(false);\r\n  } catch (error) {\r\n    console.error('태그 생성 오류:', error);\r\n    setError('태그 생성에 실패했습니다.');\r\n    setLoading(false);\r\n  }\r\n};\r\n  \r\n // 드롭다운 외부 클릭 시 닫기\r\nuseEffect(() => {\r\n  const hideDropdown = () => {\r\n    setIsDropdownVisible(false);\r\n  };\r\n  \r\n  // Keyboard API가 존재하는지 확인\r\n  let keyboardDidHideListener: any = null;\r\n  if (Keyboard && typeof Keyboard.addListener === 'function') {\r\n    keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', hideDropdown);\r\n  }\r\n  \r\n  return () => {\r\n    // 리스너가 존재하면 제거\r\n    if (keyboardDidHideListener && typeof keyboardDidHideListener.remove === 'function') {\r\n      keyboardDidHideListener.remove();\r\n    }\r\n  };\r\n}, []);\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      {/* 오류 메시지 */}\r\n      {error && (\r\n        <Text style={styles.errorText}>{error}</Text>\r\n      )}\r\n      \r\n      {/* 태그 최대 개수 도달 메시지 */}\r\n      {selectedTags.length >= maxTags ? (\r\n        <Text style={styles.maxTagsText}>최대 {maxTags}개의 태그까지 선택할 수 있습니다.</Text>\r\n      ) : (\r\n        <>\r\n          {/* 검색 입력 */}\r\n          <TextInput\r\n            ref={inputRef}\r\n            style={styles.input}\r\n            value={searchText}\r\n            onChangeText={handleSearchChange}\r\n            placeholder={selectedTags.length === 0 ? placeholder : `태그 추가 (${selectedTags.length}/${maxTags})`}\r\n            onFocus={() => searchText.trim() !== '' && setIsDropdownVisible(true)}\r\n            onSubmitEditing={() => {\r\n              if (filteredTags.length > 0) {\r\n                handleTagPress(filteredTags[0]);\r\n              } else if (searchText.trim() !== '') {\r\n                handleCreateTag();\r\n              }\r\n            }}\r\n          />\r\n          \r\n          {/* 로딩 인디케이터 */}\r\n          {loading && (\r\n            <ActivityIndicator size=\"small\" color=\"#4A6572\" style={styles.loading} />\r\n          )}\r\n          \r\n          {/* 검색 결과 드롭다운 */}\r\n          {isDropdownVisible && searchText.trim() !== '' && (\r\n            <View style={styles.dropdown}>\r\n              <FlatList\r\n                data={filteredTags}\r\n                keyExtractor={(item) => item.tag_id.toString()}\r\n                renderItem={({ item }) => (\r\n                  <TouchableOpacity\r\n                    style={styles.dropdownItem}\r\n                    onPress={() => handleTagPress(item)}\r\n                  >\r\n                    <Text style={styles.dropdownItemText}>#{item.name}</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n                ListEmptyComponent={\r\n                  searchText.trim().length >= 2 ? (\r\n                    <TouchableOpacity\r\n                      style={styles.createTagButton}\r\n                      onPress={handleCreateTag}\r\n                    >\r\n                      <Text style={styles.createTagText}>\r\n                        \"{searchText}\" 태그 만들기\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  ) : (\r\n                    <Text style={styles.noResultsText}>\r\n                      검색 결과가 없습니다. 2자 이상 입력하여 새 태그를 만들 수 있습니다.\r\n                    </Text>\r\n                  )\r\n                }\r\n                style={styles.dropdownList}\r\n              />\r\n            </View>\r\n          )}\r\n        </>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    height: 48,\r\n    borderWidth: 1,\r\n    borderColor: '#E1E8ED',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 12,\r\n    fontSize: 16,\r\n    backgroundColor: '#F8F9FA',\r\n  },\r\n  maxTagsText: {\r\n    fontSize: 14,\r\n    color: '#657786',\r\n    marginTop: 8,\r\n    fontStyle: 'italic',\r\n  },\r\n  errorText: {\r\n    fontSize: 14,\r\n    color: '#D32F2F',\r\n    marginBottom: 8,\r\n  },\r\n  dropdown: {\r\n    position: 'absolute',\r\n    top: 52,\r\n    left: 0,\r\n    right: 0,\r\n    maxHeight: 200,\r\n    backgroundColor: '#FFFFFF',\r\n    borderWidth: 1,\r\n    borderColor: '#E1E8ED',\r\n    borderRadius: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n    zIndex: 1000,\r\n  },\r\n  dropdownList: {\r\n    maxHeight: 200,\r\n  },\r\n  dropdownItem: {\r\n    padding: 12,\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n    borderBottomColor: '#E1E8ED',\r\n  },\r\n  dropdownItemText: {\r\n    fontSize: 14,\r\n    color: '#14171A',\r\n  },\r\n  createTagButton: {\r\n    padding: 12,\r\n    backgroundColor: '#F2F7FA',\r\n  },\r\n  createTagText: {\r\n    fontSize: 14,\r\n    color: '#4A6572',\r\n    fontWeight: '600',\r\n  },\r\n  noResultsText: {\r\n    padding: 12,\r\n    fontSize: 14,\r\n    color: '#657786',\r\n    fontStyle: 'italic',\r\n    textAlign: 'center',\r\n  },\r\n  loading: {\r\n    position: 'absolute',\r\n    right: 12,\r\n    top: 14,\r\n  },\r\n});\r\n\r\nexport default TagSearchInput;"],"mappings":"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","ignoreList":[]}