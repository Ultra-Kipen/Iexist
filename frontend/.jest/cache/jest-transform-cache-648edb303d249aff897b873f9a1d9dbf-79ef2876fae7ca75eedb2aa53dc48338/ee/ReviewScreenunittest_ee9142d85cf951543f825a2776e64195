8380e6ed5f0e7f9ed402d74ce7b10a5e
_getJestObj().mock('react-native-paper', function () {
  return {
    SegmentedButtons: 'SegmentedButtons',
    Card: {
      displayName: 'Card',
      Cover: 'Card.Cover',
      Content: 'Card.Content'
    },
    Button: 'Button',
    Title: 'Title',
    Paragraph: 'Paragraph',
    useTheme: jest.fn(function () {
      return {
        colors: {
          primary: '#000',
          background: '#fff'
        }
      };
    })
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _ReviewScreen = _interopRequireDefault(require("../../../src/screens/ReviewScreen"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('ReviewScreen 단위 테스트', function () {
  it('컴포넌트가 렌더링 되어야 함', function () {
    expect(function () {
      return (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ReviewScreen.default, {}));
    }).not.toThrow();
  });
  it('초기 period 상태는 weekly여야 함', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ReviewScreen.default, {})),
      getByText = _render.getByText;
    expect(getByText('나의 주간 기록')).toBeTruthy();
  });
  it('그래프 버튼이 존재해야 함', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ReviewScreen.default, {})),
      getByText = _render2.getByText;
    expect(getByText('감정 변화 그래프 보기')).toBeTruthy();
  });
  it('통계 카드 내용이 올바르게 표시되어야 함', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ReviewScreen.default, {})),
      getByText = _render3.getByText;
    expect(getByText('이번 주의 통계')).toBeTruthy();
    expect(getByText('가장 많이 느낀 감정: 행복')).toBeTruthy();
    expect(getByText('게시물 수: 7개')).toBeTruthy();
    expect(getByText('받은 공감: 23개')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJTZWdtZW50ZWRCdXR0b25zIiwiQ2FyZCIsImRpc3BsYXlOYW1lIiwiQ292ZXIiLCJDb250ZW50IiwiQnV0dG9uIiwiVGl0bGUiLCJQYXJhZ3JhcGgiLCJ1c2VUaGVtZSIsImplc3QiLCJmbiIsImNvbG9ycyIsInByaW1hcnkiLCJiYWNrZ3JvdW5kIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJfcmVhY3ROYXRpdmUiLCJfUmV2aWV3U2NyZWVuIiwiX2pzeFJ1bnRpbWUiLCJfcmVxdWlyZSIsImRlc2NyaWJlIiwiaXQiLCJleHBlY3QiLCJyZW5kZXIiLCJqc3giLCJkZWZhdWx0Iiwibm90IiwidG9UaHJvdyIsIl9yZW5kZXIiLCJnZXRCeVRleHQiLCJ0b0JlVHJ1dGh5IiwiX3JlbmRlcjIiLCJfcmVuZGVyMyJdLCJzb3VyY2VzIjpbIlJldmlld1NjcmVlbi51bml0LnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJvb3QvZnJvbnRlbmQvdGVzdHMvdW5pdC9zY3JlZW5zL1Jldmlld1NjcmVlbi51bml0LnRlc3QudHN4XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IFJldmlld1NjcmVlbiBmcm9tICcuLi8uLi8uLi9zcmMvc2NyZWVucy9SZXZpZXdTY3JlZW4nO1xyXG5cclxuLy8g64uo7Iic7ZWcIOusuOyekOyXtCDquLDrsJgg66qo7YK57Jy866GcIOuzgOqyvVxyXG5qZXN0Lm1vY2soJ3JlYWN0LW5hdGl2ZS1wYXBlcicsICgpID0+ICh7XHJcbiAgU2VnbWVudGVkQnV0dG9uczogJ1NlZ21lbnRlZEJ1dHRvbnMnLFxyXG4gIENhcmQ6IHtcclxuICAgIGRpc3BsYXlOYW1lOiAnQ2FyZCcsXHJcbiAgICBDb3ZlcjogJ0NhcmQuQ292ZXInLFxyXG4gICAgQ29udGVudDogJ0NhcmQuQ29udGVudCdcclxuICB9LFxyXG4gIEJ1dHRvbjogJ0J1dHRvbicsXHJcbiAgVGl0bGU6ICdUaXRsZScsXHJcbiAgUGFyYWdyYXBoOiAnUGFyYWdyYXBoJyxcclxuICB1c2VUaGVtZTogamVzdC5mbigoKSA9PiAoe1xyXG4gICAgY29sb3JzOiB7XHJcbiAgICAgIHByaW1hcnk6ICcjMDAwJyxcclxuICAgICAgYmFja2dyb3VuZDogJyNmZmYnLFxyXG4gICAgfVxyXG4gIH0pKVxyXG59KSk7XHJcblxyXG5kZXNjcmliZSgnUmV2aWV3U2NyZWVuIOuLqOychCDthYzsiqTtirgnLCAoKSA9PiB7XHJcbiAgaXQoJ+y7tO2PrOuEjO2KuOqwgCDroIzrjZTrp4Eg65CY7Ja07JW8IO2VqCcsICgpID0+IHtcclxuICAgIGV4cGVjdCgoKSA9PiByZW5kZXIoPFJldmlld1NjcmVlbiAvPikpLm5vdC50b1Rocm93KCk7XHJcbiAgfSk7XHJcbiAgXHJcbiAgaXQoJ+y0iOq4sCBwZXJpb2Qg7IOB7YOc64qUIHdlZWtseeyXrOyVvCDtlagnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKDxSZXZpZXdTY3JlZW4gLz4pO1xyXG4gICAgLy8g7KO86rCEIOq4sOuhnSDtg4DsnbTti4DsnbQg67O07J2064qU7KeAIO2ZleyduFxyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgn64KY7J2YIOyjvOqwhCDquLDroZ0nKSkudG9CZVRydXRoeSgpO1xyXG4gIH0pO1xyXG4gIFxyXG4gIGl0KCfqt7jrnpjtlIQg67KE7Yq87J20IOyhtOyerO2VtOyVvCDtlagnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKDxSZXZpZXdTY3JlZW4gLz4pO1xyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgn6rCQ7KCVIOuzgO2ZlCDqt7jrnpjtlIQg67O06riwJykpLnRvQmVUcnV0aHkoKTtcclxuICB9KTtcclxuICBcclxuICBpdCgn7Ya16rOEIOy5tOuTnCDrgrTsmqnsnbQg7Jis67CU66W06rKMIO2RnOyLnOuQmOyWtOyVvCDtlagnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKDxSZXZpZXdTY3JlZW4gLz4pO1xyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgn7J2067KIIOyjvOydmCDthrXqs4QnKSkudG9CZVRydXRoeSgpO1xyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgn6rCA7J6lIOunjuydtCDripDrgoAg6rCQ7KCVOiDtlonrs7UnKSkudG9CZVRydXRoeSgpO1xyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgn6rKM7Iuc66y8IOyImDogN+qwnCcpKS50b0JlVHJ1dGh5KCk7XHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCfrsJvsnYAg6rO16rCQOiAyM+qwnCcpKS50b0JlVHJ1dGh5KCk7XHJcbiAgfSk7XHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBTUFBLFdBQUEsR0FBS0MsSUFBSSxDQUFDLG9CQUFvQixFQUFFO0VBQUEsT0FBTztJQUNyQ0MsZ0JBQWdCLEVBQUUsa0JBQWtCO0lBQ3BDQyxJQUFJLEVBQUU7TUFDSkMsV0FBVyxFQUFFLE1BQU07TUFDbkJDLEtBQUssRUFBRSxZQUFZO01BQ25CQyxPQUFPLEVBQUU7SUFDWCxDQUFDO0lBQ0RDLE1BQU0sRUFBRSxRQUFRO0lBQ2hCQyxLQUFLLEVBQUUsT0FBTztJQUNkQyxTQUFTLEVBQUUsV0FBVztJQUN0QkMsUUFBUSxFQUFFQyxJQUFJLENBQUNDLEVBQUUsQ0FBQztNQUFBLE9BQU87UUFDdkJDLE1BQU0sRUFBRTtVQUNOQyxPQUFPLEVBQUUsTUFBTTtVQUNmQyxVQUFVLEVBQUU7UUFDZDtNQUNGLENBQUM7SUFBQSxDQUFDO0VBQ0osQ0FBQztBQUFBLENBQUMsQ0FBQztBQUFDLElBQUFDLHNCQUFBLEdBQUFDLE9BQUE7QUFyQkosSUFBQUMsTUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsWUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsYUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQTZELElBQUFJLFdBQUEsR0FBQUosT0FBQTtBQUFBLFNBQUFqQixZQUFBO0VBQUEsSUFBQXNCLFFBQUEsR0FBQUwsT0FBQTtJQUFBTixJQUFBLEdBQUFXLFFBQUEsQ0FBQVgsSUFBQTtFQUFBWCxXQUFBLFlBQUFBLFlBQUE7SUFBQSxPQUFBVyxJQUFBO0VBQUE7RUFBQSxPQUFBQSxJQUFBO0FBQUE7QUFxQjdEWSxRQUFRLENBQUMscUJBQXFCLEVBQUUsWUFBTTtFQUNwQ0MsRUFBRSxDQUFDLGlCQUFpQixFQUFFLFlBQU07SUFDMUJDLE1BQU0sQ0FBQztNQUFBLE9BQU0sSUFBQUMsbUJBQU0sRUFBQyxJQUFBTCxXQUFBLENBQUFNLEdBQUEsRUFBQ1AsYUFBQSxDQUFBUSxPQUFZLElBQUUsQ0FBQyxDQUFDO0lBQUEsRUFBQyxDQUFDQyxHQUFHLENBQUNDLE9BQU8sQ0FBQyxDQUFDO0VBQ3RELENBQUMsQ0FBQztFQUVGTixFQUFFLENBQUMsMEJBQTBCLEVBQUUsWUFBTTtJQUNuQyxJQUFBTyxPQUFBLEdBQXNCLElBQUFMLG1CQUFNLEVBQUMsSUFBQUwsV0FBQSxDQUFBTSxHQUFBLEVBQUNQLGFBQUEsQ0FBQVEsT0FBWSxJQUFFLENBQUMsQ0FBQztNQUF0Q0ksU0FBUyxHQUFBRCxPQUFBLENBQVRDLFNBQVM7SUFFakJQLE1BQU0sQ0FBQ08sU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxDQUFDO0VBQzVDLENBQUMsQ0FBQztFQUVGVCxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsWUFBTTtJQUN6QixJQUFBVSxRQUFBLEdBQXNCLElBQUFSLG1CQUFNLEVBQUMsSUFBQUwsV0FBQSxDQUFBTSxHQUFBLEVBQUNQLGFBQUEsQ0FBQVEsT0FBWSxJQUFFLENBQUMsQ0FBQztNQUF0Q0ksU0FBUyxHQUFBRSxRQUFBLENBQVRGLFNBQVM7SUFDakJQLE1BQU0sQ0FBQ08sU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxDQUFDO0VBQ2hELENBQUMsQ0FBQztFQUVGVCxFQUFFLENBQUMsd0JBQXdCLEVBQUUsWUFBTTtJQUNqQyxJQUFBVyxRQUFBLEdBQXNCLElBQUFULG1CQUFNLEVBQUMsSUFBQUwsV0FBQSxDQUFBTSxHQUFBLEVBQUNQLGFBQUEsQ0FBQVEsT0FBWSxJQUFFLENBQUMsQ0FBQztNQUF0Q0ksU0FBUyxHQUFBRyxRQUFBLENBQVRILFNBQVM7SUFDakJQLE1BQU0sQ0FBQ08sU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxDQUFDO0lBQzFDUixNQUFNLENBQUNPLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxDQUFDO0lBQ2pEUixNQUFNLENBQUNPLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDQyxVQUFVLENBQUMsQ0FBQztJQUMzQ1IsTUFBTSxDQUFDTyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQ0MsVUFBVSxDQUFDLENBQUM7RUFDOUMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119