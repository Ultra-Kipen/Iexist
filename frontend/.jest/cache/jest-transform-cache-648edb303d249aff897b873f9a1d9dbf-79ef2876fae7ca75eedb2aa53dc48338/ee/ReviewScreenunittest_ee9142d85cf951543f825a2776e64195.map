{"version":3,"names":["_getJestObj","mock","SegmentedButtons","Card","displayName","Cover","Content","Button","Title","Paragraph","useTheme","jest","fn","colors","primary","background","_interopRequireDefault","require","_react","_reactNative","_ReviewScreen","_jsxRuntime","_require","describe","it","expect","render","jsx","default","not","toThrow","_render","getByText","toBeTruthy","_render2","_render3"],"sources":["ReviewScreen.unit.test.tsx"],"sourcesContent":["// root/frontend/tests/unit/screens/ReviewScreen.unit.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport ReviewScreen from '../../../src/screens/ReviewScreen';\r\n\r\n// 단순한 문자열 기반 모킹으로 변경\r\njest.mock('react-native-paper', () => ({\r\n  SegmentedButtons: 'SegmentedButtons',\r\n  Card: {\r\n    displayName: 'Card',\r\n    Cover: 'Card.Cover',\r\n    Content: 'Card.Content'\r\n  },\r\n  Button: 'Button',\r\n  Title: 'Title',\r\n  Paragraph: 'Paragraph',\r\n  useTheme: jest.fn(() => ({\r\n    colors: {\r\n      primary: '#000',\r\n      background: '#fff',\r\n    }\r\n  }))\r\n}));\r\n\r\ndescribe('ReviewScreen 단위 테스트', () => {\r\n  it('컴포넌트가 렌더링 되어야 함', () => {\r\n    expect(() => render(<ReviewScreen />)).not.toThrow();\r\n  });\r\n  \r\n  it('초기 period 상태는 weekly여야 함', () => {\r\n    const { getByText } = render(<ReviewScreen />);\r\n    // 주간 기록 타이틀이 보이는지 확인\r\n    expect(getByText('나의 주간 기록')).toBeTruthy();\r\n  });\r\n  \r\n  it('그래프 버튼이 존재해야 함', () => {\r\n    const { getByText } = render(<ReviewScreen />);\r\n    expect(getByText('감정 변화 그래프 보기')).toBeTruthy();\r\n  });\r\n  \r\n  it('통계 카드 내용이 올바르게 표시되어야 함', () => {\r\n    const { getByText } = render(<ReviewScreen />);\r\n    expect(getByText('이번 주의 통계')).toBeTruthy();\r\n    expect(getByText('가장 많이 느낀 감정: 행복')).toBeTruthy();\r\n    expect(getByText('게시물 수: 7개')).toBeTruthy();\r\n    expect(getByText('받은 공감: 23개')).toBeTruthy();\r\n  });\r\n});"],"mappings":"AAMAA,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE;EAAA,OAAO;IACrCC,gBAAgB,EAAE,kBAAkB;IACpCC,IAAI,EAAE;MACJC,WAAW,EAAE,MAAM;MACnBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,WAAW;IACtBC,QAAQ,EAAEC,IAAI,CAACC,EAAE,CAAC;MAAA,OAAO;QACvBC,MAAM,EAAE;UACNC,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE;QACd;MACF,CAAC;IAAA,CAAC;EACJ,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AArBJ,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA6D,IAAAI,WAAA,GAAAJ,OAAA;AAAA,SAAAjB,YAAA;EAAA,IAAAsB,QAAA,GAAAL,OAAA;IAAAN,IAAA,GAAAW,QAAA,CAAAX,IAAA;EAAAX,WAAA,YAAAA,YAAA;IAAA,OAAAW,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAqB7DY,QAAQ,CAAC,qBAAqB,EAAE,YAAM;EACpCC,EAAE,CAAC,iBAAiB,EAAE,YAAM;IAC1BC,MAAM,CAAC;MAAA,OAAM,IAAAC,mBAAM,EAAC,IAAAL,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAQ,OAAY,IAAE,CAAC,CAAC;IAAA,EAAC,CAACC,GAAG,CAACC,OAAO,CAAC,CAAC;EACtD,CAAC,CAAC;EAEFN,EAAE,CAAC,0BAA0B,EAAE,YAAM;IACnC,IAAAO,OAAA,GAAsB,IAAAL,mBAAM,EAAC,IAAAL,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAQ,OAAY,IAAE,CAAC,CAAC;MAAtCI,SAAS,GAAAD,OAAA,CAATC,SAAS;IAEjBP,MAAM,CAACO,SAAS,CAAC,UAAU,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;EAC5C,CAAC,CAAC;EAEFT,EAAE,CAAC,gBAAgB,EAAE,YAAM;IACzB,IAAAU,QAAA,GAAsB,IAAAR,mBAAM,EAAC,IAAAL,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAQ,OAAY,IAAE,CAAC,CAAC;MAAtCI,SAAS,GAAAE,QAAA,CAATF,SAAS;IACjBP,MAAM,CAACO,SAAS,CAAC,cAAc,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;EAChD,CAAC,CAAC;EAEFT,EAAE,CAAC,wBAAwB,EAAE,YAAM;IACjC,IAAAW,QAAA,GAAsB,IAAAT,mBAAM,EAAC,IAAAL,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAQ,OAAY,IAAE,CAAC,CAAC;MAAtCI,SAAS,GAAAG,QAAA,CAATH,SAAS;IACjBP,MAAM,CAACO,SAAS,CAAC,UAAU,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;IAC1CR,MAAM,CAACO,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;IACjDR,MAAM,CAACO,SAAS,CAAC,WAAW,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;IAC3CR,MAAM,CAACO,SAAS,CAAC,YAAY,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}