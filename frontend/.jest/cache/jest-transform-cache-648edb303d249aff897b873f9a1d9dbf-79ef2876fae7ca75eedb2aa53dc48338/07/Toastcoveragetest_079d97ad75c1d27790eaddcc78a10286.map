{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_Toast","_interopRequireWildcard","_reactNative2","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_callSuper","o","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","jest","useFakeTimers","mountComponent","Component","wrapper","current","instance","Wrapper","_React$Component","_this","_classCallCheck2","_len","arguments","length","args","Array","_key","concat","state","visible","message","type","position","duration","onClose","fn","_inherits2","_createClass2","key","value","componentDidMount","render","jsx","ref","testID","React","component","setProps","props","setState","describe","beforeEach","clearAllMocks","clearAllTimers","spyOn","Animated","mockImplementation","start","callback","finished","test","_mountComponent","Toast","forEach","runAllTimers","act","advanceTimersByTime","icon","View","_mountComponent2","hideToast","expect","toHaveBeenCalled","_mountComponent3","useEffect","mock","calls","_mountComponent4","ToastController","setRef","show","hide"],"sources":["Toast.coverage.test.tsx"],"sourcesContent":["// __tests__/components/Toast.coverage.test.tsx\r\nimport React from 'react';\r\nimport { act } from '@testing-library/react-native';\r\nimport Toast, { ToastController } from '../../src/components/Toast';\r\nimport { View, Animated } from 'react-native';\r\n\r\n// 타이머 모킹\r\njest.useFakeTimers();\r\n\r\n// 더미 컴포넌트 래퍼 - 실제로 렌더링하고 이벤트를 발생시킬 수 있는 환경 제공\r\nfunction mountComponent(Component) {\r\n  const wrapper = { current: null };\r\n  const instance = { current: null };\r\n  \r\n  class Wrapper extends React.Component {\r\n    state = {\r\n      visible: true,\r\n      message: \"테스트 메시지\",\r\n      type: \"info\",\r\n      position: \"bottom\",\r\n      duration: 3000,\r\n      onClose: jest.fn()\r\n    };\r\n    \r\n    componentDidMount() {\r\n      wrapper.current = this;\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <Component\r\n          ref={ref => { instance.current = ref; }}\r\n          visible={this.state.visible}\r\n          message={this.state.message}\r\n          type={this.state.type}\r\n          position={this.state.position}\r\n          duration={this.state.duration}\r\n          onClose={this.state.onClose}\r\n          testID=\"toast\"\r\n        />\r\n      );\r\n    }\r\n  }\r\n  \r\n  // 컴포넌트 \"마운트\"\r\n  const component = new Wrapper({});\r\n  component.componentDidMount();\r\n  component.render();\r\n  \r\n  return {\r\n    wrapper,\r\n    instance,\r\n    // 상태 업데이트를 위한 헬퍼 함수\r\n    setProps(props) {\r\n      wrapper.current.setState(props);\r\n      // 다시 렌더링\r\n      wrapper.current.render();\r\n    }\r\n  };\r\n}\r\n\r\ndescribe('Toast Coverage Tests', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    jest.clearAllTimers();\r\n    \r\n    // Animated 모듈 모킹\r\n    jest.spyOn(Animated, 'timing').mockImplementation(() => ({\r\n      start: jest.fn(callback => callback && callback({ finished: true }))\r\n    }));\r\n  });\r\n  \r\n  test('Tests all prop combinations for coverage', () => {\r\n    const { setProps } = mountComponent(Toast);\r\n    \r\n    // 다양한 타입 테스트\r\n    ['success', 'error', 'warning', 'info'].forEach(type => {\r\n      setProps({ type });\r\n      jest.runAllTimers();\r\n    });\r\n    \r\n    // 위치 테스트\r\n    ['top', 'bottom'].forEach(position => {\r\n      setProps({ position });\r\n      jest.runAllTimers();\r\n    });\r\n    \r\n    // 다양한 상태 변경 테스트\r\n    setProps({ visible: false });\r\n    jest.runAllTimers();\r\n    \r\n    setProps({ visible: true });\r\n    jest.runAllTimers();\r\n    \r\n    // 짧은 지속 시간으로 테스트\r\n    setProps({ duration: 500 });\r\n    act(() => {\r\n      jest.advanceTimersByTime(500);\r\n    });\r\n    \r\n    // 아이콘 추가 테스트\r\n    setProps({ icon: <View testID=\"test-icon\" /> });\r\n    jest.runAllTimers();\r\n  });\r\n  \r\n  test('Tests hideToast function directly', () => {\r\n    const onClose = jest.fn();\r\n    const { instance } = mountComponent(Toast);\r\n    \r\n    // 직접 hideToast 호출\r\n    instance.current.hideToast();\r\n    jest.runAllTimers();\r\n    expect(onClose).toHaveBeenCalled();\r\n  });\r\n  \r\n  test('Tests useEffect cleanup', () => {\r\n    const { setProps } = mountComponent(Toast);\r\n    \r\n    // 타이머 생성\r\n    setProps({ visible: true, duration: 3000 });\r\n    \r\n    // 컴포넌트 언마운트를 시뮬레이션하여 cleanup 실행\r\n    act(() => {\r\n      // useEffect의 cleanup 함수 실행\r\n      React.useEffect.mock.calls[0][0]()();\r\n    });\r\n    \r\n    // cleanup 후 타이머가 취소되었는지 확인\r\n    jest.runAllTimers();\r\n  });\r\n  \r\n  test('Tests ToastController functionality', () => {\r\n    const { instance } = mountComponent(Toast);\r\n    \r\n    // ToastController에 ref 설정\r\n    ToastController.setRef(instance.current);\r\n    \r\n    // 다양한 속성으로 show 메서드 테스트\r\n    ToastController.show({ \r\n      message: '새 메시지', \r\n      type: 'success',\r\n      position: 'top',\r\n      duration: 2000,\r\n      icon: <View />\r\n    });\r\n    \r\n    jest.runAllTimers();\r\n    \r\n    // hide 메서드 테스트\r\n    ToastController.hide();\r\n    jest.runAllTimers();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}