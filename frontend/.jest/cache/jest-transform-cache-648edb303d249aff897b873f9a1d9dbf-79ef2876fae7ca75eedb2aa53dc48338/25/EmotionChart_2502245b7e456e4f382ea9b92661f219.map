{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeChartKit","_jsxRuntime","Dimensions","EmotionChart","_ref","data","timeRange","_ref$type","type","_ref$height","height","screenWidth","get","width","length","jsx","View","style","styles","emptyContainer","children","Text","emptyText","emotionCounts","emotionColors","forEach","item","emotionName","color","pieData","Object","keys","map","name","count","legendFontColor","legendFontSize","jsxs","container","title","getChartTitle","PieChart","chartConfig","accessor","backgroundColor","paddingLeft","absolute","dates","_toConsumableArray2","default","Set","date","sort","emotions","datasets","emotion","_emotionData$","emotionData","filter","matchingItem","find","strokeWidth","lineData","labels","legend","LineChart","bezier","chart","backgroundGradientFrom","backgroundGradientTo","opacity","arguments","undefined","decimalPlaces","labelColor","borderRadius","propsForDots","r","stroke","StyleSheet","create","padding","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","marginBottom","textAlign","justifyContent","alignItems","_default","exports"],"sources":["EmotionChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { LineChart, PieChart } from 'react-native-chart-kit';\r\n\r\n// require로 Dimensions 가져오기\r\nconst Dimensions = require('react-native').Dimensions;\r\n\r\ninterface EmotionData {\r\n  count: number;\r\n  date: string;\r\n  emotionId: number;\r\n  emotionName: string;\r\n  color: string;\r\n}\r\n\r\ninterface EmotionChartProps {\r\n  data: EmotionData[];\r\n  timeRange: 'daily' | 'weekly' | 'monthly' | 'yearly';\r\n  type?: 'line' | 'pie';\r\n  height?: number;\r\n}\r\n\r\nconst EmotionChart: React.FC<EmotionChartProps> = ({\r\n  data,\r\n  timeRange,\r\n  type = 'line',\r\n  height = 220,\r\n}) => {\r\n  // Dimensions API 사용 (as 키워드로 이름 변경)\r\n  const screenWidth = Dimensions.get('window').width - 32;\r\n  \r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <View style={styles.emptyContainer}>\r\n        <Text style={styles.emptyText}>감정 기록이 없습니다.</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (type === 'pie') {\r\n    // 감정별 분포를 위한 파이 차트 데이터 가공\r\n    const emotionCounts: Record<string, number> = {};\r\n    const emotionColors: Record<string, string> = {};\r\n    \r\n    data.forEach(item => {\r\n      if (emotionCounts[item.emotionName]) {\r\n        emotionCounts[item.emotionName] += 1;\r\n      } else {\r\n        emotionCounts[item.emotionName] = 1;\r\n        emotionColors[item.emotionName] = item.color;\r\n      }\r\n    });\r\n\r\n    const pieData = Object.keys(emotionCounts).map(name => ({\r\n      name,\r\n      count: emotionCounts[name],\r\n      color: emotionColors[name] || '#ccc',\r\n      legendFontColor: '#7F7F7F',\r\n      legendFontSize: 12,\r\n    }));\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>{getChartTitle(timeRange)} 감정 분포</Text>\r\n        <PieChart\r\n          data={pieData}\r\n          width={screenWidth}\r\n          height={height}\r\n          chartConfig={chartConfig}\r\n          accessor=\"count\"\r\n          backgroundColor=\"transparent\"\r\n          paddingLeft=\"15\"\r\n          absolute\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 라인 차트를 위한 데이터 가공\r\n  const dates = [...new Set(data.map(item => item.date))].sort();\r\n  const emotions = [...new Set(data.map(item => item.emotionName))];\r\n  \r\n  const datasets = emotions.map(emotion => {\r\n    const emotionData = data.filter(item => item.emotionName === emotion);\r\n    const color = emotionData[0]?.color || '#ccc';\r\n    \r\n    return {\r\n      data: dates.map(date => {\r\n        const matchingItem = emotionData.find(item => item.date === date);\r\n        return matchingItem ? matchingItem.count : 0;\r\n      }),\r\n      color: () => color,\r\n      strokeWidth: 2,\r\n    };\r\n  });\r\n\r\n  const lineData = {\r\n    labels: dates,\r\n    datasets,\r\n    legend: emotions,\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{getChartTitle(timeRange)} 감정 변화</Text>\r\n      <LineChart\r\n        data={lineData}\r\n        width={screenWidth}\r\n        height={height}\r\n        chartConfig={chartConfig}\r\n        bezier\r\n        style={styles.chart}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst getChartTitle = (timeRange: string): string => {\r\n  switch (timeRange) {\r\n    case 'daily':\r\n      return '일간';\r\n    case 'weekly':\r\n      return '주간';\r\n    case 'monthly':\r\n      return '월간';\r\n    case 'yearly':\r\n      return '연간';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst chartConfig = {\r\n  backgroundGradientFrom: '#ffffff',\r\n  backgroundGradientTo: '#ffffff',\r\n  color: (opacity = 1) => `rgba(74, 144, 226, ${opacity})`,\r\n  strokeWidth: 2,\r\n  decimalPlaces: 0,\r\n  labelColor: (opacity = 1) => `rgba(102, 102, 102, ${opacity})`,\r\n  style: {\r\n    borderRadius: 16,\r\n  },\r\n  propsForDots: {\r\n    r: '5',\r\n    strokeWidth: '1',\r\n    stroke: '#ffffff',\r\n  },\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginVertical: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    marginBottom: 16,\r\n    color: '#333333',\r\n    textAlign: 'center',\r\n  },\r\n  chart: {\r\n    marginVertical: 8,\r\n    borderRadius: 8,\r\n  },\r\n  emptyContainer: {\r\n    height: 200,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 12,\r\n    marginVertical: 8,\r\n  },\r\n  emptyText: {\r\n    color: '#999999',\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default EmotionChart;"],"mappings":"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","ignoreList":[]}