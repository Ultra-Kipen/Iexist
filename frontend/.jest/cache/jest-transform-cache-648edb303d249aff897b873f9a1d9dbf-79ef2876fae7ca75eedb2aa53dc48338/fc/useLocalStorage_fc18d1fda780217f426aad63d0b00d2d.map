{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","cov_1rfyaiuv3x","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","useLocalStorage","key","initialValue","_ref","useState","_ref2","_slicedToArray2","default","storedValue","setStoredValue","useEffect","loadStoredValue","_ref3","_asyncToGenerator2","item","AsyncStorage","getItem","JSON","parse","e","error","console","apply","arguments","setValue","useCallback","_ref4","value","valueToStore","undefined","removeItem","saveValue","stringify","setItem","_x","removeValue","_default","exports"],"sources":["useLocalStorage.ts"],"sourcesContent":["// hooks/useLocalStorage.ts\r\n// 로컬 스토리지 데이터 관리를 위한 커스텀 훅\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport function useLocalStorage<T>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, (value: T | ((val: T) => T)) => Promise<void>, () => Promise<void>] {\r\n  // 상태 초기화\r\n  const [storedValue, setStoredValue] = useState<T>(initialValue);\r\n  \r\n  // AsyncStorage에서 데이터 초기 로드\r\n  useEffect(() => {\r\n    const loadStoredValue = async () => {\r\n      try {\r\n        const item = await AsyncStorage.getItem(key);\r\n        // 저장된 값이 없으면 초기값 사용\r\n        if (item === null) {\r\n          setStoredValue(initialValue);\r\n        } else {\r\n          try {\r\n            // JSON 파싱 시도\r\n            setStoredValue(JSON.parse(item));\r\n          } catch (e) {\r\n            // JSON이 아니면 문자열 그대로 저장\r\n            setStoredValue(item as unknown as T);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error loading ${key} from AsyncStorage:`, error);\r\n        setStoredValue(initialValue);\r\n      }\r\n    };\r\n    \r\n    loadStoredValue();\r\n  }, [key, initialValue]);\r\n  \r\n  // 값 설정 함수\r\n  const setValue = useCallback(async (value: T | ((val: T) => T)) => {\r\n    try {\r\n      // 함수인 경우 이전 값을 인자로 전달\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      \r\n      // 상태 업데이트\r\n      setStoredValue(valueToStore);\r\n      \r\n      // AsyncStorage에 저장\r\n      if (valueToStore === undefined) {\r\n        await AsyncStorage.removeItem(key);\r\n      } else {\r\n        const saveValue = typeof valueToStore === 'string' \r\n          ? valueToStore \r\n          : JSON.stringify(valueToStore);\r\n        await AsyncStorage.setItem(key, saveValue);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error setting ${key} in AsyncStorage:`, error);\r\n    }\r\n  }, [key, storedValue]);\r\n  \r\n  // 항목 제거 함수\r\n  const removeValue = useCallback(async () => {\r\n    try {\r\n      await AsyncStorage.removeItem(key);\r\n      setStoredValue(initialValue);\r\n    } catch (error) {\r\n      console.error(`Error removing ${key} from AsyncStorage:`, error);\r\n    }\r\n  }, [key, initialValue]);\r\n  \r\n  return [storedValue, setValue, removeValue];\r\n}\r\n\r\nexport default useLocalStorage;"],"mappings":";;;;;;;;AAGA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAC,sBAAA,CAAAF,OAAA;AAAqE,SAAAG,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAU,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,eAAA;IAAApB,IAAA;EAAA;EAAA,IAAAqB,QAAA,GAAApB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAkB,QAAA,CAAAtB,IAAA,KAAAsB,QAAA,CAAAtB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAqB,QAAA,CAAAtB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAkB,cAAA,GAAAD,QAAA,CAAAtB,IAAA;EAAA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAwB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAxB,cAAA;AAE9D,SAASyB,eAAeA,CAC7BC,GAAW,EACXC,YAAe,EAC0D;EAAA3B,cAAA,GAAAoB,CAAA;EAEzE,IAAAQ,IAAA,IAAA5B,cAAA,GAAAmB,CAAA,OAAsC,IAAAU,eAAQ,EAAIF,YAAY,CAAC;IAAAG,KAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,IAAA;IAAxDK,WAAW,GAAAH,KAAA;IAAEI,cAAc,GAAAJ,KAAA;EAA8B9B,cAAA,GAAAmB,CAAA;EAGhE,IAAAgB,gBAAS,EAAC,YAAM;IAAAnC,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAmB,CAAA;IACd,IAAMiB,eAAe;MAAA,IAAAC,KAAA,OAAAC,kBAAA,CAAAN,OAAA,EAAG,aAAY;QAAAhC,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAmB,CAAA;QAClC,IAAI;UACF,IAAMoB,IAAI,IAAAvC,cAAA,GAAAmB,CAAA,aAASqB,qBAAY,CAACC,OAAO,CAACf,GAAG,CAAC;UAAC1B,cAAA,GAAAmB,CAAA;UAE7C,IAAIoB,IAAI,KAAK,IAAI,EAAE;YAAAvC,cAAA,GAAAqB,CAAA;YAAArB,cAAA,GAAAmB,CAAA;YACjBe,cAAc,CAACP,YAAY,CAAC;UAC9B,CAAC,MAAM;YAAA3B,cAAA,GAAAqB,CAAA;YAAArB,cAAA,GAAAmB,CAAA;YACL,IAAI;cAAAnB,cAAA,GAAAmB,CAAA;cAEFe,cAAc,CAACQ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;YAClC,CAAC,CAAC,OAAOK,CAAC,EAAE;cAAA5C,cAAA,GAAAmB,CAAA;cAEVe,cAAc,CAACK,IAAoB,CAAC;YACtC;UACF;QACF,CAAC,CAAC,OAAOM,KAAK,EAAE;UAAA7C,cAAA,GAAAmB,CAAA;UACd2B,OAAO,CAACD,KAAK,CAAC,iBAAiBnB,GAAG,qBAAqB,EAAEmB,KAAK,CAAC;UAAC7C,cAAA,GAAAmB,CAAA;UAChEe,cAAc,CAACP,YAAY,CAAC;QAC9B;MACF,CAAC;MAAA,gBAnBKS,eAAeA,CAAA;QAAA,OAAAC,KAAA,CAAAU,KAAA,OAAAC,SAAA;MAAA;IAAA,GAmBpB;IAAChD,cAAA,GAAAmB,CAAA;IAEFiB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACV,GAAG,EAAEC,YAAY,CAAC,CAAC;EAGvB,IAAMsB,QAAQ,IAAAjD,cAAA,GAAAmB,CAAA,QAAG,IAAA+B,kBAAW;IAAA,IAAAC,KAAA,OAAAb,kBAAA,CAAAN,OAAA,EAAC,WAAOoB,KAA0B,EAAK;MAAApD,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAmB,CAAA;MACjE,IAAI;QAEF,IAAMkC,YAAY,IAAArD,cAAA,GAAAmB,CAAA,QAAGiC,KAAK,YAAYhD,QAAQ,IAAAJ,cAAA,GAAAqB,CAAA,UAAG+B,KAAK,CAACnB,WAAW,CAAC,KAAAjC,cAAA,GAAAqB,CAAA,UAAG+B,KAAK;QAACpD,cAAA,GAAAmB,CAAA;QAG5Ee,cAAc,CAACmB,YAAY,CAAC;QAACrD,cAAA,GAAAmB,CAAA;QAG7B,IAAIkC,YAAY,KAAKC,SAAS,EAAE;UAAAtD,cAAA,GAAAqB,CAAA;UAAArB,cAAA,GAAAmB,CAAA;UAC9B,MAAMqB,qBAAY,CAACe,UAAU,CAAC7B,GAAG,CAAC;QACpC,CAAC,MAAM;UAAA1B,cAAA,GAAAqB,CAAA;UACL,IAAMmC,SAAS,IAAAxD,cAAA,GAAAmB,CAAA,QAAG,OAAOkC,YAAY,KAAK,QAAQ,IAAArD,cAAA,GAAAqB,CAAA,UAC9CgC,YAAY,KAAArD,cAAA,GAAAqB,CAAA,UACZqB,IAAI,CAACe,SAAS,CAACJ,YAAY,CAAC;UAACrD,cAAA,GAAAmB,CAAA;UACjC,MAAMqB,qBAAY,CAACkB,OAAO,CAAChC,GAAG,EAAE8B,SAAS,CAAC;QAC5C;MACF,CAAC,CAAC,OAAOX,KAAK,EAAE;QAAA7C,cAAA,GAAAmB,CAAA;QACd2B,OAAO,CAACD,KAAK,CAAC,iBAAiBnB,GAAG,mBAAmB,EAAEmB,KAAK,CAAC;MAC/D;IACF,CAAC;IAAA,iBAAAc,EAAA;MAAA,OAAAR,KAAA,CAAAJ,KAAA,OAAAC,SAAA;IAAA;EAAA,KAAE,CAACtB,GAAG,EAAEO,WAAW,CAAC,CAAC;EAGtB,IAAM2B,WAAW,IAAA5D,cAAA,GAAAmB,CAAA,QAAG,IAAA+B,kBAAW,MAAAZ,kBAAA,CAAAN,OAAA,EAAC,aAAY;IAAAhC,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAmB,CAAA;IAC1C,IAAI;MAAAnB,cAAA,GAAAmB,CAAA;MACF,MAAMqB,qBAAY,CAACe,UAAU,CAAC7B,GAAG,CAAC;MAAC1B,cAAA,GAAAmB,CAAA;MACnCe,cAAc,CAACP,YAAY,CAAC;IAC9B,CAAC,CAAC,OAAOkB,KAAK,EAAE;MAAA7C,cAAA,GAAAmB,CAAA;MACd2B,OAAO,CAACD,KAAK,CAAC,kBAAkBnB,GAAG,qBAAqB,EAAEmB,KAAK,CAAC;IAClE;EACF,CAAC,GAAE,CAACnB,GAAG,EAAEC,YAAY,CAAC,CAAC;EAAC3B,cAAA,GAAAmB,CAAA;EAExB,OAAO,CAACc,WAAW,EAAEgB,QAAQ,EAAEW,WAAW,CAAC;AAC7C;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAA9B,OAAA,GAEcP,eAAe","ignoreList":[]}