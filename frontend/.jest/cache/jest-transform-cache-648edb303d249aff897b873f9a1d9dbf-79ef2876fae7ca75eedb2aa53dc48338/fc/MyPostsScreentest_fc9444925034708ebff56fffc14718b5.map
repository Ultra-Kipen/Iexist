{"version":3,"names":["_getJestObj","mock","getMyPosts","jest","fn","Promise","resolve","data","posts","post_id","content","emotion_summary","like_count","comment_count","created_at","deletePost","success","alert","_interopRequireDefault","require","_asyncToGenerator2","_MyPostsScreen","_postService","_require","mockNavigate","mockAddListener","describe","beforeEach","clearAllMocks","it","expect","MyPostsScreen","toBeDefined","postService","default","response","length","toBe"],"sources":["MyPostsScreen.test.tsx"],"sourcesContent":["// __TESTS__/screens/MyPostsScreen.test.tsx\r\nimport React from 'react';\r\nimport MyPostsScreen from '../../src/screens/MyPostsScreen';\r\nimport postService from '../../src/services/api/postService';\r\nimport { Alert } from 'react-native';\r\n\r\n// 서비스 모킹\r\njest.mock('../../src/services/api/postService', () => ({\r\n  getMyPosts: jest.fn(() => Promise.resolve({\r\n    data: {\r\n      posts: [\r\n        {\r\n          post_id: 1,\r\n          content: '첫 번째 테스트 게시물입니다.',\r\n          emotion_summary: '행복',\r\n          like_count: 5,\r\n          comment_count: 2,\r\n          created_at: '2025-03-01T12:00:00Z',\r\n        }\r\n      ]\r\n    }\r\n  })),\r\n  deletePost: jest.fn(() => Promise.resolve({\r\n    data: { success: true }\r\n  }))\r\n}));\r\n\r\n// Alert 모킹\r\njest.mock('react-native/Libraries/Alert/Alert', () => ({\r\n  alert: jest.fn(),\r\n}));\r\n\r\n// 컴포넌트 모킹 - 실제 컴포넌트를 렌더링하지 않음\r\njest.mock('../../src/screens/MyPostsScreen', () => 'MyPostsScreen');\r\n\r\n// 네비게이션 모킹\r\nconst mockNavigate = jest.fn();\r\nconst mockAddListener = jest.fn(() => jest.fn());\r\n\r\ndescribe('MyPostsScreen', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  // 1. 컴포넌트 모듈 로딩 테스트\r\n  it('imports without crashing', () => {\r\n    expect(MyPostsScreen).toBeDefined();\r\n  });\r\n\r\n  // 2. 서비스 함수가 정의되어 있는지 확인\r\n  it('has defined service methods', () => {\r\n    expect(postService.getMyPosts).toBeDefined();\r\n    expect(postService.deletePost).toBeDefined();\r\n  });\r\n\r\n  // 3. 서비스 반환 값 확인\r\n  it('returns expected data from service mock', async () => {\r\n    const response = await postService.getMyPosts();\r\n    expect(response.data.posts.length).toBe(1);\r\n    expect(response.data.posts[0].post_id).toBe(1);\r\n  });\r\n});"],"mappings":"AAOAA,WAAA,GAAKC,IAAI,uCAAuC;EAAA,OAAO;IACrDC,UAAU,EAAEC,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC;QACxCC,IAAI,EAAE;UACJC,KAAK,EAAE,CACL;YACEC,OAAO,EAAE,CAAC;YACVC,OAAO,EAAE,kBAAkB;YAC3BC,eAAe,EAAE,IAAI;YACrBC,UAAU,EAAE,CAAC;YACbC,aAAa,EAAE,CAAC;YAChBC,UAAU,EAAE;UACd,CAAC;QAEL;MACF,CAAC,CAAC;IAAA,EAAC;IACHC,UAAU,EAAEZ,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC;QACxCC,IAAI,EAAE;UAAES,OAAO,EAAE;QAAK;MACxB,CAAC,CAAC;IAAA;EACJ,CAAC;AAAA,CAAC,CAAC;AAGHhB,WAAA,GAAKC,IAAI,CAAC,oCAAoC,EAAE;EAAA,OAAO;IACrDgB,KAAK,EAAEd,IAAI,CAACC,EAAE,CAAC;EACjB,CAAC;AAAA,CAAC,CAAC;AAGHJ,WAAA,GAAKC,IAAI,oCAAoC;EAAA,OAAM,eAAe;AAAA,EAAC;AAAC,IAAAiB,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AA/BpE,IAAAE,cAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA6D,SAAAnB,YAAA;EAAA,IAAAuB,QAAA,GAAAJ,OAAA;IAAAhB,IAAA,GAAAoB,QAAA,CAAApB,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAiC7D,IAAMqB,YAAY,GAAGrB,IAAI,CAACC,EAAE,CAAC,CAAC;AAC9B,IAAMqB,eAAe,GAAGtB,IAAI,CAACC,EAAE,CAAC;EAAA,OAAMD,IAAI,CAACC,EAAE,CAAC,CAAC;AAAA,EAAC;AAEhDsB,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,UAAU,CAAC,YAAM;IACfxB,IAAI,CAACyB,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAGFC,EAAE,CAAC,0BAA0B,EAAE,YAAM;IACnCC,MAAM,CAACC,sBAAa,CAAC,CAACC,WAAW,CAAC,CAAC;EACrC,CAAC,CAAC;EAGFH,EAAE,CAAC,6BAA6B,EAAE,YAAM;IACtCC,MAAM,CAACG,oBAAW,CAAC/B,UAAU,CAAC,CAAC8B,WAAW,CAAC,CAAC;IAC5CF,MAAM,CAACG,oBAAW,CAAClB,UAAU,CAAC,CAACiB,WAAW,CAAC,CAAC;EAC9C,CAAC,CAAC;EAGFH,EAAE,CAAC,yCAAyC,MAAAT,kBAAA,CAAAc,OAAA,EAAE,aAAY;IACxD,IAAMC,QAAQ,SAASF,oBAAW,CAAC/B,UAAU,CAAC,CAAC;IAC/C4B,MAAM,CAACK,QAAQ,CAAC5B,IAAI,CAACC,KAAK,CAAC4B,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC1CP,MAAM,CAACK,QAAQ,CAAC5B,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC4B,IAAI,CAAC,CAAC,CAAC;EAChD,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}