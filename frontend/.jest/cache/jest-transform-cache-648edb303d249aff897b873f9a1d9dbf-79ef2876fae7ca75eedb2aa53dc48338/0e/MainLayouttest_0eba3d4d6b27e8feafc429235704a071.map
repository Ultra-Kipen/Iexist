{"version":3,"names":["fs","require","path","describe","mainLayoutSource","beforeAll","mainLayoutPath","resolve","__dirname","readFileSync","it","expect","toContain","toMatch"],"sources":["MainLayout.test.tsx"],"sourcesContent":["// tests/layouts/MainLayout.test.tsx\r\nimport React from 'react';\r\n\r\n// 파일 시스템 접근 모듈 불러오기 (MainLayout 소스 코드 검사용)\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// MainLayout에 대한 실제 파일 내용 검증 테스트\r\ndescribe('MainLayout 소스 코드 검증', () => {\r\n  let mainLayoutSource;\r\n  \r\n  beforeAll(() => {\r\n    // MainLayout.tsx 파일 읽기\r\n    const mainLayoutPath = path.resolve(__dirname, '../../src/layouts/MainLayout.tsx');\r\n    mainLayoutSource = fs.readFileSync(mainLayoutPath, 'utf8');\r\n  });\r\n  \r\n  it('MainLayout 컴포넌트가 올바른 핵심 요소를 포함해야 함', () => {\r\n    // 필수 React 요소 확인\r\n    expect(mainLayoutSource).toContain('import React from');\r\n    \r\n    // 컴포넌트 정의 확인\r\n    expect(mainLayoutSource).toContain('const MainLayout');\r\n    expect(mainLayoutSource).toContain('React.FC<MainLayoutProps>');\r\n    \r\n    // Props 정의 확인\r\n    expect(mainLayoutSource).toContain('interface MainLayoutProps');\r\n    expect(mainLayoutSource).toContain('children: React.ReactNode');\r\n    expect(mainLayoutSource).toContain('loading?: boolean');\r\n    expect(mainLayoutSource).toContain('header?: React.ReactNode');\r\n    expect(mainLayoutSource).toContain('footer?: React.ReactNode');\r\n    expect(mainLayoutSource).toContain('style?: StyleProp<ViewStyle>');\r\n    expect(mainLayoutSource).toContain('contentContainerStyle?: StyleProp<ViewStyle>');\r\n    expect(mainLayoutSource).toContain('backgroundColor?: string');\r\n  });\r\n  \r\n  it('MainLayout이 loading 상태에 따라 조건부 렌더링을 구현해야 함', () => {\r\n    // loading 상태에 따른 조건부 렌더링 확인\r\n    expect(mainLayoutSource).toMatch(/loading\\s*\\?\\s*<LoadingIndicator/);\r\n    expect(mainLayoutSource).toContain('children');\r\n  });\r\n  \r\n  it('MainLayout이 헤더와 푸터를 조건부로 렌더링해야 함', () => {\r\n    // 헤더와 푸터 조건부 렌더링 확인\r\n    expect(mainLayoutSource).toMatch(/\\{\\s*header\\s*&&/);\r\n    expect(mainLayoutSource).toMatch(/\\{\\s*footer\\s*&&/);\r\n  });\r\n  \r\n  it('MainLayout에 스타일 처리가 구현되어 있어야 함', () => {\r\n    // 스타일 관련 코드 확인\r\n    expect(mainLayoutSource).toContain('StyleSheet.create');\r\n    expect(mainLayoutSource).toContain('style={[');\r\n    expect(mainLayoutSource).toContain('contentContainerStyle');\r\n    expect(mainLayoutSource).toContain('styles.');\r\n    \r\n    // 주요 스타일 속성 확인\r\n    expect(mainLayoutSource).toContain('container:');\r\n    expect(mainLayoutSource).toContain('headerContainer:');\r\n    expect(mainLayoutSource).toContain('contentContainer:');\r\n    expect(mainLayoutSource).toContain('footerContainer:');\r\n  });\r\n  \r\n  it('MainLayout이 플랫폼별 분기 처리를 구현해야 함', () => {\r\n    // 플랫폼 분기 처리 확인\r\n    expect(mainLayoutSource).toContain('Platform.OS');\r\n    expect(mainLayoutSource).toContain('StatusBar.currentHeight');\r\n  });\r\n  \r\n  it('MainLayout이 테마와 배경색 설정을 지원해야 함', () => {\r\n    // 배경색 설정 관련 코드 확인\r\n    expect(mainLayoutSource).toMatch(/backgroundColor:\\s*backgroundColor\\s*\\|\\|\\s*theme\\.colors\\.background/);\r\n  });\r\n  \r\n  it('MainLayout이 안전 영역을 고려해야 함', () => {\r\n    // 안전 영역 관련 코드 확인\r\n    expect(mainLayoutSource).toContain('SafeAreaView');\r\n  });\r\n  \r\n  it('MainLayout이 상태 바 설정을 지원해야 함', () => {\r\n    // 상태 바 관련 코드 확인\r\n    expect(mainLayoutSource).toContain('StatusBar');\r\n    expect(mainLayoutSource).toMatch(/barStyle=\\{theme\\.dark\\s*\\?\\s*'light-content'\\s*:\\s*'dark-content'\\}/);\r\n  });\r\n  \r\n  it('MainLayout이 올바르게 export되어야 함', () => {\r\n    // export 문 확인\r\n    expect(mainLayoutSource).toContain('export default MainLayout');\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}