e595601d09d31dc28f3ec4f151135758
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LogBoxNotificationMessage;
var _View = _interopRequireDefault(require("../../Components/View/View"));
var _StyleSheet = _interopRequireDefault(require("../../StyleSheet/StyleSheet"));
var _Text = _interopRequireDefault(require("../../Text/Text"));
var _LogBoxMessage = _interopRequireDefault(require("./LogBoxMessage"));
var LogBoxStyle = _interopRequireWildcard(require("./LogBoxStyle"));
var React = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function LogBoxNotificationMessage(props) {
  return (0, _jsxRuntime.jsx)(_View.default, {
    style: styles.container,
    children: (0, _jsxRuntime.jsx)(_Text.default, {
      numberOfLines: 1,
      style: styles.text,
      children: props.message && (0, _jsxRuntime.jsx)(_LogBoxMessage.default, {
        plaintext: true,
        message: props.message,
        style: styles.substitutionText
      })
    })
  });
}
var styles = _StyleSheet.default.create({
  container: {
    alignSelf: 'stretch',
    flexGrow: 1,
    flexShrink: 1,
    flexBasis: 'auto',
    borderLeftColor: LogBoxStyle.getTextColor(0.2),
    borderLeftWidth: 1,
    paddingLeft: 8
  },
  text: {
    color: LogBoxStyle.getTextColor(1),
    flex: 1,
    fontSize: 14,
    lineHeight: 22
  },
  substitutionText: {
    color: LogBoxStyle.getTextColor(0.6)
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVmlldyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX1N0eWxlU2hlZXQiLCJfVGV4dCIsIl9Mb2dCb3hNZXNzYWdlIiwiTG9nQm94U3R5bGUiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIlJlYWN0IiwiX2pzeFJ1bnRpbWUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJMb2dCb3hOb3RpZmljYXRpb25NZXNzYWdlIiwicHJvcHMiLCJqc3giLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsImNoaWxkcmVuIiwibnVtYmVyT2ZMaW5lcyIsInRleHQiLCJtZXNzYWdlIiwicGxhaW50ZXh0Iiwic3Vic3RpdHV0aW9uVGV4dCIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJhbGlnblNlbGYiLCJmbGV4R3JvdyIsImZsZXhTaHJpbmsiLCJmbGV4QmFzaXMiLCJib3JkZXJMZWZ0Q29sb3IiLCJnZXRUZXh0Q29sb3IiLCJib3JkZXJMZWZ0V2lkdGgiLCJwYWRkaW5nTGVmdCIsImNvbG9yIiwiZmxleCIsImZvbnRTaXplIiwibGluZUhlaWdodCJdLCJzb3VyY2VzIjpbIkxvZ0JveE5vdGlmaWNhdGlvbk1lc3NhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCB0eXBlIHtNZXNzYWdlIGFzIE1lc3NhZ2VUeXBlfSBmcm9tICcuLi9EYXRhL3BhcnNlTG9nQm94TG9nJztcblxuaW1wb3J0IFZpZXcgZnJvbSAnLi4vLi4vQ29tcG9uZW50cy9WaWV3L1ZpZXcnO1xuaW1wb3J0IFN0eWxlU2hlZXQgZnJvbSAnLi4vLi4vU3R5bGVTaGVldC9TdHlsZVNoZWV0JztcbmltcG9ydCBUZXh0IGZyb20gJy4uLy4uL1RleHQvVGV4dCc7XG5pbXBvcnQgTG9nQm94TWVzc2FnZSBmcm9tICcuL0xvZ0JveE1lc3NhZ2UnO1xuaW1wb3J0ICogYXMgTG9nQm94U3R5bGUgZnJvbSAnLi9Mb2dCb3hTdHlsZSc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExvZ0JveE5vdGlmaWNhdGlvbk1lc3NhZ2UocHJvcHM6IHtcbiAgbWVzc2FnZTogTWVzc2FnZVR5cGUsXG59KTogUmVhY3QuTm9kZSB7XG4gIHJldHVybiAoXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgPFRleHQgbnVtYmVyT2ZMaW5lcz17MX0gc3R5bGU9e3N0eWxlcy50ZXh0fT5cbiAgICAgICAge3Byb3BzLm1lc3NhZ2UgJiYgKFxuICAgICAgICAgIDxMb2dCb3hNZXNzYWdlXG4gICAgICAgICAgICBwbGFpbnRleHRcbiAgICAgICAgICAgIG1lc3NhZ2U9e3Byb3BzLm1lc3NhZ2V9XG4gICAgICAgICAgICBzdHlsZT17c3R5bGVzLnN1YnN0aXR1dGlvblRleHR9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgIDwvVGV4dD5cbiAgICA8L1ZpZXc+XG4gICk7XG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgYWxpZ25TZWxmOiAnc3RyZXRjaCcsXG4gICAgZmxleEdyb3c6IDEsXG4gICAgZmxleFNocmluazogMSxcbiAgICBmbGV4QmFzaXM6ICdhdXRvJyxcbiAgICBib3JkZXJMZWZ0Q29sb3I6IExvZ0JveFN0eWxlLmdldFRleHRDb2xvcigwLjIpLFxuICAgIGJvcmRlckxlZnRXaWR0aDogMSxcbiAgICBwYWRkaW5nTGVmdDogOCxcbiAgfSxcbiAgdGV4dDoge1xuICAgIGNvbG9yOiBMb2dCb3hTdHlsZS5nZXRUZXh0Q29sb3IoMSksXG4gICAgZmxleDogMSxcbiAgICBmb250U2l6ZTogMTQsXG4gICAgbGluZUhlaWdodDogMjIsXG4gIH0sXG4gIHN1YnN0aXR1dGlvblRleHQ6IHtcbiAgICBjb2xvcjogTG9nQm94U3R5bGUuZ2V0VGV4dENvbG9yKDAuNiksXG4gIH0sXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFZQSxJQUFBQSxLQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxXQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxLQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxjQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSSxXQUFBLEdBQUFDLHVCQUFBLENBQUFMLE9BQUE7QUFDQSxJQUFBTSxLQUFBLEdBQUFELHVCQUFBLENBQUFMLE9BQUE7QUFBK0IsSUFBQU8sV0FBQSxHQUFBUCxPQUFBO0FBQUEsU0FBQVEseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFKLHdCQUFBSSxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxT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