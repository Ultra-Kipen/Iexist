{"version":3,"names":["_getJestObj","mock","React","require","SafeAreaView","_ref","children","style","createElement","rn","jest","requireActual","Keyboard","dismiss","fn","useTheme","theme","colors","background","dark","ReactNative","__esModule","default","View","testID","props","Object","assign","virtual","_interopRequireDefault","_react","_reactNative","_reactNative2","_AuthLayout","_jsxRuntime","_require","describe","it","_render","render","jsx","Text","getByText","expect","toBeTruthy","_render2","loading","getByTestId","queryByText","toBeNull","_render3","title","footer","_render4","imageBackground","_render5","logoVisible","queryByTestId","_render6"],"sources":["AuthLayout.test.tsx"],"sourcesContent":["// tests/layouts/AuthLayout.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Text } from 'react-native';\r\nimport AuthLayout from '../../src/layouts/AuthLayout';\r\n\r\n// 모든 필요한 컴포넌트 mock 설정\r\njest.mock('react-native-safe-area-context', () => {\r\n  const React = require('react');\r\n  return {\r\n    SafeAreaView: ({ children, style }) => \r\n      React.createElement('SafeAreaView', { style }, children),\r\n  };\r\n});\r\n\r\n// 추가 모킹\r\njest.mock('react-native', () => {\r\n  const rn = jest.requireActual('react-native');\r\n  rn.Keyboard = {\r\n    dismiss: jest.fn(),\r\n  };\r\n  return rn;\r\n});\r\n\r\n// useTheme 모킹\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#ffffff',\r\n      },\r\n      dark: false,\r\n    },\r\n  }),\r\n}));\r\n\r\n// LoadingIndicator 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => {\r\n  const React = require('react');\r\n  const ReactNative = require('react-native');\r\n  return {\r\n    __esModule: true,\r\n    default: () => React.createElement(ReactNative.View, { testID: 'loading-indicator' }),\r\n  };\r\n});\r\n\r\n// ImageBackground와 Image 모킹\r\njest.mock('react-native/Libraries/Image/Image', () => {\r\n  const React = require('react');\r\n  return (props: { testID: any; }) => {\r\n    return React.createElement('Image', {\r\n      ...props,\r\n      testID: props.testID || 'image',\r\n    });\r\n  };\r\n});\r\n\r\njest.mock('react-native/Libraries/Image/ImageBackground', () => {\r\n  const React = require('react');\r\n  return (props: { testID: any; children: any; }) => {\r\n    return React.createElement('ImageBackground', {\r\n      ...props,\r\n      testID: props.testID || 'image-background',\r\n    }, props.children);\r\n  };\r\n});\r\n\r\n// assets/images 모킹\r\njest.mock('../../assets/images/logo.png', () => 'logo-path', { virtual: true });\r\njest.mock('../../assets/images/auth-background.jpg', () => 'background-path', { virtual: true });\r\n\r\ndescribe('AuthLayout', () => {\r\n  it('renders children correctly', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('shows loading indicator when loading is true', () => {\r\n    const { getByTestId, queryByText } = render(\r\n      <AuthLayout loading={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('loading-indicator')).toBeTruthy();\r\n    expect(queryByText('인증 내용')).toBeNull();\r\n  });\r\n  \r\n  it('renders title and footer when provided', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout\r\n        title={<Text>인증 제목</Text>}\r\n        footer={<Text>인증 푸터</Text>}\r\n      >\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 제목')).toBeTruthy();\r\n    expect(getByText('인증 푸터')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('renders with background image when imageBackground is true', () => {\r\n    const { getByTestId, getByText } = render(\r\n      <AuthLayout imageBackground={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('image-background')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('does not render logo when logoVisible is false', () => {\r\n    const { queryByTestId, getByText } = render(\r\n      <AuthLayout logoVisible={false}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    // 로고 이미지가 렌더링되지 않았는지 확인\r\n    // 여기서는 간단히 내용이 렌더링되는지만 확인\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('renders with default background when imageBackground is false', () => {\r\n    const { queryByTestId, getByText } = render(\r\n      <AuthLayout imageBackground={false}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}