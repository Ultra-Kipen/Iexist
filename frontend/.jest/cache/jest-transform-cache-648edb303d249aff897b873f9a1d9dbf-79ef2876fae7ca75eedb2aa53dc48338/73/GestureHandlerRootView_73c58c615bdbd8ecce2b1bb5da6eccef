dd810faec3e535ff3bac0f528c5c9b4b
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["style"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = GestureHandlerRootView;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _init = require("../init");
var _GestureHandlerRootViewContext = _interopRequireDefault(require("../GestureHandlerRootViewContext"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function GestureHandlerRootView(_ref) {
  var style = _ref.style,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  (0, _init.maybeInitializeFabric)();
  return React.createElement(_GestureHandlerRootViewContext.default.Provider, {
    value: true
  }, React.createElement(_reactNative.View, _extends({
    style: style !== null && style !== void 0 ? style : styles.container
  }, rest)));
}
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9pbml0IiwiX0dlc3R1cmVIYW5kbGVyUm9vdFZpZXdDb250ZXh0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIkdlc3R1cmVIYW5kbGVyUm9vdFZpZXciLCJfcmVmIiwic3R5bGUiLCJyZXN0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsImRlZmF1bHQiLCJfZXhjbHVkZWQiLCJtYXliZUluaXRpYWxpemVGYWJyaWMiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsIlZpZXciLCJfZXh0ZW5kcyIsInN0eWxlcyIsImNvbnRhaW5lciIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJmbGV4Il0sInNvdXJjZXMiOlsiR2VzdHVyZUhhbmRsZXJSb290Vmlldy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBWaWV3UHJvcHMsIFN0eWxlU2hlZXQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgbWF5YmVJbml0aWFsaXplRmFicmljIH0gZnJvbSAnLi4vaW5pdCc7XG5pbXBvcnQgR2VzdHVyZUhhbmRsZXJSb290Vmlld0NvbnRleHQgZnJvbSAnLi4vR2VzdHVyZUhhbmRsZXJSb290Vmlld0NvbnRleHQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdlc3R1cmVIYW5kbGVyUm9vdFZpZXdQcm9wc1xuICBleHRlbmRzIFByb3BzV2l0aENoaWxkcmVuPFZpZXdQcm9wcz4ge31cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2VzdHVyZUhhbmRsZXJSb290Vmlldyh7XG4gIHN0eWxlLFxuICAuLi5yZXN0XG59OiBHZXN0dXJlSGFuZGxlclJvb3RWaWV3UHJvcHMpIHtcbiAgLy8gVHJ5IGluaXRpYWxpemUgZmFicmljIG9uIHRoZSBmaXJzdCByZW5kZXIsIGF0IHRoaXMgcG9pbnQgd2UgY2FuXG4gIC8vIHJlbGlhYmx5IGNoZWNrIGlmIGZhYnJpYyBpcyBlbmFibGVkICh0aGUgZnVuY3Rpb24gY29udGFpbnMgYSBmbGFnXG4gIC8vIHRvIG1ha2Ugc3VyZSBpdCdzIGNhbGxlZCBvbmx5IG9uY2UpXG4gIG1heWJlSW5pdGlhbGl6ZUZhYnJpYygpO1xuXG4gIHJldHVybiAoXG4gICAgPEdlc3R1cmVIYW5kbGVyUm9vdFZpZXdDb250ZXh0LlByb3ZpZGVyIHZhbHVlPlxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlID8/IHN0eWxlcy5jb250YWluZXJ9IHsuLi5yZXN0fSAvPlxuICAgIDwvR2VzdHVyZUhhbmRsZXJSb290Vmlld0NvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7IGZsZXg6IDEgfSxcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxLQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyw4QkFBQSxHQUFBQyxzQkFBQSxDQUFBSixPQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtlLFNBQVNLLHNCQUFUQSxDQUFBQyxJQUFBLEVBR2lCO0VBQUEsSUFGOUJDLEtBRDZDLEdBQUFELElBQUEsQ0FDN0NDLEtBRDZDO0lBRTFDQyxJQUFBLE9BQUFDLHlCQUFBLENBQUFDLE9BQUEsRUFBQUosSUFBQSxFQUFBSyxTQUFBO0VBS0gsSUFBQVQsS0FBQSxDQUFBVSxxQkFBQTtFQUVBLE9BQ0VkLEtBQUEsQ0FBQWUsYUFBQSxDQUFDViw4QkFBQSxDQUFBTyxPQUFELENBQStCSSxRQUEvQjtJQUF3Q0MsS0FBSztFQUE3QyxHQUNFakIsS0FBQSxDQUFBZSxhQUFBLENBQUNaLFlBQUEsQ0FBQWUsSUFBRCxFQUFBQyxRQUFBO0lBQU1WLEtBQUssRUFBRUEsS0FBRixhQUFFQSxLQUFGLGNBQUVBLEtBQUYsR0FBV1csTUFBTSxDQUFDQztFQUE3QixHQUE0Q1gsSUFBNUMsRUFERixDQURGO0FBS0Q7QUFFRCxJQUFNVSxNQUFNLEdBQUdqQixZQUFBLENBQUFtQixVQUFBLENBQVdDLE1BQVgsQ0FBa0I7RUFDL0JGLFNBQVMsRUFBRTtJQUFFRyxJQUFJLEVBQUU7RUFBUjtBQURvQixDQUFsQixDQUFmIiwiaWdub3JlTGlzdCI6W119