{"version":3,"names":["_getJestObj","mock","getItem","jest","fn","key","Promise","resolve","JSON","stringify","id","username","nickname","setItem","removeItem","login","register","logout","getAllEmotions","data","emotion_id","name","icon","color","getDailyEmotionCheck","recordEmotions","useTheme","colors","primary","surface","Button","Card","Content","Actions","Title","TextInput","Icon","Appbar","Header","Action","Avatar","Paragraph","ActivityIndicator","IconButton","Text","Surface","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_reactNative2","_HomeScreen","_AuthContext","_EmotionContext","_jsxRuntime","_require","mockScreenSize","width","height","original","Dimensions","get","spyOn","mockImplementation","dimension","scale","fontScale","describe","afterEach","restoreAllMocks","it","default","_render","render","jsx","AuthProvider","children","EmotionProvider","toJSON","expect","toMatchSnapshot","_render2","_render3","_render4"],"sources":["ResponsiveRendering.test.tsx"],"sourcesContent":["// __tests__/responsive/ResponsiveRendering.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Dimensions } from 'react-native';\r\nimport HomeScreen from '../../src/screens/HomeScreen';\r\nimport { AuthProvider } from '../../src/contexts/AuthContext';\r\nimport { EmotionProvider } from '../../src/contexts/EmotionContext';\r\n\r\n// AsyncStorage 모킹 - 사용자 정보 반환\r\njest.mock('@react-native-async-storage/async-storage', () => ({\r\n  getItem: jest.fn((key) => {\r\n    if (key === 'user') {\r\n      return Promise.resolve(JSON.stringify({ \r\n        id: 1, \r\n        username: 'testuser', \r\n        nickname: '테스트유저'\r\n      }));\r\n    }\r\n    if (key === 'auth_token') {\r\n      return Promise.resolve('test-token');\r\n    }\r\n    return Promise.resolve(null);\r\n  }),\r\n  setItem: jest.fn(() => Promise.resolve()),\r\n  removeItem: jest.fn(() => Promise.resolve()),\r\n}));\r\n\r\n// API 서비스 모킹\r\njest.mock('../../src/services/api/authService', () => ({\r\n  login: jest.fn(),\r\n  register: jest.fn(),\r\n  logout: jest.fn(),\r\n}));\r\n\r\njest.mock('../../src/services/api/emotionService', () => ({\r\n  getAllEmotions: jest.fn(() => Promise.resolve({ \r\n    data: [\r\n      { emotion_id: 1, name: '행복', icon: 'emoticon-happy-outline', color: '#FFD700' },\r\n      { emotion_id: 2, name: '감사', icon: 'hand-heart', color: '#FF69B4' }\r\n    ] \r\n  })),\r\n  getDailyEmotionCheck: jest.fn(() => Promise.resolve({ data: [] })),\r\n  recordEmotions: jest.fn(() => Promise.resolve()),\r\n}));\r\n\r\n// react-native-paper 테마 모킹 - 간결하지만 필요한 모든 구성요소 포함\r\njest.mock('react-native-paper', () => ({\r\n  useTheme: () => ({\r\n    colors: {\r\n      primary: '#6200ee',\r\n      surface: '#ffffff'\r\n    }\r\n  }),\r\n  Button: 'Button',\r\n  Card: {\r\n    Content: 'Card.Content',\r\n    Actions: 'Card.Actions',\r\n    Title: 'Card.Title',\r\n  },\r\n  TextInput: {\r\n    Icon: 'TextInput.Icon'\r\n  },\r\n  Appbar: {\r\n    Header: 'Appbar.Header',\r\n    Content: 'Appbar.Content',\r\n    Action: 'Appbar.Action'\r\n  },\r\n  Avatar: {\r\n    Icon: 'Avatar.Icon'\r\n  },\r\n  Title: 'Title',\r\n  Paragraph: 'Paragraph',\r\n  ActivityIndicator: 'ActivityIndicator',\r\n  IconButton: 'IconButton',\r\n  Text: 'PaperText',\r\n  Surface: 'Surface'\r\n}));\r\n\r\n// react-native-vector-icons 모킹\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'MaterialCommunityIcons');\r\n\r\n// 화면 크기 모킹 함수\r\nconst mockScreenSize = (width: number, height: number) => {\r\n  const original = Dimensions.get;\r\n  jest.spyOn(Dimensions, 'get').mockImplementation((dimension) => {\r\n    if (dimension === 'window' || dimension === 'screen') {\r\n      return { width, height, scale: 1, fontScale: 1 };\r\n    }\r\n    return original(dimension);\r\n  });\r\n};\r\n\r\ndescribe('Responsive Rendering Tests', () => {\r\n  afterEach(() => {\r\n    jest.restoreAllMocks();\r\n  });\r\n  \r\n  it('renders correctly on small screen', async () => {\r\n    // 작은 화면 사이즈 모킹 (핸드폰)\r\n    mockScreenSize(320, 568);\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 스냅샷 비교\r\n    expect(toJSON()).toMatchSnapshot();\r\n  });\r\n  \r\n  it('renders correctly on medium screen', async () => {\r\n    // 중간 화면 사이즈 모킹 (대형 핸드폰)\r\n    mockScreenSize(375, 812);\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 스냅샷 비교\r\n    expect(toJSON()).toMatchSnapshot();\r\n  });\r\n  \r\n  it('renders correctly on large screen', async () => {\r\n    // 큰 화면 사이즈 모킹 (태블릿)\r\n    mockScreenSize(768, 1024);\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 스냅샷 비교\r\n    expect(toJSON()).toMatchSnapshot();\r\n  });\r\n  \r\n  it('adjusts layout based on orientation', async () => {\r\n    // 가로 모드 모킹\r\n    mockScreenSize(812, 375);\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 스냅샷 비교\r\n    expect(toJSON()).toMatchSnapshot();\r\n  });\r\n});"],"mappings":"AASAA,WAAA,GAAKC,IAAI,CAAC,2CAA2C,EAAE;EAAA,OAAO;IAC5DC,OAAO,EAAEC,IAAI,CAACC,EAAE,CAAC,UAACC,GAAG,EAAK;MACxB,IAAIA,GAAG,KAAK,MAAM,EAAE;QAClB,OAAOC,OAAO,CAACC,OAAO,CAACC,IAAI,CAACC,SAAS,CAAC;UACpCC,EAAE,EAAE,CAAC;UACLC,QAAQ,EAAE,UAAU;UACpBC,QAAQ,EAAE;QACZ,CAAC,CAAC,CAAC;MACL;MACA,IAAIP,GAAG,KAAK,YAAY,EAAE;QACxB,OAAOC,OAAO,CAACC,OAAO,CAAC,YAAY,CAAC;MACtC;MACA,OAAOD,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;IAC9B,CAAC,CAAC;IACFM,OAAO,EAAEV,IAAI,CAACC,EAAE,CAAC;MAAA,OAAME,OAAO,CAACC,OAAO,CAAC,CAAC;IAAA,EAAC;IACzCO,UAAU,EAAEX,IAAI,CAACC,EAAE,CAAC;MAAA,OAAME,OAAO,CAACC,OAAO,CAAC,CAAC;IAAA;EAC7C,CAAC;AAAA,CAAC,CAAC;AAGHP,WAAA,GAAKC,IAAI,uCAAuC;EAAA,OAAO;IACrDc,KAAK,EAAEZ,IAAI,CAACC,EAAE,CAAC,CAAC;IAChBY,QAAQ,EAAEb,IAAI,CAACC,EAAE,CAAC,CAAC;IACnBa,MAAM,EAAEd,IAAI,CAACC,EAAE,CAAC;EAClB,CAAC;AAAA,CAAC,CAAC;AAEHJ,WAAA,GAAKC,IAAI,0CAA0C;EAAA,OAAO;IACxDiB,cAAc,EAAEf,IAAI,CAACC,EAAE,CAAC;MAAA,OAAME,OAAO,CAACC,OAAO,CAAC;QAC5CY,IAAI,EAAE,CACJ;UAAEC,UAAU,EAAE,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEC,IAAI,EAAE,wBAAwB;UAAEC,KAAK,EAAE;QAAU,CAAC,EAC/E;UAAEH,UAAU,EAAE,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEC,IAAI,EAAE,YAAY;UAAEC,KAAK,EAAE;QAAU,CAAC;MAEvE,CAAC,CAAC;IAAA,EAAC;IACHC,oBAAoB,EAAErB,IAAI,CAACC,EAAE,CAAC;MAAA,OAAME,OAAO,CAACC,OAAO,CAAC;QAAEY,IAAI,EAAE;MAAG,CAAC,CAAC;IAAA,EAAC;IAClEM,cAAc,EAAEtB,IAAI,CAACC,EAAE,CAAC;MAAA,OAAME,OAAO,CAACC,OAAO,CAAC,CAAC;IAAA;EACjD,CAAC;AAAA,CAAC,CAAC;AAGHP,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE;EAAA,OAAO;IACrCyB,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAS;QACfC,MAAM,EAAE;UACNC,OAAO,EAAE,SAAS;UAClBC,OAAO,EAAE;QACX;MACF,CAAC;IAAA,CAAC;IACFC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE;MACJC,OAAO,EAAE,cAAc;MACvBC,OAAO,EAAE,cAAc;MACvBC,KAAK,EAAE;IACT,CAAC;IACDC,SAAS,EAAE;MACTC,IAAI,EAAE;IACR,CAAC;IACDC,MAAM,EAAE;MACNC,MAAM,EAAE,eAAe;MACvBN,OAAO,EAAE,gBAAgB;MACzBO,MAAM,EAAE;IACV,CAAC;IACDC,MAAM,EAAE;MACNJ,IAAI,EAAE;IACR,CAAC;IACDF,KAAK,EAAE,OAAO;IACdO,SAAS,EAAE,WAAW;IACtBC,iBAAiB,EAAE,mBAAmB;IACtCC,UAAU,EAAE,YAAY;IACxBC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE;EACX,CAAC;AAAA,CAAC,CAAC;AAGH7C,WAAA,GAAKC,IAAI,CAAC,kDAAkD,EAAE;EAAA,OAAM,wBAAwB;AAAA,EAAC;AAAC,IAAA6C,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AA9E9F,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,aAAA,GAAAJ,OAAA;AACA,IAAAK,WAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,YAAA,GAAAN,OAAA;AACA,IAAAO,eAAA,GAAAP,OAAA;AAAoE,IAAAQ,WAAA,GAAAR,OAAA;AAAA,SAAA/C,YAAA;EAAA,IAAAwD,QAAA,GAAAT,OAAA;IAAA5C,IAAA,GAAAqD,QAAA,CAAArD,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AA4EpE,IAAMsD,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAa,EAAEC,MAAc,EAAK;EACxD,IAAMC,QAAQ,GAAGC,wBAAU,CAACC,GAAG;EAC/B3D,IAAI,CAAC4D,KAAK,CAACF,wBAAU,EAAE,KAAK,CAAC,CAACG,kBAAkB,CAAC,UAACC,SAAS,EAAK;IAC9D,IAAIA,SAAS,KAAK,QAAQ,IAAIA,SAAS,KAAK,QAAQ,EAAE;MACpD,OAAO;QAAEP,KAAK,EAALA,KAAK;QAAEC,MAAM,EAANA,MAAM;QAAEO,KAAK,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAE,CAAC;IAClD;IACA,OAAOP,QAAQ,CAACK,SAAS,CAAC;EAC5B,CAAC,CAAC;AACJ,CAAC;AAEDG,QAAQ,CAAC,4BAA4B,EAAE,YAAM;EAC3CC,SAAS,CAAC,YAAM;IACdlE,IAAI,CAACmE,eAAe,CAAC,CAAC;EACxB,CAAC,CAAC;EAEFC,EAAE,CAAC,mCAAmC,MAAAvB,kBAAA,CAAAwB,OAAA,EAAE,aAAY;IAElDf,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC;IAExB,IAAAgB,OAAA,GAAmB,IAAAC,mBAAM,EACvB,IAAAnB,WAAA,CAAAoB,GAAA,EAACtB,YAAA,CAAAuB,YAAY;QAAAC,QAAA,EACX,IAAAtB,WAAA,CAAAoB,GAAA,EAACrB,eAAA,CAAAwB,eAAe;UAAAD,QAAA,EACd,IAAAtB,WAAA,CAAAoB,GAAA,EAACvB,WAAA,CAAAoB,OAAU,IAAE;QAAC,CACC;MAAC,CACN,CAChB,CAAC;MANOO,MAAM,GAAAN,OAAA,CAANM,MAAM;IASdC,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC,CAACE,eAAe,CAAC,CAAC;EACpC,CAAC,EAAC;EAEFV,EAAE,CAAC,oCAAoC,MAAAvB,kBAAA,CAAAwB,OAAA,EAAE,aAAY;IAEnDf,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC;IAExB,IAAAyB,QAAA,GAAmB,IAAAR,mBAAM,EACvB,IAAAnB,WAAA,CAAAoB,GAAA,EAACtB,YAAA,CAAAuB,YAAY;QAAAC,QAAA,EACX,IAAAtB,WAAA,CAAAoB,GAAA,EAACrB,eAAA,CAAAwB,eAAe;UAAAD,QAAA,EACd,IAAAtB,WAAA,CAAAoB,GAAA,EAACvB,WAAA,CAAAoB,OAAU,IAAE;QAAC,CACC;MAAC,CACN,CAChB,CAAC;MANOO,MAAM,GAAAG,QAAA,CAANH,MAAM;IASdC,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC,CAACE,eAAe,CAAC,CAAC;EACpC,CAAC,EAAC;EAEFV,EAAE,CAAC,mCAAmC,MAAAvB,kBAAA,CAAAwB,OAAA,EAAE,aAAY;IAElDf,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC;IAEzB,IAAA0B,QAAA,GAAmB,IAAAT,mBAAM,EACvB,IAAAnB,WAAA,CAAAoB,GAAA,EAACtB,YAAA,CAAAuB,YAAY;QAAAC,QAAA,EACX,IAAAtB,WAAA,CAAAoB,GAAA,EAACrB,eAAA,CAAAwB,eAAe;UAAAD,QAAA,EACd,IAAAtB,WAAA,CAAAoB,GAAA,EAACvB,WAAA,CAAAoB,OAAU,IAAE;QAAC,CACC;MAAC,CACN,CAChB,CAAC;MANOO,MAAM,GAAAI,QAAA,CAANJ,MAAM;IASdC,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC,CAACE,eAAe,CAAC,CAAC;EACpC,CAAC,EAAC;EAEFV,EAAE,CAAC,qCAAqC,MAAAvB,kBAAA,CAAAwB,OAAA,EAAE,aAAY;IAEpDf,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC;IAExB,IAAA2B,QAAA,GAAmB,IAAAV,mBAAM,EACvB,IAAAnB,WAAA,CAAAoB,GAAA,EAACtB,YAAA,CAAAuB,YAAY;QAAAC,QAAA,EACX,IAAAtB,WAAA,CAAAoB,GAAA,EAACrB,eAAA,CAAAwB,eAAe;UAAAD,QAAA,EACd,IAAAtB,WAAA,CAAAoB,GAAA,EAACvB,WAAA,CAAAoB,OAAU,IAAE;QAAC,CACC;MAAC,CACN,CAChB,CAAC;MANOO,MAAM,GAAAK,QAAA,CAANL,MAAM;IASdC,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC,CAACE,eAAe,CAAC,CAAC;EACpC,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}