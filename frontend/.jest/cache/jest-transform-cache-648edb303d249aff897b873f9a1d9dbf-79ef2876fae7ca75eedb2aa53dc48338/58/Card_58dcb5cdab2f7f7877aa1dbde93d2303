aef4baf0e84ed7250de38bdc42d788ab
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
var Card = function Card(_ref) {
  var title = _ref.title,
    children = _ref.children,
    style = _ref.style,
    onPress = _ref.onPress,
    footer = _ref.footer,
    _ref$elevated = _ref.elevated,
    elevated = _ref$elevated === void 0 ? true : _ref$elevated,
    _ref$borderRadius = _ref.borderRadius,
    borderRadius = _ref$borderRadius === void 0 ? 8 : _ref$borderRadius,
    _ref$padding = _ref.padding,
    padding = _ref$padding === void 0 ? 16 : _ref$padding;
  var CardContainer = onPress ? _reactNative.TouchableOpacity : _reactNative.View;
  return (0, _jsxRuntime.jsxs)(CardContainer, {
    style: [styles.container, elevated && styles.elevated, {
      borderRadius: borderRadius,
      padding: padding
    }, style],
    onPress: onPress,
    activeOpacity: onPress ? 0.7 : 1,
    children: [title && (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.title,
      children: title
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.content,
      children: children
    }), footer && (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.footer,
      children: footer
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: '#FFFFFF',
    marginBottom: 12,
    overflow: 'hidden'
  },
  elevated: {
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2
  },
  title: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 12,
    color: '#333333'
  },
  content: {
    width: '100%'
  },
  footer: {
    marginTop: 12,
    paddingTop: 12,
    borderTopWidth: 1,
    borderTopColor: '#EEEEEE'
  }
});
var _default = exports.default = Card;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9qc3hSdW50aW1lIiwiQ2FyZCIsIl9yZWYiLCJ0aXRsZSIsImNoaWxkcmVuIiwic3R5bGUiLCJvblByZXNzIiwiZm9vdGVyIiwiX3JlZiRlbGV2YXRlZCIsImVsZXZhdGVkIiwiX3JlZiRib3JkZXJSYWRpdXMiLCJib3JkZXJSYWRpdXMiLCJfcmVmJHBhZGRpbmciLCJwYWRkaW5nIiwiQ2FyZENvbnRhaW5lciIsIlRvdWNoYWJsZU9wYWNpdHkiLCJWaWV3IiwianN4cyIsInN0eWxlcyIsImNvbnRhaW5lciIsImFjdGl2ZU9wYWNpdHkiLCJqc3giLCJUZXh0IiwiY29udGVudCIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJtYXJnaW5Cb3R0b20iLCJvdmVyZmxvdyIsInNoYWRvd0NvbG9yIiwic2hhZG93T2Zmc2V0Iiwid2lkdGgiLCJoZWlnaHQiLCJzaGFkb3dPcGFjaXR5Iiwic2hhZG93UmFkaXVzIiwiZWxldmF0aW9uIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJtYXJnaW5Ub3AiLCJwYWRkaW5nVG9wIiwiYm9yZGVyVG9wV2lkdGgiLCJib3JkZXJUb3BDb2xvciIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJDYXJkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy9DYXJkLnRzeFxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBTdHlsZVNoZWV0LCBUb3VjaGFibGVPcGFjaXR5LCBWaWV3U3R5bGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5cclxuaW50ZXJmYWNlIENhcmRQcm9wcyB7XHJcbiAgdGl0bGU/OiBzdHJpbmc7XHJcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcclxuICBzdHlsZT86IFZpZXdTdHlsZTtcclxuICBvblByZXNzPzogKCkgPT4gdm9pZDtcclxuICBmb290ZXI/OiBSZWFjdC5SZWFjdE5vZGU7XHJcbiAgZWxldmF0ZWQ/OiBib29sZWFuO1xyXG4gIGJvcmRlclJhZGl1cz86IG51bWJlcjtcclxuICBwYWRkaW5nPzogbnVtYmVyO1xyXG59XHJcblxyXG5jb25zdCBDYXJkOiBSZWFjdC5GQzxDYXJkUHJvcHM+ID0gKHtcclxuICB0aXRsZSxcclxuICBjaGlsZHJlbixcclxuICBzdHlsZSxcclxuICBvblByZXNzLFxyXG4gIGZvb3RlcixcclxuICBlbGV2YXRlZCA9IHRydWUsXHJcbiAgYm9yZGVyUmFkaXVzID0gOCxcclxuICBwYWRkaW5nID0gMTYsXHJcbn0pID0+IHtcclxuICBjb25zdCBDYXJkQ29udGFpbmVyID0gb25QcmVzcyA/IFRvdWNoYWJsZU9wYWNpdHkgOiBWaWV3O1xyXG4gIFxyXG4gIHJldHVybiAoXHJcbiAgICA8Q2FyZENvbnRhaW5lclxyXG4gICAgICBzdHlsZT17W1xyXG4gICAgICAgIHN0eWxlcy5jb250YWluZXIsXHJcbiAgICAgICAgZWxldmF0ZWQgJiYgc3R5bGVzLmVsZXZhdGVkLFxyXG4gICAgICAgIHsgYm9yZGVyUmFkaXVzLCBwYWRkaW5nIH0sXHJcbiAgICAgICAgc3R5bGUsXHJcbiAgICAgIF19XHJcbiAgICAgIG9uUHJlc3M9e29uUHJlc3N9XHJcbiAgICAgIGFjdGl2ZU9wYWNpdHk9e29uUHJlc3MgPyAwLjcgOiAxfVxyXG4gICAgPlxyXG4gICAgICB7dGl0bGUgJiYgPFRleHQgc3R5bGU9e3N0eWxlcy50aXRsZX0+e3RpdGxlfTwvVGV4dD59XHJcbiAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGVudH0+e2NoaWxkcmVufTwvVmlldz5cclxuICAgICAge2Zvb3RlciAmJiA8VmlldyBzdHlsZT17c3R5bGVzLmZvb3Rlcn0+e2Zvb3Rlcn08L1ZpZXc+fVxyXG4gICAgPC9DYXJkQ29udGFpbmVyPlxyXG4gICk7XHJcbn07XHJcblxyXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgY29udGFpbmVyOiB7XHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRkZGRkZGJyxcclxuICAgIG1hcmdpbkJvdHRvbTogMTIsXHJcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXHJcbiAgfSxcclxuICBlbGV2YXRlZDoge1xyXG4gICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAyIH0sXHJcbiAgICBzaGFkb3dPcGFjaXR5OiAwLjEsXHJcbiAgICBzaGFkb3dSYWRpdXM6IDQsXHJcbiAgICBlbGV2YXRpb246IDIsXHJcbiAgfSxcclxuICB0aXRsZToge1xyXG4gICAgZm9udFNpemU6IDE2LFxyXG4gICAgZm9udFdlaWdodDogJzYwMCcsXHJcbiAgICBtYXJnaW5Cb3R0b206IDEyLFxyXG4gICAgY29sb3I6ICcjMzMzMzMzJyxcclxuICB9LFxyXG4gIGNvbnRlbnQ6IHtcclxuICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgfSxcclxuICBmb290ZXI6IHtcclxuICAgIG1hcmdpblRvcDogMTIsXHJcbiAgICBwYWRkaW5nVG9wOiAxMixcclxuICAgIGJvcmRlclRvcFdpZHRoOiAxLFxyXG4gICAgYm9yZGVyVG9wQ29sb3I6ICcjRUVFRUVFJyxcclxuICB9LFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmQ7Il0sIm1hcHBpbmdzIjoiOzs7OztBQUNBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUFtRixJQUFBRSxXQUFBLEdBQUFGLE9BQUE7QUFhbkYsSUFBTUcsSUFBeUIsR0FBRyxTQUE1QkEsSUFBeUJBLENBQUFDLElBQUEsRUFTekI7RUFBQSxJQVJKQyxLQUFLLEdBQUFELElBQUEsQ0FBTEMsS0FBSztJQUNMQyxRQUFRLEdBQUFGLElBQUEsQ0FBUkUsUUFBUTtJQUNS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