cbc1ed500658ca9a70402efd07d7a93b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _useTheme2 = require("../hooks/useTheme");
var _LoadingIndicator = _interopRequireDefault(require("../components/LoadingIndicator"));
var _jsxRuntime = require("react/jsx-runtime");
var AuthLayout = function AuthLayout(_ref) {
  var children = _ref.children,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? false : _ref$loading,
    title = _ref.title,
    footer = _ref.footer,
    _ref$imageBackground = _ref.imageBackground,
    imageBackground = _ref$imageBackground === void 0 ? false : _ref$imageBackground,
    _ref$logoVisible = _ref.logoVisible,
    logoVisible = _ref$logoVisible === void 0 ? true : _ref$logoVisible;
  var _useTheme = (0, _useTheme2.useTheme)(),
    theme = _useTheme.theme;
  var dismissKeyboard = function dismissKeyboard() {
    if (_reactNative.Keyboard && typeof _reactNative.Keyboard.dismiss === 'function') {
      _reactNative.Keyboard.dismiss();
    }
  };
  var renderContent = function renderContent() {
    return (0, _jsxRuntime.jsx)(_reactNative.KeyboardAvoidingView, {
      behavior: _reactNative.Platform.OS === 'ios' ? 'padding' : 'height',
      style: styles.keyboardView,
      children: (0, _jsxRuntime.jsx)(_reactNative.TouchableWithoutFeedback, {
        onPress: dismissKeyboard,
        children: (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {
          contentContainerStyle: styles.scrollView,
          keyboardShouldPersistTaps: "handled",
          children: [logoVisible && (0, _jsxRuntime.jsx)(_reactNative.View, {
            style: styles.logoContainer,
            children: (0, _jsxRuntime.jsx)(_reactNative.Image, {
              source: require("../assets/images/logo.png"),
              style: styles.logo,
              resizeMode: "contain"
            })
          }), title && (0, _jsxRuntime.jsx)(_reactNative.View, {
            style: styles.titleContainer,
            children: title
          }), (0, _jsxRuntime.jsx)(_reactNative.View, {
            style: styles.contentContainer,
            children: loading ? (0, _jsxRuntime.jsx)(_LoadingIndicator.default, {}) : children
          }), footer && (0, _jsxRuntime.jsx)(_reactNative.View, {
            style: styles.footerContainer,
            children: footer
          })]
        })
      })
    });
  };
  if (imageBackground) {
    return (0, _jsxRuntime.jsxs)(_reactNativeSafeAreaContext.SafeAreaView, {
      style: styles.container,
      children: [(0, _jsxRuntime.jsx)(_reactNative.StatusBar, {
        backgroundColor: "transparent",
        translucent: true,
        barStyle: "light-content"
      }), (0, _jsxRuntime.jsx)(_reactNative.ImageBackground, {
        source: require("../assets/images/auth-background.jpg"),
        style: styles.backgroundImage,
        resizeMode: "cover",
        children: (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles.overlay,
          children: renderContent()
        })
      })]
    });
  }
  return (0, _jsxRuntime.jsxs)(_reactNativeSafeAreaContext.SafeAreaView, {
    style: [styles.container, {
      backgroundColor: theme.colors.background
    }],
    children: [(0, _jsxRuntime.jsx)(_reactNative.StatusBar, {
      backgroundColor: theme.colors.background,
      barStyle: theme.dark ? 'light-content' : 'dark-content'
    }), renderContent()]
  });
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  backgroundImage: {
    flex: 1,
    width: '100%',
    height: '100%'
  },
  overlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    paddingTop: _reactNative.Platform.OS === 'android' ? 30 : 0
  },
  keyboardView: {
    flex: 1
  },
  scrollView: {
    flexGrow: 1,
    paddingHorizontal: 20,
    paddingBottom: 20
  },
  logoContainer: {
    alignItems: 'center',
    marginTop: 50,
    marginBottom: 30
  },
  logo: {
    width: 150,
    height: 150
  },
  titleContainer: {
    marginBottom: 30
  },
  contentContainer: {
    flex: 1,
    width: '100%'
  },
  footerContainer: {
    width: '100%',
    marginTop: 20,
    alignItems: 'center'
  }
});
var _default = exports.default = AuthLayout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9yZWFjdE5hdGl2ZVNhZmVBcmVhQ29udGV4dCIsIl91c2VUaGVtZTIiLCJfTG9hZGluZ0luZGljYXRvciIsIl9qc3hSdW50aW1lIiwiQXV0aExheW91dCIsIl9yZWYiLCJjaGlsZHJlbiIsIl9yZWYkbG9hZGluZyIsImxvYWRpbmciLCJ0aXRsZSIsImZvb3RlciIsIl9yZWYkaW1hZ2VCYWNrZ3JvdW5kIiwiaW1hZ2VCYWNrZ3JvdW5kIiwiX3JlZiRsb2dvVmlzaWJsZSIsImxvZ29WaXNpYmxlIiwiX3VzZVRoZW1lIiwidXNlVGhlbWUiLCJ0aGVtZSIsImRpc21pc3NLZXlib2FyZCIsIktleWJvYXJkIiwiZGlzbWlzcyIsInJlbmRlckNvbnRlbnQiLCJqc3giLCJLZXlib2FyZEF2b2lkaW5nVmlldyIsImJlaGF2aW9yIiwiUGxhdGZvcm0iLCJPUyIsInN0eWxlIiwic3R5bGVzIiwia2V5Ym9hcmRWaWV3IiwiVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrIiwib25QcmVzcyIsImpzeHMiLCJTY3JvbGxWaWV3IiwiY29udGVudENvbnRhaW5lclN0eWxlIiwic2Nyb2xsVmlldyIsImtleWJvYXJkU2hvdWxkUGVyc2lzdFRhcHMiLCJWaWV3IiwibG9nb0NvbnRhaW5lciIsIkltYWdlIiwic291cmNlIiwibG9nbyIsInJlc2l6ZU1vZGUiLCJ0aXRsZUNvbnRhaW5lciIsImNvbnRlbnRDb250YWluZXIiLCJkZWZhdWx0IiwiZm9vdGVyQ29udGFpbmVyIiwiU2FmZUFyZWFWaWV3IiwiY29udGFpbmVyIiwiU3RhdHVzQmFyIiwiYmFja2dyb3VuZENvbG9yIiwidHJhbnNsdWNlbnQiLCJiYXJTdHlsZSIsIkltYWdlQmFja2dyb3VuZCIsImJhY2tncm91bmRJbWFnZSIsIm92ZXJsYXkiLCJjb2xvcnMiLCJiYWNrZ3JvdW5kIiwiZGFyayIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJmbGV4Iiwid2lkdGgiLCJoZWlnaHQiLCJwYWRkaW5nVG9wIiwiZmxleEdyb3ciLCJwYWRkaW5nSG9yaXpvbnRhbCIsInBhZGRpbmdCb3R0b20iLCJhbGlnbkl0ZW1zIiwibWFyZ2luVG9wIiwibWFyZ2luQm90dG9tIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQXV0aExheW91dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGF5b3V0cy9BdXRoTGF5b3V0LnRzeFxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge1xyXG4gIFZpZXcsXHJcbiAgU3R5bGVTaGVldCxcclxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG4vLyDthYzsiqTtirgg7ZmY6rK97JeQ7ISc64+EIOuPmeyeke2VmOuKlCDrsKnsi53snLzroZwg7Lu07Y+s64SM7Yq4IGltcG9ydFxyXG5pbXBvcnQgeyBQbGF0Zm9ybSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCB7IFNjcm9sbFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgeyBLZXlib2FyZEF2b2lkaW5nVmlldyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCB7IFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCB7IEtleWJvYXJkIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHsgSW1hZ2VCYWNrZ3JvdW5kIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgeyBTdGF0dXNCYXIgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgeyBTYWZlQXJlYVZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUtc2FmZS1hcmVhLWNvbnRleHQnO1xyXG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJy4uL2hvb2tzL3VzZVRoZW1lJztcclxuaW1wb3J0IExvYWRpbmdJbmRpY2F0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Mb2FkaW5nSW5kaWNhdG9yJztcclxuXHJcbmludGVyZmFjZSBBdXRoTGF5b3V0UHJvcHMge1xyXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XHJcbiAgbG9hZGluZz86IGJvb2xlYW47XHJcbiAgdGl0bGU/OiBSZWFjdC5SZWFjdE5vZGU7XHJcbiAgZm9vdGVyPzogUmVhY3QuUmVhY3ROb2RlO1xyXG4gIGltYWdlQmFja2dyb3VuZD86IGJvb2xlYW47XHJcbiAgbG9nb1Zpc2libGU/OiBib29sZWFuO1xyXG59XHJcblxyXG5jb25zdCBBdXRoTGF5b3V0OiBSZWFjdC5GQzxBdXRoTGF5b3V0UHJvcHM+ID0gKHtcclxuICBjaGlsZHJlbixcclxuICBsb2FkaW5nID0gZmFsc2UsXHJcbiAgdGl0bGUsXHJcbiAgZm9vdGVyLFxyXG4gIGltYWdlQmFja2dyb3VuZCA9IGZhbHNlLFxyXG4gIGxvZ29WaXNpYmxlID0gdHJ1ZSxcclxufSkgPT4ge1xyXG4gIGNvbnN0IHsgdGhlbWUgfSA9IHVzZVRoZW1lKCk7XHJcbiAgXHJcbiAgLy8gS2V5Ym9hcmQuZGlzbWlzc+ulvCDslYjsoITtlZjqsowg7Zi47LacXHJcbiAgY29uc3QgZGlzbWlzc0tleWJvYXJkID0gKCkgPT4ge1xyXG4gICAgaWYgKEtleWJvYXJkICYmIHR5cGVvZiBLZXlib2FyZC5kaXNtaXNzID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgIEtleWJvYXJkLmRpc21pc3MoKTtcclxuICAgIH1cclxuICB9O1xyXG4gIFxyXG4gIGNvbnN0IHJlbmRlckNvbnRlbnQgPSAoKSA9PiAoXHJcbiAgICA8S2V5Ym9hcmRBdm9pZGluZ1ZpZXdcclxuICAgICAgYmVoYXZpb3I9e1BsYXRmb3JtLk9TID09PSAnaW9zJyA/ICdwYWRkaW5nJyA6ICdoZWlnaHQnfVxyXG4gICAgICBzdHlsZT17c3R5bGVzLmtleWJvYXJkVmlld31cclxuICAgID5cclxuICAgICAgPFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayBvblByZXNzPXtkaXNtaXNzS2V5Ym9hcmR9PlxyXG4gICAgICAgIDxTY3JvbGxWaWV3XHJcbiAgICAgICAgICBjb250ZW50Q29udGFpbmVyU3R5bGU9e3N0eWxlcy5zY3JvbGxWaWV3fVxyXG4gICAgICAgICAga2V5Ym9hcmRTaG91bGRQZXJzaXN0VGFwcz1cImhhbmRsZWRcIlxyXG4gICAgICAgID5cclxuICAgICAgICAgIHsvKiDroZzqs6AgKi99XHJcbiAgICAgICAgICB7bG9nb1Zpc2libGUgJiYgKFxyXG4gICAgICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmxvZ29Db250YWluZXJ9PlxyXG4gICAgICAgICAgICAgIDxJbWFnZVxyXG4gICAgICAgICAgICAgICAgc291cmNlPXtyZXF1aXJlKCcuLi9hc3NldHMvaW1hZ2VzL2xvZ28ucG5nJyl9XHJcbiAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLmxvZ299XHJcbiAgICAgICAgICAgICAgICByZXNpemVNb2RlPVwiY29udGFpblwiXHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPC9WaWV3PlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgey8qIOygnOuqqSAqL31cclxuICAgICAgICAgIHt0aXRsZSAmJiA8VmlldyBzdHlsZT17c3R5bGVzLnRpdGxlQ29udGFpbmVyfT57dGl0bGV9PC9WaWV3Pn1cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgey8qIOuplOyduCDsvZjthZDsuKAgKi99XHJcbiAgICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRlbnRDb250YWluZXJ9PlxyXG4gICAgICAgICAgICB7bG9hZGluZyA/IDxMb2FkaW5nSW5kaWNhdG9yIC8+IDogY2hpbGRyZW59XHJcbiAgICAgICAgICA8L1ZpZXc+XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHsvKiDtkbjthLAgKi99XHJcbiAgICAgICAgICB7Zm9vdGVyICYmIDxWaWV3IHN0eWxlPXtzdHlsZXMuZm9vdGVyQ29udGFpbmVyfT57Zm9vdGVyfTwvVmlldz59XHJcbiAgICAgICAgPC9TY3JvbGxWaWV3PlxyXG4gICAgICA8L1RvdWNoYWJsZVdpdGhvdXRGZWVkYmFjaz5cclxuICAgIDwvS2V5Ym9hcmRBdm9pZGluZ1ZpZXc+XHJcbiAgKTtcclxuICBcclxuICAvLyDrsLDqsr0g7J2066+47KeAIOyCrOyaqSDsl6zrtoDsl5Ag65Sw6528IOuLpOuluCDroIjsnbTslYTsm4Mg67CY7ZmYXHJcbiAgaWYgKGltYWdlQmFja2dyb3VuZCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPFNhZmVBcmVhVmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XHJcbiAgICAgICAgPFN0YXR1c0JhclxyXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yPVwidHJhbnNwYXJlbnRcIlxyXG4gICAgICAgICAgdHJhbnNsdWNlbnRcclxuICAgICAgICAgIGJhclN0eWxlPVwibGlnaHQtY29udGVudFwiXHJcbiAgICAgICAgLz5cclxuICAgICAgICA8SW1hZ2VCYWNrZ3JvdW5kXHJcbiAgICAgICAgICBzb3VyY2U9e3JlcXVpcmUoJy4uL2Fzc2V0cy9pbWFnZXMvYXV0aC1iYWNrZ3JvdW5kLmpwZycpfVxyXG4gICAgICAgICAgc3R5bGU9e3N0eWxlcy5iYWNrZ3JvdW5kSW1hZ2V9XHJcbiAgICAgICAgICByZXNpemVNb2RlPVwiY292ZXJcIlxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMub3ZlcmxheX0+XHJcbiAgICAgICAgICAgIHtyZW5kZXJDb250ZW50KCl9XHJcbiAgICAgICAgICA8L1ZpZXc+XHJcbiAgICAgICAgPC9JbWFnZUJhY2tncm91bmQ+XHJcbiAgICAgIDwvU2FmZUFyZWFWaWV3PlxyXG4gICAgKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIChcclxuICAgIDxTYWZlQXJlYVZpZXdcclxuICAgICAgc3R5bGU9e1tzdHlsZXMuY29udGFpbmVyLCB7IGJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JzLmJhY2tncm91bmQgfV19XHJcbiAgICA+XHJcbiAgICAgIDxTdGF0dXNCYXJcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I9e3RoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kfVxyXG4gICAgICAgIGJhclN0eWxlPXt0aGVtZS5kYXJrID8gJ2xpZ2h0LWNvbnRlbnQnIDogJ2RhcmstY29udGVudCd9XHJcbiAgICAgIC8+XHJcbiAgICAgIHtyZW5kZXJDb250ZW50KCl9XHJcbiAgICA8L1NhZmVBcmVhVmlldz5cclxuICApO1xyXG59O1xyXG5cclxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gIGNvbnRhaW5lcjoge1xyXG4gICAgZmxleDogMSxcclxuICB9LFxyXG4gIGJhY2tncm91bmRJbWFnZToge1xyXG4gICAgZmxleDogMSxcclxuICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgICBoZWlnaHQ6ICcxMDAlJyxcclxuICB9LFxyXG4gIG92ZXJsYXk6IHtcclxuICAgIGZsZXg6IDEsXHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNSknLFxyXG4gICAgcGFkZGluZ1RvcDogUGxhdGZvcm0uT1MgPT09ICdhbmRyb2lkJyA/IDMwIDogMCxcclxuICB9LFxyXG4gIGtleWJvYXJkVmlldzoge1xyXG4gICAgZmxleDogMSxcclxuICB9LFxyXG4gIHNjcm9sbFZpZXc6IHtcclxuICAgIGZsZXhHcm93OiAxLFxyXG4gICAgcGFkZGluZ0hvcml6b250YWw6IDIwLFxyXG4gICAgcGFkZGluZ0JvdHRvbTogMjAsXHJcbiAgfSxcclxuICBsb2dvQ29udGFpbmVyOiB7XHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgIG1hcmdpblRvcDogNTAsXHJcbiAgICBtYXJnaW5Cb3R0b206IDMwLFxyXG4gIH0sXHJcbiAgbG9nbzoge1xyXG4gICAgd2lkdGg6IDE1MCxcclxuICAgIGhlaWdodDogMTUwLFxyXG4gIH0sXHJcbiAgdGl0bGVDb250YWluZXI6IHtcclxuICAgIG1hcmdpbkJvdHRvbTogMzAsXHJcbiAgfSxcclxuICBjb250ZW50Q29udGFpbmVyOiB7XHJcbiAgICBmbGV4OiAxLFxyXG4gICAgd2lkdGg6ICcxMDAlJyxcclxuICB9LFxyXG4gIGZvb3RlckNvbnRhaW5lcjoge1xyXG4gICAgd2lkdGg6ICcxMDAlJyxcclxuICAgIG1hcmdpblRvcDogMjAsXHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICB9LFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEF1dGhMYXlvdXQ7Il0sIm1hcHBpbmdzIjoiOzs7OztBQUNBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQWFBLElBQUFFLDJCQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxVQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxpQkFBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQThELElBQUFLLFdBQUEsR0FBQUwsT0FBQTtBQVc5RCxJQUFNTSxVQUFxQyxHQUFHLFNBQXhDQSxVQUFxQ0EsQ0FBQUMsSUFBQSxFQU9yQztFQUFBLElBTkpDLFFBQVEsR0FBQUQsSUFBQSxDQUFSQyxRQUFRO0lBQUFDLFlBQUEsR0FBQUYsSUFBQSxDQUNSRyxPQUFPO0lBQVBBLE9BQU8sR0FBQUQsWUFBQSxjQUFHLEtBQUssR0FBQUEsWUFBQTtJQUNmRSxLQUFLLEdBQUFKLElBQUEsQ0FBTEksS0FBSztJQUNMQyxNQUFNLEdBQUFMLElBQUEsQ0FBTkssTUFBTTtJQUFBQyxvQkFBQSxHQUFBTixJQUFBLENBQ05PLGVBQWU7SUFBZkEsZUFBZSxHQUFBRCxvQkFBQSxjQUFHLEtBQUssR0FBQUEsb0JBQUE7SUFBQUUsZ0JBQUEsR0FBQVIsSUFBQSxDQUN2QlMsV0FBVztJQUFYQSxXQUFXLEdBQUFELGdCQUFBLGNBQUcsSUFBSSxHQUFBQSxnQkFBQTtFQUVsQixJQUFBRSxTQUFB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