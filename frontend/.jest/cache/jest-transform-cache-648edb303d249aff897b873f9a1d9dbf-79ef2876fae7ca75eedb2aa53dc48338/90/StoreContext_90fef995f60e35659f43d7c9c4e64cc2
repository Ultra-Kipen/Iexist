205e523d2af9a73ae7835c88f69c0e68
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useStore = exports.StoreProvider = exports.StoreContext = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reducer = require("./reducer");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var defaultValue = {
  state: _reducer.initialState,
  dispatch: function dispatch() {
    return null;
  }
};
var StoreContext = exports.StoreContext = (0, _react.createContext)(defaultValue);
var StoreProvider = exports.StoreProvider = function StoreProvider(_ref) {
  var children = _ref.children;
  var _useReducer = (0, _react.useReducer)(_reducer.reducer, _reducer.initialState),
    _useReducer2 = (0, _slicedToArray2.default)(_useReducer, 2),
    state = _useReducer2[0],
    dispatch = _useReducer2[1];
  return _react.default.createElement(StoreContext.Provider, {
    value: {
      state: state,
      dispatch: dispatch
    }
  }, children);
};
var useStore = exports.useStore = function useStore() {
  return (0, _react.useContext)(StoreContext);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVkdWNlciIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImUiLCJXZWFrTWFwIiwiciIsInQiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsImRlZmF1bHRWYWx1ZSIsInN0YXRlIiwiaW5pdGlhbFN0YXRlIiwiZGlzcGF0Y2giLCJTdG9yZUNvbnRleHQiLCJleHBvcnRzIiwiY3JlYXRlQ29udGV4dCIsIlN0b3JlUHJvdmlkZXIiLCJfcmVmIiwiY2hpbGRyZW4iLCJfdXNlUmVkdWNlciIsInVzZVJlZHVjZXIiLCJyZWR1Y2VyIiwiX3VzZVJlZHVjZXIyIiwiX3NsaWNlZFRvQXJyYXkyIiwiUmVhY3QiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZVN0b3JlIiwidXNlQ29udGV4dCJdLCJzb3VyY2VzIjpbIlN0b3JlQ29udGV4dC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlUmVkdWNlciwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyByZWR1Y2VyLCBpbml0aWFsU3RhdGUgfSBmcm9tICcuL3JlZHVjZXInO1xyXG5pbXBvcnQgeyBBY3Rpb24sIEFwcFN0YXRlIH0gZnJvbSAnLi90eXBlcyc7XHJcblxyXG4vLyBDb250ZXh0IO2DgOyehSDsoJXsnZhcclxudHlwZSBTdG9yZUNvbnRleHRUeXBlID0ge1xyXG4gIHN0YXRlOiBBcHBTdGF0ZTtcclxuICBkaXNwYXRjaDogUmVhY3QuRGlzcGF0Y2g8QWN0aW9uPjtcclxufTtcclxuXHJcbi8vIOq4sOuzuOqwkiDsg53shLFcclxuY29uc3QgZGVmYXVsdFZhbHVlOiBTdG9yZUNvbnRleHRUeXBlID0ge1xyXG4gIHN0YXRlOiBpbml0aWFsU3RhdGUsXHJcbiAgZGlzcGF0Y2g6ICgpID0+IG51bGwsXHJcbn07XHJcblxyXG4vLyDsu6jthY3siqTtirgg7IOd7ISxXHJcbmV4cG9ydCBjb25zdCBTdG9yZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0PFN0b3JlQ29udGV4dFR5cGU+KGRlZmF1bHRWYWx1ZSk7XHJcblxyXG4vLyBQcm9wcyDtg4DsnoUg7KCV7J2YXHJcbnR5cGUgU3RvcmVQcm92aWRlclByb3BzID0ge1xyXG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XHJcbn07XHJcblxyXG4vLyBQcm92aWRlciDsu7Ttj6zrhIztirhcclxuZXhwb3J0IGNvbnN0IFN0b3JlUHJvdmlkZXI6IFJlYWN0LkZDPFN0b3JlUHJvdmlkZXJQcm9wcz4gPSAoeyBjaGlsZHJlbiB9KSA9PiB7XHJcbiAgY29uc3QgW3N0YXRlLCBkaXNwYXRjaF0gPSB1c2VSZWR1Y2VyKHJlZHVjZXIsIGluaXRpYWxTdGF0ZSk7XHJcbiAgXHJcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXHJcbiAgICBTdG9yZUNvbnRleHQuUHJvdmlkZXIsXHJcbiAgICB7IHZhbHVlOiB7IHN0YXRlLCBkaXNwYXRjaCB9IH0sXHJcbiAgICBjaGlsZHJlblxyXG4gICk7XHJcbn07XHJcblxyXG4vLyDsu6TsiqTthYAg7ZuFXHJcbmV4cG9ydCBjb25zdCB1c2VTdG9yZSA9ICgpID0+IHVzZUNvbnRleHQoU3RvcmVDb250ZXh0KTsiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFFBQUEsR0FBQUQsT0FBQTtBQUFrRCxTQUFBRSx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxtQkFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBRix3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