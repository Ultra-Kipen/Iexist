d3b7639e9c757f8b80eb875c34e09e6b
_getJestObj().mock('react-native', function () {
  return {
    View: 'View',
    Text: 'Text',
    TouchableOpacity: 'TouchableOpacity',
    Image: 'Image',
    ScrollView: 'ScrollView',
    TextInput: 'TextInput',
    StyleSheet: {
      create: jest.fn(function (styles) {
        return styles;
      }),
      flatten: jest.fn(function (style) {
        return style;
      })
    },
    Platform: {
      OS: 'android',
      select: jest.fn(function (obj) {
        return obj.android || obj.default;
      })
    },
    Dimensions: {
      get: jest.fn(function () {
        return {
          width: 375,
          height: 667
        };
      }),
      addEventListener: jest.fn(),
      removeEventListener: jest.fn()
    },
    Alert: {
      alert: jest.fn()
    },
    TurboModuleRegistry: {
      get: jest.fn(function () {
        return null;
      }),
      getEnforcing: jest.fn(function (name) {
        if (name === 'DevMenu') {
          return {
            show: jest.fn(),
            debugRemotely: jest.fn()
          };
        }
        return null;
      })
    },
    DevMenu: {
      show: jest.fn(),
      debugRemotely: jest.fn()
    },
    NativeModules: {
      DevMenu: {
        show: jest.fn(),
        debugRemotely: jest.fn()
      },
      NativeAnimatedHelper: {
        startAnimatingNode: jest.fn(),
        stopAnimation: jest.fn()
      }
    },
    Animated: {
      Value: jest.fn(function () {
        return {
          setValue: jest.fn(),
          interpolate: jest.fn()
        };
      }),
      View: 'Animated.View',
      Text: 'Animated.Text',
      Image: 'Animated.Image',
      timing: jest.fn(function () {
        return {
          start: jest.fn(function (cb) {
            return cb && cb({
              finished: true
            });
          })
        };
      }),
      spring: jest.fn(function () {
        return {
          start: jest.fn(function (cb) {
            return cb && cb({
              finished: true
            });
          })
        };
      })
    }
  };
}, {
  virtual: true
});
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
global.__DEV__ = true;
global.window = global.window || {};
global.window.PR_SHOULD_USE_CONTINUATION = true;
jest.useFakeTimers();
try {
  if (typeof global.ReactTestInstance !== 'undefined') {
    Object.defineProperty(global.ReactTestInstance.prototype, 'textContent', {
      get: function get() {
        return String(this.toString());
      }
    });
  }
} catch (error) {
  console.warn('ReactTestInstance 확장 실패:', error);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,