8daffe606f1c3b2a1c4b8215d571890a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _client = _interopRequireDefault(require("./client"));
var comfortWallService = {
  createPost: function () {
    var _createPost = (0, _asyncToGenerator2.default)(function* (data) {
      return yield _client.default.post('/comfort-wall', data);
    });
    function createPost(_x) {
      return _createPost.apply(this, arguments);
    }
    return createPost;
  }(),
  getPosts: function () {
    var _getPosts = (0, _asyncToGenerator2.default)(function* (params) {
      return yield _client.default.get('/comfort-wall', {
        params: params
      });
    });
    function getPosts(_x2) {
      return _getPosts.apply(this, arguments);
    }
    return getPosts;
  }(),
  getBestPosts: function () {
    var _getBestPosts = (0, _asyncToGenerator2.default)(function* (params) {
      return yield _client.default.get('/comfort-wall/best', {
        params: params
      });
    });
    function getBestPosts(_x3) {
      return _getBestPosts.apply(this, arguments);
    }
    return getBestPosts;
  }(),
  sendMessage: function () {
    var _sendMessage = (0, _asyncToGenerator2.default)(function* (postId, data) {
      return yield _client.default.post(`/comfort-wall/${postId}/message`, data);
    });
    function sendMessage(_x4, _x5) {
      return _sendMessage.apply(this, arguments);
    }
    return sendMessage;
  }(),
  likePost: function () {
    var _likePost = (0, _asyncToGenerator2.default)(function* (postId) {
      return yield _client.default.post(`/comfort-wall/${postId}/like`);
    });
    function likePost(_x6) {
      return _likePost.apply(this, arguments);
    }
    return likePost;
  }()
};
var _default = exports.default = comfortWallService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2xpZW50IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJjb21mb3J0V2FsbFNlcnZpY2UiLCJjcmVhdGVQb3N0IiwiX2NyZWF0ZVBvc3QiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0IiwiZGF0YSIsImFwaUNsaWVudCIsInBvc3QiLCJfeCIsImFwcGx5IiwiYXJndW1lbnRzIiwiZ2V0UG9zdHMiLCJfZ2V0UG9zdHMiLCJwYXJhbXMiLCJnZXQiLCJfeDIiLCJnZXRCZXN0UG9zdHMiLCJfZ2V0QmVzdFBvc3RzIiwiX3gzIiwic2VuZE1lc3NhZ2UiLCJfc2VuZE1lc3NhZ2UiLCJwb3N0SWQiLCJfeDQiLCJfeDUiLCJsaWtlUG9zdCIsIl9saWtlUG9zdCIsIl94NiIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImNvbWZvcnRXYWxsU2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc2VydmljZXMvYXBpL2NvbWZvcnRXYWxsU2VydmljZS50c1xyXG5cclxuaW1wb3J0IGFwaUNsaWVudCBmcm9tICcuL2NsaWVudCc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbWZvcnRXYWxsUG9zdERhdGEge1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgY29udGVudDogc3RyaW5nO1xyXG4gIGlzX2Fub255bW91cz86IGJvb2xlYW47XHJcbiAgdGFnX2lkcz86IG51bWJlcltdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbWZvcnRNZXNzYWdlRGF0YSB7XHJcbiAgbWVzc2FnZTogc3RyaW5nO1xyXG4gIGlzX2Fub255bW91cz86IGJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IGNvbWZvcnRXYWxsU2VydmljZSA9IHtcclxuICBjcmVhdGVQb3N0OiBhc3luYyAoZGF0YTogQ29tZm9ydFdhbGxQb3N0RGF0YSkgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5wb3N0KCcvY29tZm9ydC13YWxsJywgZGF0YSk7XHJcbiAgfSxcclxuICBcclxuICBnZXRQb3N0czogYXN5bmMgKHBhcmFtcz86IHsgXHJcbiAgICBwYWdlPzogbnVtYmVyOyBcclxuICAgIGxpbWl0PzogbnVtYmVyOyBcclxuICAgIHNvcnRfYnk/OiAnbGF0ZXN0JyB8ICdwb3B1bGFyJztcclxuICAgIHRhZz86IHN0cmluZztcclxuICB9KSA9PiB7XHJcbiAgICByZXR1cm4gYXdhaXQgYXBpQ2xpZW50LmdldCgnL2NvbWZvcnQtd2FsbCcsIHsgcGFyYW1zIH0pO1xyXG4gIH0sXHJcbiAgXHJcbiAgZ2V0QmVzdFBvc3RzOiBhc3luYyAocGFyYW1zPzogeyBwZXJpb2Q/OiAnZGFpbHknIHwgJ3dlZWtseScgfCAnbW9udGhseScgfSkgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5nZXQoJy9jb21mb3J0LXdhbGwvYmVzdCcsIHsgcGFyYW1zIH0pO1xyXG4gIH0sXHJcbiAgXHJcbiAgc2VuZE1lc3NhZ2U6IGFzeW5jIChwb3N0SWQ6IG51bWJlciwgZGF0YTogQ29tZm9ydE1lc3NhZ2VEYXRhKSA9PiB7XHJcbiAgICByZXR1cm4gYXdhaXQgYXBpQ2xpZW50LnBvc3QoYC9jb21mb3J0LXdhbGwvJHtwb3N0SWR9L21lc3NhZ2VgLCBkYXRhKTtcclxuICB9LFxyXG4gIFxyXG4gIC8vIOyii+yVhOyalCDquLDriqUg7LaU6rCAXHJcbiAgbGlrZVBvc3Q6IGFzeW5jIChwb3N0SWQ6IG51bWJlcikgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5wb3N0KGAvY29tZm9ydC13YWxsLyR7cG9zdElkfS9saWtlYCk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29tZm9ydFdhbGxTZXJ2aWNlOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsSUFBQUEsT0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBY0EsSUFBTUMsa0JBQWtCLEdBQUc7RUFDekJDLFVBQVU7SUFBQSxJQUFBQyxXQUFBLE9BQUFDLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPQyxJQUF5QixFQUFLO01BQy9DLGFBQWFDLGVBQVMsQ0FBQ0MsSUFBSSxDQUFDLGVBQWUsRUFBRUYsSUFBSSxDQUFDO0lBQ3BELENBQUM7SUFBQSxTQUZESixVQUFVQSxDQUFBTyxFQUFBO01BQUEsT0FBQU4sV0FBQSxDQUFBTyxLQUFBLE9BQUFDLFNBQUE7SUFBQTtJQUFBLE9BQVZULFVBQVU7RUFBQSxHQUVUO0VBRURVLFFBQVE7SUFBQSxJQUFBQyxTQUFBLE9BQUFULGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPUyxNQUtoQixFQUFLO01BQ0osYUFBYVAsZUFBUyxDQUFDUSxHQUFHLENBQUMsZUFBZSxFQUFFO1FBQUVELE1BQU0sRUFBTkE7TUFBTyxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUFBLFNBUERGLFFBQVFBLENBQUFJLEdBQUE7TUFBQSxPQUFBSCxTQUFBLENBQUFILEtBQUEsT0FBQUMsU0FBQTtJQUFBO0lBQUEsT0FBUkMsUUFBUTtFQUFBLEdBT1A7RUFFREssWUFBWTtJQUFBLElBQUFDLGFBQUEsT0FBQWQsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFLFdBQU9TLE1BQW9ELEVBQUs7TUFDNUUsYUFBYVAsZUFBUyxDQUFDUSxHQUFHLENBQUMsb0JBQW9CLEVBQUU7UUFBRUQsTUFBTSxFQUFOQTtNQUFPLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBQUEsU0FGREcsWUFBWUEsQ0FBQUUsR0FBQTtNQUFBLE9BQUFELGFBQUEsQ0FBQVIsS0FBQSxPQUFBQyxTQUFBO0lBQUE7SUFBQSxPQUFaTSxZQUFZO0VBQUEsR0FFWDtFQUVERyxXQUFXO0lBQUEsSUFBQUMsWUFBQSxPQUFBakIsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFLFdBQU9pQixNQUFjLEVBQUVoQixJQUF3QixFQUFLO01BQy9ELGFBQWFDLGVBQVMsQ0FBQ0MsSUFBSSxDQUFDLGlCQUFpQmMsTUFBTSxVQUFVLEVBQUVoQixJQUFJLENBQUM7SUFDdEUsQ0FBQztJQUFBLFNBRkRjLFdBQVdBLENBQUFHLEdBQUEsRUFBQUMsR0FBQTtNQUFBLE9BQUFILFlBQUEsQ0FBQVgsS0FBQSxPQUFBQyxTQUFBO0lBQUE7SUFBQSxPQUFYUyxXQUFXO0VBQUEsR0FFVjtFQUdESyxRQUFRO0lBQUEsSUFBQUMsU0FBQSxPQUFBdEIsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFLFdBQU9pQixNQUFjLEVBQUs7TUFDbEMsYUFBYWYsZUFBUyxDQUFDQyxJQUFJLENBQUMsaUJBQWlCYyxNQUFNLE9BQU8sQ0FBQztJQUM3RCxDQUFDO0lBQUEsU0FGREcsUUFBUUEsQ0FBQUUsR0FBQTtNQUFBLE9BQUFELFNBQUEsQ0FBQWhCLEtBQUEsT0FBQUMsU0FBQTtJQUFBO0lBQUEsT0FBUmMsUUFBUTtFQUFBO0FBR1YsQ0FBQztBQUFDLElBQUFHLFFBQUEsR0FBQUMsT0FBQSxDQUFBeEIsT0FBQSxHQUVhSixrQkFBa0IiLCJpZ25vcmVMaXN0IjpbXX0=