{"version":3,"names":["_react","require","useForm","exports","_ref","initialValues","onSubmit","validate","_useState","useState","_useState2","_slicedToArray2","default","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","isSubmitting","setIsSubmitting","_useState7","_useState8","touched","setTouched","handleTextChange","useCallback","name","e","value","nativeEvent","text","handleChange","handleToggleChange","setAllTouched","allTouched","Object","keys","forEach","key","prevValues","assign","_defineProperty2","prev","newErrors","setFieldValues","newValues","setFieldValue","setFieldTouched","isTouched","arguments","length","undefined","validateForm","validationErrors","handleSubmit","_asyncToGenerator2","error","console","resetForm","setFieldError","getFieldError","isValid","_default"],"sources":["useForm.ts"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { \r\n  NativeSyntheticEvent, \r\n  TextInputChangeEventData \r\n} from 'react-native';\r\n\r\ninterface FormErrors {\r\n  [key: string]: string;\r\n}\r\n\r\nexport type Validator<T> = (values: T) => FormErrors;\r\n\r\ninterface UseFormProps<T> {\r\n  initialValues: T;\r\n  onSubmit: (values: T) => void | Promise<void>;\r\n  validate?: Validator<T>;\r\n}\r\n\r\ntype InputChangeEvent = NativeSyntheticEvent<TextInputChangeEventData>;\r\n\r\nexport const useForm = <T extends Record<string, any>>({\r\n  initialValues,\r\n  onSubmit,\r\n  validate,\r\n}: UseFormProps<T>) => {\r\n  const [values, setValues] = useState<T>(initialValues);\r\n  const [errors, setErrors] = useState<FormErrors>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [touched, setTouched] = useState<Record<string, boolean>>({});\r\n\r\n  // 텍스트 입력 처리\r\n  const handleTextChange = useCallback((\r\n    name: keyof T\r\n  ) => (e: InputChangeEvent) => {\r\n    const value = e.nativeEvent.text;\r\n    handleChange(name, value);\r\n  }, []);\r\n\r\n  // 스위치/체크박스 처리\r\n  const handleToggleChange = useCallback((\r\n    name: keyof T\r\n  ) => (value: boolean) => {\r\n    handleChange(name, value);\r\n  }, []);\r\n\r\n  // 모든 필드 터치 설정\r\n  const setAllTouched = useCallback(() => {\r\n    const allTouched: Record<string, boolean> = {};\r\n    (Object.keys(values) as Array<keyof T>).forEach(key => {\r\n      allTouched[key as string] = true;\r\n    });\r\n    setTouched(allTouched);\r\n  }, [values]);\r\n\r\n  // 필드 변경 처리\r\n  const handleChange = useCallback((\r\n    name: keyof T, \r\n    value: string | boolean | number\r\n  ) => {\r\n    setValues((prevValues) => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n    \r\n    // 필드가 터치되었음을 표시\r\n    setTouched(prev => ({\r\n      ...prev,\r\n      [name as string]: true\r\n    }));\r\n    \r\n    // 필드 값이 변경되면 해당 필드의 에러 초기화\r\n    if (errors[name as string]) {\r\n      setErrors(prev => {\r\n        const newErrors = { ...prev };\r\n        delete newErrors[name as string];\r\n        return newErrors;\r\n      });\r\n    }\r\n  }, [errors]);\r\n\r\n  // 값 직접 설정(객체 통째로 업데이트용)\r\n  const setFieldValues = useCallback((newValues: Partial<T>) => {\r\n    setValues(prev => ({ ...prev, ...newValues }));\r\n  }, []);\r\n\r\n  // 단일 필드 값 설정\r\n  const setFieldValue = useCallback((name: keyof T, value: any) => {\r\n    setValues(prev => ({ \r\n      ...prev, \r\n      [name]: value \r\n    }));\r\n  }, []);\r\n\r\n  // 필드 터치 설정\r\n  const setFieldTouched = useCallback((name: string, isTouched: boolean = true) => {\r\n    setTouched(prev => ({\r\n      ...prev,\r\n      [name]: isTouched\r\n    }));\r\n  }, []);\r\n\r\n  // 폼 유효성 검사\r\n  const validateForm = useCallback(() => {\r\n    if (!validate) return {};\r\n    \r\n    const validationErrors = validate(values);\r\n    setErrors(validationErrors);\r\n    return validationErrors;\r\n  }, [validate, values]);\r\n\r\n  // 폼 제출 처리\r\n  const handleSubmit = useCallback(async () => {\r\n    // 모든 필드를 터치 상태로 변경\r\n    setAllTouched();\r\n    \r\n    // 유효성 검사 실행\r\n    const validationErrors = validateForm();\r\n    \r\n    // 에러가 있으면 제출하지 않음\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      await onSubmit(values);\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [onSubmit, setAllTouched, validateForm, values]);\r\n\r\n  // 폼 초기화\r\n  const resetForm = useCallback(() => {\r\n    setValues(initialValues);\r\n    setErrors({});\r\n    setTouched({});\r\n  }, [initialValues]);\r\n\r\n  // 특정 필드에 에러 설정\r\n  const setFieldError = useCallback((name: string, error: string) => {\r\n    setErrors(prev => ({\r\n      ...prev,\r\n      [name]: error\r\n    }));\r\n  }, []);\r\n\r\n  // 특정 필드의 에러 가져오기\r\n  const getFieldError = useCallback((name: string): string => {\r\n    return errors[name] || '';\r\n  }, [errors]);\r\n\r\n  // 특정 필드가 터치되었는지 확인\r\n  const isTouched = useCallback((name: string): boolean => {\r\n    return !!touched[name];\r\n  }, [touched]);\r\n\r\n  // 모든 필드가 유효한지 확인\r\n  const isValid = useCallback((): boolean => {\r\n    return Object.keys(errors).length === 0;\r\n  }, [errors]);\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    touched,\r\n    isSubmitting,\r\n    handleChange,\r\n    handleTextChange,\r\n    handleToggleChange,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    setFieldValues,\r\n    setFieldTouched,\r\n    setAllTouched,\r\n    resetForm,\r\n    validateForm,\r\n    setFieldError,\r\n    getFieldError,\r\n    isTouched,\r\n    isValid,\r\n  };\r\n};\r\n\r\nexport default useForm;"],"mappings":";;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAoBO,IAAMC,OAAO,GAAAC,OAAA,CAAAD,OAAA,GAAG,SAAVA,OAAOA,CAAAE,IAAA,EAIG;EAAA,IAHrBC,aAAa,GAAAD,IAAA,CAAbC,aAAa;IACbC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IACRC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAER,IAAAC,SAAA,GAA4B,IAAAC,eAAQ,EAAIJ,aAAa,CAAC;IAAAK,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAA/CK,MAAM,GAAAH,UAAA;IAAEI,SAAS,GAAAJ,UAAA;EACxB,IAAAK,UAAA,GAA4B,IAAAN,eAAQ,EAAa,CAAC,CAAC,CAAC;IAAAO,UAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA;IAA7CE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAAwC,IAAAV,eAAQ,EAAC,KAAK,CAAC;IAAAW,UAAA,OAAAT,eAAA,CAAAC,OAAA,EAAAO,UAAA;IAAhDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA8B,IAAAd,eAAQ,EAA0B,CAAC,CAAC,CAAC;IAAAe,UAAA,OAAAb,eAAA,CAAAC,OAAA,EAAAW,UAAA;IAA5DE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAG1B,IAAMG,gBAAgB,GAAG,IAAAC,kBAAW,EAAC,UACnCC,IAAa;IAAA,OACV,UAACC,CAAmB,EAAK;MAC5B,IAAMC,KAAK,GAAGD,CAAC,CAACE,WAAW,CAACC,IAAI;MAChCC,YAAY,CAACL,IAAI,EAAEE,KAAK,CAAC;IAC3B,CAAC;EAAA,GAAE,EAAE,CAAC;EAGN,IAAMI,kBAAkB,GAAG,IAAAP,kBAAW,EAAC,UACrCC,IAAa;IAAA,OACV,UAACE,KAAc,EAAK;MACvBG,YAAY,CAACL,IAAI,EAAEE,KAAK,CAAC;IAC3B,CAAC;EAAA,GAAE,EAAE,CAAC;EAGN,IAAMK,aAAa,GAAG,IAAAR,kBAAW,EAAC,YAAM;IACtC,IAAMS,UAAmC,GAAG,CAAC,CAAC;IAC7CC,MAAM,CAACC,IAAI,CAAC1B,MAAM,CAAC,CAAoB2B,OAAO,CAAC,UAAAC,GAAG,EAAI;MACrDJ,UAAU,CAACI,GAAG,CAAW,GAAG,IAAI;IAClC,CAAC,CAAC;IACFf,UAAU,CAACW,UAAU,CAAC;EACxB,CAAC,EAAE,CAACxB,MAAM,CAAC,CAAC;EAGZ,IAAMqB,YAAY,GAAG,IAAAN,kBAAW,EAAC,UAC/BC,IAAa,EACbE,KAAgC,EAC7B;IACHjB,SAAS,CAAC,UAAC4B,UAAU;MAAA,OAAAJ,MAAA,CAAAK,MAAA,KAChBD,UAAU,MAAAE,gBAAA,CAAAhC,OAAA,MACZiB,IAAI,EAAGE,KAAK;IAAA,CACb,CAAC;IAGHL,UAAU,CAAC,UAAAmB,IAAI;MAAA,OAAAP,MAAA,CAAAK,MAAA,KACVE,IAAI,MAAAD,gBAAA,CAAAhC,OAAA,MACNiB,IAAI,EAAa,IAAI;IAAA,CACtB,CAAC;IAGH,IAAIZ,MAAM,CAACY,IAAI,CAAW,EAAE;MAC1BX,SAAS,CAAC,UAAA2B,IAAI,EAAI;QAChB,IAAMC,SAAS,GAAAR,MAAA,CAAAK,MAAA,KAAQE,IAAI,CAAE;QAC7B,OAAOC,SAAS,CAACjB,IAAI,CAAW;QAChC,OAAOiB,SAAS;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC7B,MAAM,CAAC,CAAC;EAGZ,IAAM8B,cAAc,GAAG,IAAAnB,kBAAW,EAAC,UAACoB,SAAqB,EAAK;IAC5DlC,SAAS,CAAC,UAAA+B,IAAI;MAAA,OAAAP,MAAA,CAAAK,MAAA,KAAUE,IAAI,EAAKG,SAAS;IAAA,CAAG,CAAC;EAChD,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMC,aAAa,GAAG,IAAArB,kBAAW,EAAC,UAACC,IAAa,EAAEE,KAAU,EAAK;IAC/DjB,SAAS,CAAC,UAAA+B,IAAI;MAAA,OAAAP,MAAA,CAAAK,MAAA,KACTE,IAAI,MAAAD,gBAAA,CAAAhC,OAAA,MACNiB,IAAI,EAAGE,KAAK;IAAA,CACb,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMmB,eAAe,GAAG,IAAAtB,kBAAW,EAAC,UAACC,IAAY,EAAgC;IAAA,IAA9BsB,SAAkB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAC1E1B,UAAU,CAAC,UAAAmB,IAAI;MAAA,OAAAP,MAAA,CAAAK,MAAA,KACVE,IAAI,MAAAD,gBAAA,CAAAhC,OAAA,MACNiB,IAAI,EAAGsB,SAAS;IAAA,CACjB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMI,YAAY,GAAG,IAAA3B,kBAAW,EAAC,YAAM;IACrC,IAAI,CAACrB,QAAQ,EAAE,OAAO,CAAC,CAAC;IAExB,IAAMiD,gBAAgB,GAAGjD,QAAQ,CAACM,MAAM,CAAC;IACzCK,SAAS,CAACsC,gBAAgB,CAAC;IAC3B,OAAOA,gBAAgB;EACzB,CAAC,EAAE,CAACjD,QAAQ,EAAEM,MAAM,CAAC,CAAC;EAGtB,IAAM4C,YAAY,GAAG,IAAA7B,kBAAW,MAAA8B,kBAAA,CAAA9C,OAAA,EAAC,aAAY;IAE3CwB,aAAa,CAAC,CAAC;IAGf,IAAMoB,gBAAgB,GAAGD,YAAY,CAAC,CAAC;IAGvC,IAAIjB,MAAM,CAACC,IAAI,CAACiB,gBAAgB,CAAC,CAACH,MAAM,GAAG,CAAC,EAAE;MAC5C;IACF;IAEA/B,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF,MAAMhB,QAAQ,CAACO,MAAM,CAAC;IACxB,CAAC,CAAC,OAAO8C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRrC,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC,GAAE,CAAChB,QAAQ,EAAE8B,aAAa,EAAEmB,YAAY,EAAE1C,MAAM,CAAC,CAAC;EAGnD,IAAMgD,SAAS,GAAG,IAAAjC,kBAAW,EAAC,YAAM;IAClCd,SAAS,CAACT,aAAa,CAAC;IACxBa,SAAS,CAAC,CAAC,CAAC,CAAC;IACbQ,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,CAACrB,aAAa,CAAC,CAAC;EAGnB,IAAMyD,aAAa,GAAG,IAAAlC,kBAAW,EAAC,UAACC,IAAY,EAAE8B,KAAa,EAAK;IACjEzC,SAAS,CAAC,UAAA2B,IAAI;MAAA,OAAAP,MAAA,CAAAK,MAAA,KACTE,IAAI,MAAAD,gBAAA,CAAAhC,OAAA,MACNiB,IAAI,EAAG8B,KAAK;IAAA,CACb,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMI,aAAa,GAAG,IAAAnC,kBAAW,EAAC,UAACC,IAAY,EAAa;IAC1D,OAAOZ,MAAM,CAACY,IAAI,CAAC,IAAI,EAAE;EAC3B,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;EAGZ,IAAMkC,SAAS,GAAG,IAAAvB,kBAAW,EAAC,UAACC,IAAY,EAAc;IACvD,OAAO,CAAC,CAACJ,OAAO,CAACI,IAAI,CAAC;EACxB,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAGb,IAAMuC,OAAO,GAAG,IAAApC,kBAAW,EAAC,YAAe;IACzC,OAAOU,MAAM,CAACC,IAAI,CAACtB,MAAM,CAAC,CAACoC,MAAM,KAAK,CAAC;EACzC,CAAC,EAAE,CAACpC,MAAM,CAAC,CAAC;EAEZ,OAAO;IACLJ,MAAM,EAANA,MAAM;IACNI,MAAM,EAANA,MAAM;IACNQ,OAAO,EAAPA,OAAO;IACPJ,YAAY,EAAZA,YAAY;IACZa,YAAY,EAAZA,YAAY;IACZP,gBAAgB,EAAhBA,gBAAgB;IAChBQ,kBAAkB,EAAlBA,kBAAkB;IAClBsB,YAAY,EAAZA,YAAY;IACZR,aAAa,EAAbA,aAAa;IACbF,cAAc,EAAdA,cAAc;IACdG,eAAe,EAAfA,eAAe;IACfd,aAAa,EAAbA,aAAa;IACbyB,SAAS,EAATA,SAAS;IACTN,YAAY,EAAZA,YAAY;IACZO,aAAa,EAAbA,aAAa;IACbC,aAAa,EAAbA,aAAa;IACbZ,SAAS,EAATA,SAAS;IACTa,OAAO,EAAPA;EACF,CAAC;AACH,CAAC;AAAC,IAAAC,QAAA,GAAA9D,OAAA,CAAAS,OAAA,GAEaV,OAAO","ignoreList":[]}