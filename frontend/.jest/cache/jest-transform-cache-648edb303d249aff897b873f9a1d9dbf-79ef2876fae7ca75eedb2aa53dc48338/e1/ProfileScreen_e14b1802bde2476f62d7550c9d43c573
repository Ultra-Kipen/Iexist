54e2860a9a15961fce861dea9ba3b554
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _native = require("@react-navigation/native");
var _userService = _interopRequireDefault(require("../services/api/userService"));
var _LoadingIndicator = _interopRequireDefault(require("../components/LoadingIndicator"));
var _Card = _interopRequireDefault(require("../components/Card"));
var _Button = _interopRequireDefault(require("../components/Button"));
var _authService = _interopRequireDefault(require("../services/api/authService"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var ProfileScreen = function ProfileScreen() {
  var _profile$nickname, _profile$username;
  var navigation = (0, _native.useNavigation)();
  var _useState = (0, _react.useState)(null),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    profile = _useState2[0],
    setProfile = _useState2[1];
  var _useState3 = (0, _react.useState)(null),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    stats = _useState4[0],
    setStats = _useState4[1];
  var _useState5 = (0, _react.useState)(true),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    loading = _useState6[0],
    setLoading = _useState6[1];
  var _useState7 = (0, _react.useState)(null),
    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
    error = _useState8[0],
    setError = _useState8[1];
  (0, _react.useEffect)(function () {
    fetchProfileData();
  }, []);
  var fetchProfileData = function () {
    var _ref = (0, _asyncToGenerator2.default)(function* () {
      try {
        setLoading(true);
        setError(null);
        var profileResponse = yield _userService.default.getProfile();
        var statsResponse = yield _userService.default.getUserStats();
        if (profileResponse && profileResponse.data) {
          setProfile(profileResponse.data);
        }
        if (statsResponse && statsResponse.data) {
          setStats(statsResponse.data);
        }
      } catch (err) {
        console.error('프로필 데이터 로딩 오류:', err);
        setError('프로필 정보를 불러오는 중 오류가 발생했습니다.');
      } finally {
        setLoading(false);
      }
    });
    return function fetchProfileData() {
      return _ref.apply(this, arguments);
    };
  }();
  var handleEditProfile = function handleEditProfile() {
    navigation.navigate('EditProfile');
  };
  var handleLogout = function () {
    var _ref2 = (0, _asyncToGenerator2.default)(function* () {
      try {
        yield _authService.default.logout();
      } catch (err) {
        _reactNative.Alert.alert('로그아웃 오류', '로그아웃 처리 중 오류가 발생했습니다.');
      }
    });
    return function handleLogout() {
      return _ref2.apply(this, arguments);
    };
  }();
  if (loading) {
    return (0, _jsxRuntime.jsx)(_LoadingIndicator.default, {
      text: "\uD504\uB85C\uD544 \uB85C\uB529 \uC911..."
    });
  }
  if (error) {
    return (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.errorContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.errorText,
        children: error
      }), (0, _jsxRuntime.jsx)(_Button.default, {
        title: "\uB2E4\uC2DC \uC2DC\uB3C4",
        onPress: fetchProfileData,
        type: "primary"
      })]
    });
  }
  return (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.header,
      children: [profile != null && profile.background_image_url ? (0, _jsxRuntime.jsx)(_reactNative.Image, {
        source: {
          uri: profile.background_image_url
        },
        style: styles.backgroundImage
      }) : (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.defaultBackground
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.profileInfo,
        children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles.avatarContainer,
          children: profile != null && profile.profile_image_url ? (0, _jsxRuntime.jsx)(_reactNative.Image, {
            source: {
              uri: profile.profile_image_url
            },
            style: styles.avatar
          }) : (0, _jsxRuntime.jsx)(_reactNative.View, {
            style: styles.defaultAvatar,
            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: styles.avatarInitial,
              children: (profile == null || (_profile$nickname = profile.nickname) == null ? void 0 : _profile$nickname[0]) || (profile == null || (_profile$username = profile.username) == null ? void 0 : _profile$username[0]) || '?'
            })
          })
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.username,
          children: (profile == null ? void 0 : profile.nickname) || (profile == null ? void 0 : profile.username)
        }), (profile == null ? void 0 : profile.favorite_quote) && (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: styles.quote,
          children: ["\"", profile.favorite_quote, "\""]
        }), (0, _jsxRuntime.jsx)(_Button.default, {
          title: "\uD504\uB85C\uD544 \uD3B8\uC9D1",
          onPress: handleEditProfile,
          type: "outline",
          size: "small",
          style: styles.editButton
        })]
      })]
    }), (0, _jsxRuntime.jsx)(_Card.default, {
      title: "\uB098\uC758 \uD65C\uB3D9 \uD1B5\uACC4",
      children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.statsContainer,
        children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.statItem,
          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.statValue,
            children: (stats == null ? void 0 : stats.my_day_post_count) || 0
          }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.statLabel,
            children: "\uAC8C\uC2DC\uBB3C"
          })]
        }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.statItem,
          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.statValue,
            children: (stats == null ? void 0 : stats.my_day_like_received_count) || 0
          }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.statLabel,
            children: "\uBC1B\uC740 \uACF5\uAC10"
          })]
        }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.statItem,
          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.statValue,
            children: (stats == null ? void 0 : stats.challenge_count) || 0
          }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.statLabel,
            children: "\uCC38\uC5EC \uCC4C\uB9B0\uC9C0"
          })]
        })]
      })
    }), (0, _jsxRuntime.jsxs)(_Card.default, {
      children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.menuItem,
        onPress: function onPress() {
          return navigation.navigate('MyPosts');
        },
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.menuText,
          children: "\uB0B4 \uAC8C\uC2DC\uBB3C"
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.menuItem,
        onPress: function onPress() {
          return navigation.navigate('MyGoals');
        },
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.menuText,
          children: "\uAC10\uC815 \uBAA9\uD45C"
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.menuItem,
        onPress: function onPress() {
          return navigation.navigate('EmotionLog');
        },
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.menuText,
          children: "\uAC10\uC815 \uAE30\uB85D"
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.menuItem,
        onPress: function onPress() {
          return navigation.navigate('Settings');
        },
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.menuText,
          children: "\uC124\uC815"
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.menuItem,
        onPress: handleLogout,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: [styles.menuText, styles.logoutText],
          children: "\uB85C\uADF8\uC544\uC6C3"
        })
      })]
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F7F7F7'
  },
  header: {
    marginBottom: 16
  },
  backgroundImage: {
    height: 150,
    width: '100%'
  },
  defaultBackground: {
    height: 150,
    width: '100%',
    backgroundColor: '#E1EFF9'
  },
  profileInfo: {
    alignItems: 'center',
    marginTop: -50,
    paddingBottom: 16
  },
  avatarContainer: {
    borderRadius: 50,
    borderWidth: 3,
    borderColor: '#FFFFFF',
    overflow: 'hidden'
  },
  avatar: {
    width: 100,
    height: 100,
    borderRadius: 50
  },
  defaultAvatar: {
    width: 100,
    height: 100,
    borderRadius: 50,
    backgroundColor: '#4A90E2',
    justifyContent: 'center',
    alignItems: 'center'
  },
  avatarInitial: {
    fontSize: 40,
    color: '#FFFFFF',
    fontWeight: 'bold'
  },
  username: {
    fontSize: 20,
    fontWeight: 'bold',
    marginTop: 12,
    color: '#333333'
  },
  quote: {
    marginTop: 8,
    marginHorizontal: 32,
    textAlign: 'center',
    fontStyle: 'italic',
    color: '#666666',
    fontSize: 14
  },
  editButton: {
    marginTop: 12
  },
  statsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginVertical: 8
  },
  statItem: {
    alignItems: 'center'
  },
  statValue: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#333333'
  },
  statLabel: {
    fontSize: 12,
    color: '#666666',
    marginTop: 4
  },
  menuItem: {
    paddingVertical: 14,
    borderBottomWidth: 1,
    borderBottomColor: '#EEEEEE'
  },
  menuText: {
    fontSize: 16,
    color: '#333333'
  },
  logoutText: {
    color: '#FF6B6B'
  },
  errorContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20
  },
  errorText: {
    color: '#FF6B6B',
    fontSize: 16,
    marginBottom: 16,
    textAlign: 'center'
  }
});
var _default = exports.default = ProfileScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,