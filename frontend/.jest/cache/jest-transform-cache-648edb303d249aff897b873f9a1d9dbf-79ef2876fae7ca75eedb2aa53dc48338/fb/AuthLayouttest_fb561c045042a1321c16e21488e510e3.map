{"version":3,"names":["_getJestObj","mock","RN","jest","requireActual","Object","assign","Platform","OS","select","fn","obj","ios","Keyboard","dismiss","View","Text","ScrollView","TouchableWithoutFeedback","KeyboardAvoidingView","ImageBackground","Image","StatusBar","virtual","SafeAreaView","useTheme","theme","colors","background","dark","_interopRequireDefault","require","_react","_reactNative","_reactNative2","_AuthLayout","_jsxRuntime","_require","describe","it","_render","render","jsx","default","children","getByText","expect","toBeTruthy","_render2","loading","queryByText","toBeNull","_render3","title","footer","_render4","jsxs","_render5","_render6"],"sources":["AuthLayout.test.tsx"],"sourcesContent":["// tests/layouts/AuthLayout.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Text, View } from 'react-native';\r\n\r\n// 경로가 올바른지 확인\r\nimport AuthLayout from '../../src/layouts/AuthLayout';\r\n\r\n// 모든 필요한 종속성 모킹\r\njest.mock('react-native', () => {\r\n  const RN = jest.requireActual('react-native');\r\n  \r\n  return {\r\n    ...RN,\r\n    Platform: {\r\n      OS: 'ios',\r\n      select: jest.fn(obj => obj.ios)\r\n    },\r\n    Keyboard: {\r\n      dismiss: jest.fn()\r\n    },\r\n    // UI 컴포넌트 모킹\r\n    View: 'View',\r\n    Text: 'Text',\r\n    ScrollView: 'ScrollView',\r\n    TouchableWithoutFeedback: 'TouchableWithoutFeedback',\r\n    KeyboardAvoidingView: 'KeyboardAvoidingView',\r\n    ImageBackground: 'ImageBackground',\r\n    Image: 'Image',\r\n    StatusBar: 'StatusBar'\r\n  };\r\n}, { virtual: true });\r\n\r\n// react-native-safe-area-context 모킹\r\njest.mock('react-native-safe-area-context', () => ({\r\n  SafeAreaView: 'SafeAreaView'\r\n}), { virtual: true });\r\n\r\n// useTheme 모킹\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#ffffff',\r\n      },\r\n      dark: false,\r\n    },\r\n  }),\r\n}));\r\n\r\n// LoadingIndicator 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => {\r\n  return 'LoadingIndicator';\r\n}, { virtual: true });\r\n\r\n// 이미지 요청 모킹\r\njest.mock('../../src/assets/images/logo.png', () => 'logo.png', { virtual: true });\r\njest.mock('../../src/assets/images/auth-background.jpg', () => 'background.jpg', { virtual: true });\r\n\r\ndescribe('AuthLayout', () => {\r\n  // 기본 렌더링 테스트\r\n  it('renders children correctly', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  // 로딩 상태 테스트\r\n  it('shows loading indicator when loading is true', () => {\r\n    const { queryByText } = render(\r\n      <AuthLayout loading={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    // LoadingIndicator를 문자열로 모킹했으므로 queryByText로 확인\r\n    expect(queryByText('인증 내용')).toBeNull();\r\n  });\r\n  \r\n  // 제목 및 푸터 테스트\r\n  it('renders title and footer when provided', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout\r\n        title={<Text>인증 제목</Text>}\r\n        footer={<Text>인증 푸터</Text>}\r\n      >\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 제목')).toBeTruthy();\r\n    expect(getByText('인증 푸터')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('handles complex children correctly', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout>\r\n        <View>\r\n          <Text>첫 번째 자식</Text>\r\n          <Text>두 번째 자식</Text>\r\n          <View>\r\n            <Text>중첩된 자식</Text>\r\n          </View>\r\n        </View>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('첫 번째 자식')).toBeTruthy();\r\n    expect(getByText('두 번째 자식')).toBeTruthy();\r\n    expect(getByText('중첩된 자식')).toBeTruthy();\r\n  });\r\n  \r\n  it('renders correctly with only title', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout title={<Text>인증 제목만</Text>}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 제목만')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('renders correctly with only footer', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout footer={<Text>인증 푸터만</Text>}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 푸터만')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}