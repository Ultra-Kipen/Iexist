f9b2be3f4497139d2a821f44ded2a93a
_getJestObj().mock("../../src/screens/EmotionLogScreen", function () {
  return 'MockedEmotionLogScreen';
});
_getJestObj().mock("../../src/services/api/emotionService", function () {
  return {
    getAllEmotions: jest.fn(),
    recordEmotions: jest.fn()
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("react-native");
var _emotionService = _interopRequireDefault(require("../../src/services/api/emotionService"));
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
jest.spyOn(_reactNative.Alert, 'alert').mockImplementation(function () {});
var mockNavigation = {
  goBack: jest.fn()
};
var mockEmotionsResponse = {
  data: {
    status: 'success',
    data: [{
      emotion_id: 1,
      name: '행복',
      icon: 'emoticon-happy-outline',
      color: '#FFD700'
    }, {
      emotion_id: 2,
      name: '감사',
      icon: 'hand-heart',
      color: '#FF69B4'
    }]
  }
};
describe('EmotionService API 테스트', function () {
  beforeEach(function () {
    jest.clearAllMocks();
    _emotionService.default.getAllEmotions.mockResolvedValue(mockEmotionsResponse);
    _emotionService.default.recordEmotions.mockResolvedValue({
      status: 200
    });
  });
  it('getAllEmotions API가 올바르게 호출됨', (0, _asyncToGenerator2.default)(function* () {
    var result = yield _emotionService.default.getAllEmotions();
    expect(_emotionService.default.getAllEmotions).toHaveBeenCalled();
    expect(result).toEqual(mockEmotionsResponse);
  }));
  it('recordEmotions API가 올바른 파라미터와 함께 호출됨', (0, _asyncToGenerator2.default)(function* () {
    var emotionData = {
      emotion_ids: [1, 2],
      note: '오늘은 기분이 좋았어요.'
    };
    yield _emotionService.default.recordEmotions(emotionData);
    expect(_emotionService.default.recordEmotions).toHaveBeenCalledWith(emotionData);
  }));
  it('API 오류가 올바르게 처리됨', (0, _asyncToGenerator2.default)(function* () {
    var errorResponse = {
      response: {
        data: {
          message: '감정 기록 실패'
        }
      }
    };
    _emotionService.default.recordEmotions.mockRejectedValueOnce(errorResponse);
    try {
      var emotionData = {
        emotion_ids: [1]
      };
      yield _emotionService.default.recordEmotions(emotionData);
      expect(true).toBe(false);
    } catch (error) {
      expect(error).toEqual(errorResponse);
    }
  }));
  it('감정 데이터가 올바른 형식으로 반환됨', (0, _asyncToGenerator2.default)(function* () {
    var result = yield _emotionService.default.getAllEmotions();
    expect(result.data).toBeDefined();
    expect(result.data.status).toBe('success');
    expect(Array.isArray(result.data.data)).toBe(true);
    var emotion = result.data.data[0];
    expect(emotion).toHaveProperty('emotion_id');
    expect(emotion).toHaveProperty('name');
    expect(emotion).toHaveProperty('icon');
    expect(emotion).toHaveProperty('color');
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,