aa1d3bbb50309d5e51383ad369e4458c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _client = _interopRequireDefault(require("./client"));
function cov_ouh2ww4sc() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\services\\api\\emotionService.ts";
  var hash = "ccea269ec7f23b1bd8ac1bbfbd0530eb10049b52";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\services\\api\\emotionService.ts",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 81
        }
      },
      "2": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "3": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "4": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 60
        }
      },
      "5": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 19
          }
        },
        loc: {
          start: {
            line: 23,
            column: 52
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 19
          },
          end: {
            line: 27,
            column: 20
          }
        },
        loc: {
          start: {
            line: 27,
            column: 82
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 21
          }
        },
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 25
          }
        },
        loc: {
          start: {
            line: 39,
            column: 36
          },
          end: {
            line: 41,
            column: 3
          }
        },
        line: 39
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ccea269ec7f23b1bd8ac1bbfbd0530eb10049b52"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_ouh2ww4sc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ouh2ww4sc();
var emotionService = (cov_ouh2ww4sc().s[0]++, {
  getAllEmotions: function () {
    var _getAllEmotions = (0, _asyncToGenerator2.default)(function* () {
      cov_ouh2ww4sc().f[0]++;
      cov_ouh2ww4sc().s[1]++;
      return yield _client.default.get('/emotions');
    });
    function getAllEmotions() {
      return _getAllEmotions.apply(this, arguments);
    }
    return getAllEmotions;
  }(),
  recordEmotions: function () {
    var _recordEmotions = (0, _asyncToGenerator2.default)(function* (data) {
      cov_ouh2ww4sc().f[1]++;
      cov_ouh2ww4sc().s[2]++;
      return yield _client.default.post('/emotions', data);
    });
    function recordEmotions(_x) {
      return _recordEmotions.apply(this, arguments);
    }
    return recordEmotions;
  }(),
  getEmotionStats: function () {
    var _getEmotionStats = (0, _asyncToGenerator2.default)(function* (params) {
      cov_ouh2ww4sc().f[2]++;
      cov_ouh2ww4sc().s[3]++;
      return yield _client.default.get('/emotions/stats', {
        params: params
      });
    });
    function getEmotionStats(_x2) {
      return _getEmotionStats.apply(this, arguments);
    }
    return getEmotionStats;
  }(),
  getEmotionTrends: function () {
    var _getEmotionTrends = (0, _asyncToGenerator2.default)(function* (params) {
      cov_ouh2ww4sc().f[3]++;
      cov_ouh2ww4sc().s[4]++;
      return yield _client.default.get('/stats/trends', {
        params: params
      });
    });
    function getEmotionTrends(_x3) {
      return _getEmotionTrends.apply(this, arguments);
    }
    return getEmotionTrends;
  }(),
  getDailyEmotionCheck: function () {
    var _getDailyEmotionCheck = (0, _asyncToGenerator2.default)(function* () {
      cov_ouh2ww4sc().f[4]++;
      cov_ouh2ww4sc().s[5]++;
      return yield _client.default.get('/emotions/daily-check');
    });
    function getDailyEmotionCheck() {
      return _getDailyEmotionCheck.apply(this, arguments);
    }
    return getDailyEmotionCheck;
  }()
});
var _default = exports.default = emotionService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2xpZW50IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJjb3Zfb3VoMnd3NHNjIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiZW1vdGlvblNlcnZpY2UiLCJnZXRBbGxFbW90aW9ucyIsIl9nZXRBbGxFbW90aW9ucyIsIl9hc3luY1RvR2VuZXJhdG9yMiIsImRlZmF1bHQiLCJhcGlDbGllbnQiLCJnZXQiLCJhcHBseSIsImFyZ3VtZW50cyIsInJlY29yZEVtb3Rpb25zIiwiX3JlY29yZEVtb3Rpb25zIiwiZGF0YSIsInBvc3QiLCJfeCIsImdldEVtb3Rpb25TdGF0cyIsIl9nZXRFbW90aW9uU3RhdHMiLCJwYXJhbXMiLCJfeDIiLCJnZXRFbW90aW9uVHJlbmRzIiwiX2dldEVtb3Rpb25UcmVuZHMiLCJfeDMiLCJnZXREYWlseUVtb3Rpb25DaGVjayIsIl9nZXREYWlseUVtb3Rpb25DaGVjayIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImVtb3Rpb25TZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG4vLyBzcmMvc2VydmljZXMvYXBpL2Vtb3Rpb25TZXJ2aWNlLnRzXHJcblxyXG5pbXBvcnQgYXBpQ2xpZW50IGZyb20gJy4vY2xpZW50JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRW1vdGlvbiB7XHJcbiAgZW1vdGlvbl9pZDogbnVtYmVyO1xyXG4gIG5hbWU6IHN0cmluZztcclxuICBpY29uOiBzdHJpbmc7XHJcbiAgY29sb3I6IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBFbW90aW9uQ3JlYXRlRFRPIHtcclxuICBlbW90aW9uX2lkczogbnVtYmVyW107XHJcbiAgbm90ZT86IHN0cmluZztcclxufVxyXG5cclxuY29uc3QgZW1vdGlvblNlcnZpY2UgPSB7XHJcbiAgZ2V0QWxsRW1vdGlvbnM6IGFzeW5jICgpID0+IHtcclxuICAgIHJldHVybiBhd2FpdCBhcGlDbGllbnQuZ2V0PHsgc3RhdHVzOiBzdHJpbmc7IGRhdGE6IEVtb3Rpb25bXSB9PignL2Vtb3Rpb25zJyk7XHJcbiAgfSxcclxuICBcclxuICByZWNvcmRFbW90aW9uczogYXN5bmMgKGRhdGE6IEVtb3Rpb25DcmVhdGVEVE8pID0+IHtcclxuICAgIHJldHVybiBhd2FpdCBhcGlDbGllbnQucG9zdCgnL2Vtb3Rpb25zJywgZGF0YSk7XHJcbiAgfSxcclxuICBcclxuICBnZXRFbW90aW9uU3RhdHM6IGFzeW5jIChwYXJhbXM/OiB7IHN0YXJ0X2RhdGU/OiBzdHJpbmc7IGVuZF9kYXRlPzogc3RyaW5nIH0pID0+IHtcclxuICAgIHJldHVybiBhd2FpdCBhcGlDbGllbnQuZ2V0KCcvZW1vdGlvbnMvc3RhdHMnLCB7IHBhcmFtcyB9KTtcclxuICB9LFxyXG4gIFxyXG4gIGdldEVtb3Rpb25UcmVuZHM6IGFzeW5jIChwYXJhbXM/OiB7IFxyXG4gICAgc3RhcnRfZGF0ZT86IHN0cmluZzsgXHJcbiAgICBlbmRfZGF0ZT86IHN0cmluZzsgXHJcbiAgICB0eXBlPzogJ2RheScgfCAnd2VlaycgfCAnbW9udGgnIHwgJ21vbnRobHknIFxyXG4gIH0pID0+IHtcclxuICAgIHJldHVybiBhd2FpdCBhcGlDbGllbnQuZ2V0KCcvc3RhdHMvdHJlbmRzJywgeyBwYXJhbXMgfSk7XHJcbiAgfSxcclxuICBcclxuICBnZXREYWlseUVtb3Rpb25DaGVjazogYXN5bmMgKCkgPT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5nZXQoJy9lbW90aW9ucy9kYWlseS1jaGVjaycpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGVtb3Rpb25TZXJ2aWNlOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR0EsSUFBQUEsT0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQWlDLFNBQUFDLGNBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7SUFBQUMsZUFBQTtJQUFBbEIsSUFBQTtFQUFBO0VBQUEsSUFBQW1CLFFBQUEsR0FBQWxCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBZ0IsUUFBQSxDQUFBcEIsSUFBQSxLQUFBb0IsUUFBQSxDQUFBcEIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQW1CLFFBQUEsQ0FBQXBCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQWdCLGNBQUEsR0FBQUQsUUFBQSxDQUFBcEIsSUFBQTtFQUFBO0lBQUFELGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFzQixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBdEIsYUFBQTtBQWNqQyxJQUFNdUIsY0FBYyxJQUFBdkIsYUFBQSxHQUFBaUIsQ0FBQSxPQUFHO0VBQ3JCTyxjQUFjO0lBQUEsSUFBQUMsZUFBQSxPQUFBQyxrQkFBQSxDQUFBQyxPQUFBLEVBQUUsYUFBWTtNQUFBM0IsYUFBQSxHQUFBa0IsQ0FBQTtNQUFBbEIsYUFBQSxHQUFBaUIsQ0FBQTtNQUMxQixhQUFhVyxlQUFTLENBQUNDLEdBQUcsQ0FBc0MsV0FBVyxDQUFDO0lBQzlFLENBQUM7SUFBQSxTQUZETCxjQUFjQSxDQUFBO01BQUEsT0FBQUMsZUFBQSxDQUFBSyxLQUFBLE9BQUFDLFNBQUE7SUFBQTtJQUFBLE9BQWRQLGNBQWM7RUFBQSxHQUViO0VBRURRLGNBQWM7SUFBQSxJQUFBQyxlQUFBLE9BQUFQLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPTyxJQUFzQixFQUFLO01BQUFsQyxhQUFBLEdBQUFrQixDQUFBO01BQUFsQixhQUFBLEdBQUFpQixDQUFBO01BQ2hELGFBQWFXLGVBQVMsQ0FBQ08sSUFBSSxDQUFDLFdBQVcsRUFBRUQsSUFBSSxDQUFDO0lBQ2hELENBQUM7SUFBQSxTQUZERixjQUFjQSxDQUFBSSxFQUFBO01BQUEsT0FBQUgsZUFBQSxDQUFBSCxLQUFBLE9BQUFDLFNBQUE7SUFBQTtJQUFBLE9BQWRDLGNBQWM7RUFBQSxHQUViO0VBRURLLGVBQWU7SUFBQSxJQUFBQyxnQkFBQSxPQUFBWixrQkFBQSxDQUFBQyxPQUFBLEVBQUUsV0FBT1ksTUFBbUQsRUFBSztNQUFBdkMsYUFBQSxHQUFBa0IsQ0FBQTtNQUFBbEIsYUFBQSxHQUFBaUIsQ0FBQTtNQUM5RSxhQUFhVyxlQUFTLENBQUNDLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRTtRQUFFVSxNQUFNLEVBQU5BO01BQU8sQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFBQSxTQUZERixlQUFlQSxDQUFBRyxHQUFBO01BQUEsT0FBQUYsZ0JBQUEsQ0FBQVIsS0FBQSxPQUFBQyxTQUFBO0lBQUE7SUFBQSxPQUFmTSxlQUFlO0VBQUEsR0FFZDtFQUVESSxnQkFBZ0I7SUFBQSxJQUFBQyxpQkFBQSxPQUFBaEIsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFLFdBQU9ZLE1BSXhCLEVBQUs7TUFBQXZDLGFBQUEsR0FBQWtCLENBQUE7TUFBQWxCLGFBQUEsR0FBQWlCLENBQUE7TUFDSixhQUFhVyxlQUFTLENBQUNDLEdBQUcsQ0FBQyxlQUFlLEVBQUU7UUFBRVUsTUFBTSxFQUFOQTtNQUFPLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBQUEsU0FOREUsZ0JBQWdCQSxDQUFBRSxHQUFBO01BQUEsT0FBQUQsaUJBQUEsQ0FBQVosS0FBQSxPQUFBQyxTQUFBO0lBQUE7SUFBQSxPQUFoQlUsZ0JBQWdCO0VBQUEsR0FNZjtFQUVERyxvQkFBb0I7SUFBQSxJQUFBQyxxQkFBQSxPQUFBbkIsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFLGFBQVk7TUFBQTNCLGFBQUEsR0FBQWtCLENBQUE7TUFBQWxCLGFBQUEsR0FBQWlCLENBQUE7TUFDaEMsYUFBYVcsZUFBUyxDQUFDQyxHQUFHLENBQUMsdUJBQXVCLENBQUM7SUFDckQsQ0FBQztJQUFBLFNBRkRlLG9CQUFvQkEsQ0FBQTtNQUFBLE9BQUFDLHFCQUFBLENBQUFmLEtBQUEsT0FBQUMsU0FBQTtJQUFBO0lBQUEsT0FBcEJhLG9CQUFvQjtFQUFBO0FBR3RCLENBQUM7QUFBQyxJQUFBRSxRQUFBLEdBQUFDLE9BQUEsQ0FBQXBCLE9BQUEsR0FFYUosY0FBYyIsImlnbm9yZUxpc3QiOltdfQ==