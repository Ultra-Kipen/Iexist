{"version":3,"names":["_getJestObj","mock","getItem","jest","fn","key","Promise","resolve","JSON","stringify","id","username","nickname","setItem","removeItem","login","register","logout","getAllEmotions","data","emotion_id","name","icon","color","getDailyEmotionCheck","recordEmotions","MockText","props","children","Dialog","Title","Content","Actions","Card","Text","Button","Portal","Modal","Surface","ActivityIndicator","Divider","Checkbox","Switch","FAB","Badge","Banner","Searchbar","Snackbar","ProgressBar","Chip","List","Item","Accordion","Section","Menu","Drawer","Appbar","Header","Action","BackAction","Avatar","Icon","Image","TextInput","Affix","useTheme","colors","primary","surface","text","error","background","fonts","regular","fontFamily","fontWeight","medium","roundness","Paragraph","Caption","Headline","Subheading","IconButton","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_reactNative2","_HomeScreen","_AuthContext","_EmotionContext","_jsxRuntime","_require","mockScreenSize","width","height","original","Dimensions","get","spyOn","mockImplementation","dimension","scale","fontScale","describe","afterEach","restoreAllMocks","it","default","_render","render","jsx","AuthProvider","EmotionProvider","toJSON","expect","toMatchSnapshot","_render2","_render3","_render4"],"sources":["ResponsiveRendering.test.tsx"],"sourcesContent":["// __tests__/responsive/ResponsiveRendering.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Dimensions } from 'react-native';\r\nimport HomeScreen from '../../src/screens/HomeScreen';\r\nimport { AuthProvider } from '../../src/contexts/AuthContext';\r\nimport { EmotionProvider } from '../../src/contexts/EmotionContext';\r\n\r\n// AsyncStorage 모킹 - 사용자 정보 반환\r\njest.mock('@react-native-async-storage/async-storage', () => ({\r\n  getItem: jest.fn((key) => {\r\n    if (key === 'user') {\r\n      return Promise.resolve(JSON.stringify({ \r\n        id: 1, \r\n        username: 'testuser', \r\n        nickname: '테스트유저'\r\n      }));\r\n    }\r\n    if (key === 'auth_token') {\r\n      return Promise.resolve('test-token');\r\n    }\r\n    return Promise.resolve(null);\r\n  }),\r\n  setItem: jest.fn(() => Promise.resolve()),\r\n  removeItem: jest.fn(() => Promise.resolve()),\r\n}));\r\n\r\n// API 서비스 모킹\r\njest.mock('../../src/services/api/authService', () => ({\r\n  login: jest.fn(),\r\n  register: jest.fn(),\r\n  logout: jest.fn(),\r\n}));\r\n\r\njest.mock('../../src/services/api/emotionService', () => ({\r\n  getAllEmotions: jest.fn(() => Promise.resolve({ \r\n    data: [\r\n      { emotion_id: 1, name: '행복', icon: 'emoticon-happy-outline', color: '#FFD700' },\r\n      { emotion_id: 2, name: '감사', icon: 'hand-heart', color: '#FF69B4' }\r\n    ] \r\n  })),\r\n  getDailyEmotionCheck: jest.fn(() => Promise.resolve({ data: [] })),\r\n  recordEmotions: jest.fn(() => Promise.resolve()),\r\n}));\r\n\r\n// 더 완전한 react-native-paper 모킹\r\njest.mock('react-native-paper', () => {\r\n  // 실제 React Native Text 대신 문자열을 반환하는 간단한 모킹\r\n  const MockText = (props) => props.children;\r\n  \r\n  // Dialog 컴포넌트 자체와 하위 컴포넌트 모두 모킹\r\n  const Dialog = (props) => props.children;\r\n  Dialog.Title = (props) => props.children;\r\n  Dialog.Content = (props) => props.children;\r\n  Dialog.Actions = (props) => props.children;\r\n  \r\n  // Card 컴포넌트 및 하위 컴포넌트\r\n  const Card = (props) => props.children;\r\n  Card.Content = (props) => props.children;\r\n  Card.Actions = (props) => props.children;\r\n  Card.Title = (props) => props.children;\r\n  \r\n  return {\r\n    // 기본 컴포넌트들\r\n    Text: MockText,\r\n    Button: (props) => props.children,\r\n    Card,\r\n    Dialog,\r\n    Portal: (props) => props.children,\r\n    Modal: (props) => props.children,\r\n    Surface: (props) => props.children,\r\n    \r\n    // 복합 컴포넌트들\r\n    ActivityIndicator: 'ActivityIndicator',\r\n    Divider: 'Divider',\r\n    Checkbox: 'Checkbox',\r\n    Switch: 'Switch',\r\n    FAB: 'FAB',\r\n    Badge: 'Badge',\r\n    Banner: 'Banner',\r\n    Searchbar: 'Searchbar',\r\n    Snackbar: 'Snackbar',\r\n    ProgressBar: 'ProgressBar',\r\n    Chip: 'Chip',\r\n    List: {\r\n      Item: 'List.Item',\r\n      Accordion: 'List.Accordion',\r\n      Section: 'List.Section',\r\n    },\r\n    Menu: {\r\n      Item: 'Menu.Item',\r\n    },\r\n    Drawer: {\r\n      Item: 'Drawer.Item',\r\n      Section: 'Drawer.Section',\r\n    },\r\n    \r\n    // 앱바 관련\r\n    Appbar: {\r\n      Header: 'Appbar.Header',\r\n      Content: 'Appbar.Content',\r\n      Action: 'Appbar.Action',\r\n      BackAction: 'Appbar.BackAction',\r\n    },\r\n    \r\n    // 아바타 관련\r\n    Avatar: {\r\n      Icon: 'Avatar.Icon',\r\n      Image: 'Avatar.Image',\r\n      Text: 'Avatar.Text',\r\n    },\r\n    \r\n    // 텍스트 입력 관련\r\n    TextInput: {\r\n      Icon: 'TextInput.Icon',\r\n      Affix: 'TextInput.Affix',\r\n    },\r\n    \r\n    // 테마 및 스타일링\r\n    useTheme: () => ({\r\n      colors: {\r\n        primary: '#6200ee',\r\n        surface: '#ffffff',\r\n        text: '#000000',\r\n        error: '#B00020',\r\n        background: '#f6f6f6',\r\n      },\r\n      fonts: {\r\n        regular: {\r\n          fontFamily: 'System',\r\n          fontWeight: 'normal',\r\n        },\r\n        medium: {\r\n          fontFamily: 'System',\r\n          fontWeight: 'bold',\r\n        },\r\n      },\r\n      roundness: 4,\r\n    }),\r\n    \r\n    // 기타 자주 사용되는 컴포넌트\r\n    Title: 'Title',\r\n    Paragraph: 'Paragraph',\r\n    Caption: 'Caption',\r\n    Headline: 'Headline',\r\n    Subheading: 'Subheading',\r\n    IconButton: 'IconButton',\r\n  };\r\n});\r\n\r\n// react-native-vector-icons 모킹\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'MaterialCommunityIcons');\r\n\r\n// 화면 크기 모킹 함수\r\nconst mockScreenSize = (width: number, height: number) => {\r\n  const original = Dimensions.get;\r\n  jest.spyOn(Dimensions, 'get').mockImplementation((dimension) => {\r\n    if (dimension === 'window' || dimension === 'screen') {\r\n      return { width, height, scale: 1, fontScale: 1 };\r\n    }\r\n    return original(dimension);\r\n  });\r\n};\r\n\r\ndescribe('Responsive Rendering Tests', () => {\r\n  afterEach(() => {\r\n    jest.restoreAllMocks();\r\n  });\r\n  \r\n  it('renders correctly on small screen', async () => {\r\n    // 작은 화면 사이즈 모킹 (핸드폰)\r\n    mockScreenSize(320, 568);\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 스냅샷 비교\r\n    expect(toJSON()).toMatchSnapshot();\r\n  });\r\n  \r\n  it('renders correctly on medium screen', async () => {\r\n    // 중간 화면 사이즈 모킹 (대형 핸드폰)\r\n    mockScreenSize(375, 812);\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 스냅샷 비교\r\n    expect(toJSON()).toMatchSnapshot();\r\n  });\r\n  \r\n  it('renders correctly on large screen', async () => {\r\n    // 큰 화면 사이즈 모킹 (태블릿)\r\n    mockScreenSize(768, 1024);\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 스냅샷 비교\r\n    expect(toJSON()).toMatchSnapshot();\r\n  });\r\n  \r\n  it('adjusts layout based on orientation', async () => {\r\n    // 가로 모드 모킹\r\n    mockScreenSize(812, 375);\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 스냅샷 비교\r\n    expect(toJSON()).toMatchSnapshot();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}