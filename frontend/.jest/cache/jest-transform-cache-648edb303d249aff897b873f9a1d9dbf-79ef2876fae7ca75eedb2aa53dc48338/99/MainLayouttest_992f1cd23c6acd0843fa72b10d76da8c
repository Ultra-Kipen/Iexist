697e1f334f8f6099c90b2bd8bd979a9a
_getJestObj().mock("../../src/hooks/useTheme", function () {
  return {
    useTheme: function useTheme() {
      return {
        theme: {
          colors: {
            background: '#ffffff'
          },
          dark: false
        }
      };
    }
  };
});
_getJestObj().mock("../../src/components/LoadingIndicator", function () {
  var React = require('react');
  var ReactNative = require('react-native');
  return {
    __esModule: true,
    default: function _default() {
      return React.createElement(ReactNative.View, {
        testID: 'loading-indicator'
      });
    }
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _reactNative2 = require("react-native");
var _MainLayout = _interopRequireDefault(require("../../src/layouts/MainLayout"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('MainLayout', function () {
  it('renders children correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_MainLayout.default, {
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uBA54\uC778 \uCF58\uD150\uCE20"
        })
      })),
      getByText = _render.getByText;
    expect(getByText('메인 콘텐츠')).toBeTruthy();
  });
  it('shows loading indicator when loading is true', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_MainLayout.default, {
        loading: true,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uBA54\uC778 \uCF58\uD150\uCE20"
        })
      })),
      getByTestId = _render2.getByTestId,
      queryByText = _render2.queryByText;
    expect(getByTestId('loading-indicator')).toBeTruthy();
    expect(queryByText('메인 콘텐츠')).toBeNull();
  });
  it('renders header and footer when provided', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_MainLayout.default, {
        header: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD5E4\uB354"
        }),
        footer: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD478\uD130"
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uBA54\uC778 \uCF58\uD150\uCE20"
        })
      })),
      getByText = _render3.getByText;
    expect(getByText('헤더')).toBeTruthy();
    expect(getByText('푸터')).toBeTruthy();
    expect(getByText('메인 콘텐츠')).toBeTruthy();
  });
  it('applies custom background color when provided', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_MainLayout.default, {
        backgroundColor: "#ff0000",
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uBA54\uC778 \uCF58\uD150\uCE20"
        })
      })),
      getByText = _render4.getByText;
    expect(getByText('메인 콘텐츠')).toBeTruthy();
  });
  it('applies custom style when provided', function () {
    var customStyle = {
      marginTop: 20
    };
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_MainLayout.default, {
        style: customStyle,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uBA54\uC778 \uCF58\uD150\uCE20"
        })
      })),
      getByText = _render5.getByText;
    expect(getByText('메인 콘텐츠')).toBeTruthy();
  });
  it('applies custom contentContainerStyle when provided', function () {
    var customContentContainerStyle = {
      padding: 20
    };
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_MainLayout.default, {
        contentContainerStyle: customContentContainerStyle,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uBA54\uC778 \uCF58\uD150\uCE20"
        })
      })),
      getByText = _render6.getByText;
    expect(getByText('메인 콘텐츠')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,