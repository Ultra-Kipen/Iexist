{"version":3,"names":["_getJestObj","mock","SafeAreaProvider","_ref","children","Provider","_ref2","AuthProvider","_ref3","getItem","jest","fn","Promise","resolve","setItem","removeItem","interceptors","request","use","response","post","get","delete","_interopRequireDefault","require","_react","_reactTestRenderer","_App","_jsxRuntime","_require","describe","it","tree","renderer","create","jsx","default","toJSON","expect","toBeDefined"],"sources":["App.test.tsx"],"sourcesContent":["// App.test.tsx\nimport React from 'react';\n// @testing-library/react-native 대신 react-test-renderer 직접 사용\nimport renderer from 'react-test-renderer';\nimport App from '../App';\n\n// 필요한 모든 의존성 모킹\njest.mock('react-native-safe-area-context', () => ({\n  SafeAreaProvider: ({ children }) => children,\n}));\n\njest.mock('react-native-paper', () => ({\n  Provider: ({ children }) => children,\n}));\n\n// AuthContext 모킹\njest.mock('../src/contexts/AuthContext', () => ({\n  AuthProvider: ({ children }) => children,\n}));\n\n// AppNavigator 모킹\njest.mock('../src/navigation/AppNavigator', () => 'AppNavigator');\n\n// AsyncStorage 모킹\njest.mock('@react-native-async-storage/async-storage', () => ({\n  getItem: jest.fn(() => Promise.resolve('test_token')),\n  setItem: jest.fn(() => Promise.resolve()),\n  removeItem: jest.fn(() => Promise.resolve()),\n}));\n\n// apiClient 모킹\njest.mock('../src/services/api/client', () => {\n  return {\n    interceptors: {\n      request: { use: jest.fn() },\n      response: { use: jest.fn() }\n    },\n    post: jest.fn(),\n    get: jest.fn(),\n    delete: jest.fn()\n  };\n});\n\n// 간단한 스냅샷 테스트로 변경\ndescribe('App', () => {\n  it('renders correctly', () => {\n    const tree = renderer.create(<App />).toJSON();\n    expect(tree).toBeDefined();\n    // 또는 스냅샷 테스트\n    // expect(tree).toMatchSnapshot();\n  });\n});"],"mappings":"AAOAA,WAAA,GAAKC,IAAI,CAAC,gCAAgC,EAAE;EAAA,OAAO;IACjDC,gBAAgB,EAAE,SAAlBA,gBAAgBA,CAAAC,IAAA;MAAA,IAAKC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;MAAA,OAAOA,QAAQ;IAAA;EAC9C,CAAC;AAAA,CAAC,CAAC;AAEHJ,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE;EAAA,OAAO;IACrCI,QAAQ,EAAE,SAAVA,QAAQA,CAAAC,KAAA;MAAA,IAAKF,QAAQ,GAAAE,KAAA,CAARF,QAAQ;MAAA,OAAOA,QAAQ;IAAA;EACtC,CAAC;AAAA,CAAC,CAAC;AAGHJ,WAAA,GAAKC,IAAI,gCAAgC;EAAA,OAAO;IAC9CM,YAAY,EAAE,SAAdA,YAAYA,CAAAC,KAAA;MAAA,IAAKJ,QAAQ,GAAAI,KAAA,CAARJ,QAAQ;MAAA,OAAOA,QAAQ;IAAA;EAC1C,CAAC;AAAA,CAAC,CAAC;AAGHJ,WAAA,GAAKC,IAAI,mCAAmC;EAAA,OAAM,cAAc;AAAA,EAAC;AAGjED,WAAA,GAAKC,IAAI,CAAC,2CAA2C,EAAE;EAAA,OAAO;IAC5DQ,OAAO,EAAEC,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC,YAAY,CAAC;IAAA,EAAC;IACrDC,OAAO,EAAEJ,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC,CAAC;IAAA,EAAC;IACzCE,UAAU,EAAEL,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC,CAAC;IAAA;EAC7C,CAAC;AAAA,CAAC,CAAC;AAGHb,WAAA,GAAKC,IAAI,+BAA+B,YAAM;EAC5C,OAAO;IACLe,YAAY,EAAE;MACZC,OAAO,EAAE;QAAEC,GAAG,EAAER,IAAI,CAACC,EAAE,CAAC;MAAE,CAAC;MAC3BQ,QAAQ,EAAE;QAAED,GAAG,EAAER,IAAI,CAACC,EAAE,CAAC;MAAE;IAC7B,CAAC;IACDS,IAAI,EAAEV,IAAI,CAACC,EAAE,CAAC,CAAC;IACfU,GAAG,EAAEX,IAAI,CAACC,EAAE,CAAC,CAAC;IACdW,MAAM,EAAEZ,IAAI,CAACC,EAAE,CAAC;EAClB,CAAC;AACH,CAAC,CAAC;AAAC,IAAAY,sBAAA,GAAAC,OAAA;AAxCH,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,kBAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,IAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAAyB,IAAAI,WAAA,GAAAJ,OAAA;AAAA,SAAAxB,YAAA;EAAA,IAAA6B,QAAA,GAAAL,OAAA;IAAAd,IAAA,GAAAmB,QAAA,CAAAnB,IAAA;EAAAV,WAAA,YAAAA,YAAA;IAAA,OAAAU,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAwCzBoB,QAAQ,CAAC,KAAK,EAAE,YAAM;EACpBC,EAAE,CAAC,mBAAmB,EAAE,YAAM;IAC5B,IAAMC,IAAI,GAAGC,0BAAQ,CAACC,MAAM,CAAC,IAAAN,WAAA,CAAAO,GAAA,EAACR,IAAA,CAAAS,OAAG,IAAE,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;IAC9CC,MAAM,CAACN,IAAI,CAAC,CAACO,WAAW,CAAC,CAAC;EAG5B,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}