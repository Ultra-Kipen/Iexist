{"version":3,"names":["_getJestObj","mock","render","jest","fn","getByTestId","getByText","queryByTestId","act","cb","StyleSheet","create","styles","View","Text","Animated","timing","start","Value","setValue","interpolate","Platform","OS","_interopRequireDefault","require","_react","_reactNative","_Toast","_interopRequireWildcard","_reactNative2","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_require","useFakeTimers","TestIcon","jsx","testID","children","mockImplementation","ui","visible","props","message","icon","onClose","duration","setTimeout","id","Error","text","describe","afterEach","clearAllMocks","clearAllTimers","test","renderResult","expect","toBeTruthy","toBeNull","runAllTimers","toHaveBeenCalled","mockToast","show","hide","ToastController","setRef","toHaveBeenCalledWith","not","toThrow"],"sources":["Toast.test.tsx"],"sourcesContent":["// __tests__/components/Toast.test.tsx\r\n// 모킹을 먼저 설정\r\njest.mock('@testing-library/react-native', () => ({\r\n  render: jest.fn(() => ({\r\n    getByTestId: jest.fn(() => ({})),\r\n    getByText: jest.fn(() => ({})),\r\n    queryByTestId: jest.fn(() => null),\r\n  })),\r\n  act: jest.fn(cb => cb()),\r\n}));\r\n\r\njest.mock('react-native', () => ({\r\n  StyleSheet: {\r\n    create: jest.fn(styles => styles),\r\n  },\r\n  View: 'View',\r\n  Text: 'Text',\r\n  Animated: {\r\n    View: 'View',\r\n    timing: jest.fn(() => ({\r\n      start: jest.fn(),\r\n    })),\r\n    Value: jest.fn(() => ({\r\n      setValue: jest.fn(),\r\n      interpolate: jest.fn(() => ({})),\r\n    })),\r\n  },\r\n  Platform: { OS: 'android' },\r\n}));\r\n\r\nimport React from 'react';\r\nimport { render, act } from '@testing-library/react-native';\r\nimport Toast, { ToastController } from '../../src/components/Toast';\r\nimport { Text } from 'react-native';\r\n\r\n// 타이머 모킹\r\njest.useFakeTimers();\r\n\r\n// 간단한 아이콘 컴포넌트 정의\r\nconst TestIcon = () => <Text testID=\"test-icon\">아이콘</Text>;\r\n\r\n// 렌더 결과 모킹\r\n(render as jest.Mock).mockImplementation((ui) => {\r\n  const visible = ui.props.visible;\r\n  const testID = ui.props.testID;\r\n  const message = ui.props.message;\r\n  const icon = ui.props.icon;\r\n  const onClose = ui.props.onClose;\r\n  const duration = ui.props.duration || 3000;\r\n  \r\n  // 타이머 설정\r\n  if (visible && onClose) {\r\n    setTimeout(() => {\r\n      onClose();\r\n    }, duration);\r\n  }\r\n  \r\n  return {\r\n    getByTestId: jest.fn((id) => {\r\n      if (id === testID && visible) return { props: ui.props };\r\n      if (id === 'test-icon' && icon) return { props: { children: '아이콘' } };\r\n      throw new Error(`TestID not found: ${id}`);\r\n    }),\r\n    getByText: jest.fn((text) => {\r\n      if (text === message && visible) return { props: { children: message } };\r\n      throw new Error(`Text not found: ${text}`);\r\n    }),\r\n    queryByTestId: jest.fn((id) => {\r\n      if (id === testID && visible) return { props: ui.props };\r\n      return null;\r\n    }),\r\n  };\r\n});\r\n\r\ndescribe('Toast', () => {\r\n  afterEach(() => {\r\n    jest.clearAllMocks();\r\n    jest.clearAllTimers();\r\n  });\r\n\r\n  // 각 테스트에 타임아웃 설정 - 120초\r\n  test('renders correctly with default props', () => {\r\n    const renderResult = render(\r\n      <Toast visible={true} message=\"테스트 메시지\" testID=\"toast\" />\r\n    );\r\n    \r\n    expect(renderResult.getByTestId('toast')).toBeTruthy();\r\n    expect(renderResult.getByText('테스트 메시지')).toBeTruthy();\r\n  }, 120000);\r\n\r\n  test('does not render when visible is false', () => {\r\n    const renderResult = render(\r\n      <Toast visible={false} message=\"테스트 메시지\" testID=\"toast\" />\r\n    );\r\n    \r\n    expect(renderResult.queryByTestId('toast')).toBeNull();\r\n  }, 120000);\r\n\r\n  test('icon renders correctly', () => {\r\n    const renderResult = render(\r\n      <Toast \r\n        visible={true} \r\n        message=\"테스트 메시지\" \r\n        icon={<TestIcon />} \r\n        testID=\"toast\"\r\n      />\r\n    );\r\n    \r\n    expect(renderResult.getByTestId('test-icon')).toBeTruthy();\r\n  }, 120000);\r\n\r\n  test('onClose is called after duration', () => {\r\n    const onClose = jest.fn();\r\n    \r\n    render(\r\n      <Toast \r\n        visible={true} \r\n        message=\"테스트 메시지\" \r\n        duration={1000} \r\n        onClose={onClose} \r\n        testID=\"toast\"\r\n      />\r\n    );\r\n    \r\n    // 타이머 진행\r\n    act(() => {\r\n      jest.runAllTimers(); // 모든 타이머 실행\r\n    });\r\n    \r\n    expect(onClose).toHaveBeenCalled();\r\n  }, 120000);\r\n\r\n  test('ToastController should handle show and hide', () => {\r\n    const mockToast = {\r\n      show: jest.fn(),\r\n      hide: jest.fn()\r\n    };\r\n    \r\n    ToastController.setRef(mockToast);\r\n    \r\n    ToastController.show({ message: '테스트 메시지' });\r\n    expect(mockToast.show).toHaveBeenCalledWith({ message: '테스트 메시지' });\r\n    \r\n    ToastController.hide();\r\n    expect(mockToast.hide).toHaveBeenCalled();\r\n  }, 120000);\r\n\r\n  test('ToastController handles missing instance', () => {\r\n    ToastController.setRef(null);\r\n    \r\n    expect(() => {\r\n      ToastController.show({ message: '테스트 메시지' });\r\n      ToastController.hide();\r\n    }).not.toThrow();\r\n  }, 120000);\r\n});"],"mappings":"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","ignoreList":[]}