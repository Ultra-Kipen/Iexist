a17481097d849c11eebcfd7a535adf8a
_getJestObj().mock("../../src/services/api/postService", function () {
  return {
    getMyPosts: jest.fn(function () {
      return Promise.resolve({
        data: {
          posts: [{
            post_id: 1,
            content: '첫 번째 테스트 게시물입니다.',
            emotion_summary: '행복',
            like_count: 5,
            comment_count: 2,
            created_at: '2025-03-01T12:00:00Z'
          }]
        }
      });
    }),
    deletePost: jest.fn(function () {
      return Promise.resolve({
        data: {
          success: true
        }
      });
    })
  };
});
_getJestObj().mock('react-native-paper', function () {
  var MockButton = 'Button';
  var MockChip = 'Chip';
  var MockPortal = 'Portal';
  var MockCard = 'Card';
  MockCard.Content = 'Card.Content';
  MockCard.Actions = 'Card.Actions';
  var MockDialog = 'Dialog';
  MockDialog.Title = 'Dialog.Title';
  MockDialog.Content = 'Dialog.Content';
  MockDialog.Actions = 'Dialog.Actions';
  return {
    Button: MockButton,
    Card: MockCard,
    Chip: MockChip,
    Dialog: MockDialog,
    Portal: MockPortal
  };
});
_getJestObj().mock('react-native-vector-icons/MaterialCommunityIcons', function () {
  return 'Icon';
});
_getJestObj().mock('react-native-safe-area-context', function () {
  return {
    SafeAreaView: 'SafeAreaView'
  };
});
_getJestObj().mock('@react-navigation/native', function () {
  return {
    useNavigation: function useNavigation() {
      return {
        navigate: mockNavigate,
        goBack: jest.fn(),
        addListener: mockAddListener
      };
    }
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _MyPostsScreen = _interopRequireDefault(require("../../src/screens/MyPostsScreen"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockNavigate = jest.fn();
var mockAddListener = jest.fn(function () {
  return jest.fn();
});
describe('MyPostsScreen', function () {
  it('imports without crashing', function () {
    expect(_MyPostsScreen.default).toBeDefined();
  });
  it('navigates to create post screen when button is clicked', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_MyPostsScreen.default, {
        navigation: {
          navigate: mockNavigate,
          addListener: mockAddListener
        },
        route: {}
      })),
      getByTestId = _render.getByTestId;
    var button = getByTestId('new-post-button');
    fireEvent.press(button);
    expect(mockNavigate).toHaveBeenCalledWith('CreatePost');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJnZXRNeVBvc3RzIiwiamVzdCIsImZuIiwiUHJvbWlzZSIsInJlc29sdmUiLCJkYXRhIiwicG9zdHMiLCJwb3N0X2lkIiwiY29udGVudCIsImVtb3Rpb25fc3VtbWFyeSIsImxpa2VfY291bnQiLCJjb21tZW50X2NvdW50IiwiY3JlYXRlZF9hdCIsImRlbGV0ZVBvc3QiLCJzdWNjZXNzIiwiTW9ja0J1dHRvbiIsIk1vY2tDaGlwIiwiTW9ja1BvcnRhbCIsIk1vY2tDYXJkIiwiQ29udGVudCIsIkFjdGlvbnMiLCJNb2NrRGlhbG9nIiwiVGl0bGUiLCJCdXR0b24iLCJDYXJkIiwiQ2hpcCIsIkRpYWxvZyIsIlBvcnRhbCIsIlNhZmVBcmVhVmlldyIsInVzZU5hdmlnYXRpb24iLCJuYXZpZ2F0ZSIsIm1vY2tOYXZpZ2F0ZSIsImdvQmFjayIsImFkZExpc3RlbmVyIiwibW9ja0FkZExpc3RlbmVyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJfcmVhY3ROYXRpdmUiLCJfTXlQb3N0c1NjcmVlbiIsIl9qc3hSdW50aW1lIiwiX3JlcXVpcmUiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwiTXlQb3N0c1NjcmVlbiIsInRvQmVEZWZpbmVkIiwiX3JlbmRlciIsInJlbmRlciIsImpzeCIsImRlZmF1bHQiLCJuYXZpZ2F0aW9uIiwicm91dGUiLCJnZXRCeVRlc3RJZCIsImJ1dHRvbiIsImZpcmVFdmVudCIsInByZXNzIiwidG9IYXZlQmVlbkNhbGxlZFdpdGgiXSwic291cmNlcyI6WyJNeVBvc3RzU2NyZWVuLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIF9fVEVTVFNfXy9zY3JlZW5zL015UG9zdHNTY3JlZW4udGVzdC50c3hcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgTXlQb3N0c1NjcmVlbiBmcm9tICcuLi8uLi9zcmMvc2NyZWVucy9NeVBvc3RzU2NyZWVuJztcclxuXHJcbi8vIOyEnOu5hOyKpCDrqqjtgrlcclxuamVzdC5tb2NrKCcuLi8uLi9zcmMvc2VydmljZXMvYXBpL3Bvc3RTZXJ2aWNlJywgKCkgPT4gKHtcclxuICBnZXRNeVBvc3RzOiBqZXN0LmZuKCgpID0+IFByb21pc2UucmVzb2x2ZSh7XHJcbiAgICBkYXRhOiB7XHJcbiAgICAgIHBvc3RzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcG9zdF9pZDogMSxcclxuICAgICAgICAgIGNvbnRlbnQ6ICfssqsg67KI7Ke4IO2FjOyKpO2KuCDqsozsi5zrrLzsnoXri4jri6QuJyxcclxuICAgICAgICAgIGVtb3Rpb25fc3VtbWFyeTogJ+2WieuztScsXHJcbiAgICAgICAgICBsaWtlX2NvdW50OiA1LFxyXG4gICAgICAgICAgY29tbWVudF9jb3VudDogMixcclxuICAgICAgICAgIGNyZWF0ZWRfYXQ6ICcyMDI1LTAzLTAxVDEyOjAwOjAwWicsXHJcbiAgICAgICAgfVxyXG4gICAgICBdXHJcbiAgICB9XHJcbiAgfSkpLFxyXG4gIGRlbGV0ZVBvc3Q6IGplc3QuZm4oKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogeyBzdWNjZXNzOiB0cnVlIH0gfSkpXHJcbn0pKTtcclxuXHJcbi8vIOuzte2VqSDsu7Ttj6zrhIztirgg66qo7YK5XHJcbmplc3QubW9jaygncmVhY3QtbmF0aXZlLXBhcGVyJywgKCkgPT4ge1xyXG4gIC8vIOqwgSDsu7Ttj6zrhIztirjrpbwg66y47J6Q7Je066GcIOuqqO2CuVxyXG4gIGNvbnN0IE1vY2tCdXR0b24gPSAnQnV0dG9uJztcclxuICBjb25zdCBNb2NrQ2hpcCA9ICdDaGlwJztcclxuICBjb25zdCBNb2NrUG9ydGFsID0gJ1BvcnRhbCc7XHJcbiAgXHJcbiAgLy8gQ2FyZCDsu7Ttj6zrhIztirjrpbwg7ZWo7IiY66GcIOuqqO2CuVxyXG4gIGNvbnN0IE1vY2tDYXJkID0gJ0NhcmQnO1xyXG4gIE1vY2tDYXJkLkNvbnRlbnQgPSAnQ2FyZC5Db250ZW50JztcclxuICBNb2NrQ2FyZC5BY3Rpb25zID0gJ0NhcmQuQWN0aW9ucyc7XHJcbiAgXHJcbiAgLy8gRGlhbG9nIOy7tO2PrOuEjO2KuOulvCDtlajsiJjroZwg66qo7YK5XHJcbiAgY29uc3QgTW9ja0RpYWxvZyA9ICdEaWFsb2cnO1xyXG4gIE1vY2tEaWFsb2cuVGl0bGUgPSAnRGlhbG9nLlRpdGxlJztcclxuICBNb2NrRGlhbG9nLkNvbnRlbnQgPSAnRGlhbG9nLkNvbnRlbnQnO1xyXG4gIE1vY2tEaWFsb2cuQWN0aW9ucyA9ICdEaWFsb2cuQWN0aW9ucyc7XHJcbiAgXHJcbiAgcmV0dXJuIHtcclxuICAgIEJ1dHRvbjogTW9ja0J1dHRvbixcclxuICAgIENhcmQ6IE1vY2tDYXJkLFxyXG4gICAgQ2hpcDogTW9ja0NoaXAsXHJcbiAgICBEaWFsb2c6IE1vY2tEaWFsb2csXHJcbiAgICBQb3J0YWw6IE1vY2tQb3J0YWxcclxuICB9O1xyXG59KTtcclxuXHJcbmplc3QubW9jaygncmVhY3QtbmF0aXZlLXZlY3Rvci1pY29ucy9NYXRlcmlhbENvbW11bml0eUljb25zJywgKCkgPT4gJ0ljb24nKTtcclxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUtc2FmZS1hcmVhLWNvbnRleHQnLCAoKSA9PiAoeyBTYWZlQXJlYVZpZXc6ICdTYWZlQXJlYVZpZXcnIH0pKTtcclxuXHJcbi8vIOuEpOu5hOqyjOydtOyFmCDrqqjtgrlcclxuY29uc3QgbW9ja05hdmlnYXRlID0gamVzdC5mbigpO1xyXG5jb25zdCBtb2NrQWRkTGlzdGVuZXIgPSBqZXN0LmZuKCgpID0+IGplc3QuZm4oKSk7XHJcblxyXG5qZXN0Lm1vY2soJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZScsICgpID0+ICh7XHJcbiAgdXNlTmF2aWdhdGlvbjogKCkgPT4gKHtcclxuICAgIG5hdmlnYXRlOiBtb2NrTmF2aWdhdGUsXHJcbiAgICBnb0JhY2s6IGplc3QuZm4oKSxcclxuICAgIGFkZExpc3RlbmVyOiBtb2NrQWRkTGlzdGVuZXIsXHJcbiAgfSksXHJcbn0pKTtcclxuXHJcbi8vIOqwhOuLqO2VnCDthYzsiqTtirhcclxuZGVzY3JpYmUoJ015UG9zdHNTY3JlZW4nLCAoKSA9PiB7XHJcbiAgaXQoJ2ltcG9ydHMgd2l0aG91dCBjcmFzaGluZycsICgpID0+IHtcclxuICAgIGV4cGVjdChNeVBvc3RzU2NyZWVuKS50b0JlRGVmaW5lZCgpO1xyXG4gIH0pO1xyXG4gIGl0KCduYXZpZ2F0ZXMgdG8gY3JlYXRlIHBvc3Qgc2NyZWVuIHdoZW4gYnV0dG9uIGlzIGNsaWNrZWQnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXHJcbiAgICAgIDxNeVBvc3RzU2NyZWVuIFxyXG4gICAgICAgIG5hdmlnYXRpb249e3sgbmF2aWdhdGU6IG1vY2tOYXZpZ2F0ZSwgYWRkTGlzdGVuZXI6IG1vY2tBZGRMaXN0ZW5lciB9fSBcclxuICAgICAgICByb3V0ZT17e319IFxyXG4gICAgICAvPlxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgY29uc3QgYnV0dG9uID0gZ2V0QnlUZXN0SWQoJ25ldy1wb3N0LWJ1dHRvbicpO1xyXG4gICAgZmlyZUV2ZW50LnByZXNzKGJ1dHRvbik7XHJcbiAgICBcclxuICAgIGV4cGVjdChtb2NrTmF2aWdhdGUpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKCdDcmVhdGVQb3N0Jyk7XHJcbiAgfSk7XHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBTUFBLFdBQUEsR0FBS0MsSUFBSSx1Q0FBdUM7RUFBQSxPQUFPO0lBQ3JEQyxVQUFVLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxDQUFDO01BQUEsT0FBTUMsT0FBTyxDQUFDQyxPQUFPLENBQUM7UUFDeENDLElBQUksRUFBRTtVQUNKQyxLQUFLLEVBQUUsQ0FDTDtZQUNFQyxPQUFPLEVBQUUsQ0FBQztZQUNWQyxPQUFPLEVBQUUsa0JBQWtCO1lBQzNCQyxlQUFlLEVB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