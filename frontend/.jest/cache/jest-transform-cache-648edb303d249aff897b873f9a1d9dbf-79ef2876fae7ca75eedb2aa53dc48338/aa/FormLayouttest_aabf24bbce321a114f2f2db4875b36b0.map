{"version":3,"names":["_getJestObj","mock","View","Text","ScrollView","KeyboardAvoidingView","TouchableWithoutFeedback","StyleSheet","create","styles","flatten","style","Platform","OS","select","obj","ios","Keyboard","dismiss","jest","fn","useTheme","theme","colors","background","dark","_interopRequireDefault","require","_react","_reactNative","_FormLayout","_jsxRuntime","_require","describe","it","_render","render","jsx","default","children","toJSON","expect","not","toBeNull","_render2","normalJSON","_render3","loading","loadingJSON","JSON","stringify","toEqual","_render4","header","footer","jsonString","toContain","_render5","avoidKeyboard","withKeyboardAvoid","_render6","withoutKeyboardAvoid","_render7","defaultStyle","_render8","backgroundColor","contentContainerStyle","padding","customStyle","_render9","tree","toMatchSnapshot","type","toBeDefined"],"sources":["FormLayout.test.tsx"],"sourcesContent":["// tests/layouts/FormLayout.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport FormLayout from '../../src/layouts/FormLayout';\r\n\r\n// 간단한 모킹으로 변경\r\njest.mock('react-native', () => ({\r\n  View: 'View',\r\n  Text: 'Text',\r\n  ScrollView: 'ScrollView',\r\n  KeyboardAvoidingView: 'KeyboardAvoidingView',\r\n  TouchableWithoutFeedback: 'TouchableWithoutFeedback',\r\n  StyleSheet: {\r\n    create: (styles) => styles,\r\n    flatten: (style) => style,\r\n  },\r\n  Platform: {\r\n    OS: 'ios',\r\n    select: (obj) => obj.ios,\r\n  },\r\n  Keyboard: {\r\n    dismiss: jest.fn(),\r\n  },\r\n}));\r\n\r\n// useTheme 모킹\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#f5f5f5',\r\n      },\r\n      dark: false,\r\n    },\r\n  }),\r\n}));\r\n\r\n// LoadingIndicator 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => 'LoadingIndicator');\r\n\r\ndescribe('FormLayout 컴포넌트 검증', () => {\r\n  // 기본 렌더링 확인\r\n  it('기본 폼 레이아웃이 오류 없이 렌더링되어야 함', () => {\r\n    const { toJSON } = render(\r\n      <FormLayout>\r\n        <Text>기본 콘텐츠</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    // JSON 구조가 null이 아닌지 확인\r\n    expect(toJSON()).not.toBeNull();\r\n  });\r\n  \r\n  // 로딩 상태 확인\r\n  it('loading props가 전달되면 로딩 상태로 렌더링되어야 함', () => {\r\n    const { toJSON: normalJSON } = render(\r\n      <FormLayout>\r\n        <Text>기본 콘텐츠</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    const { toJSON: loadingJSON } = render(\r\n      <FormLayout loading={true}>\r\n        <Text>기본 콘텐츠</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    // 로딩 상태와 일반 상태의 렌더링 결과가 달라야 함\r\n    expect(JSON.stringify(normalJSON())).not.toEqual(JSON.stringify(loadingJSON()));\r\n  });\r\n  \r\n  // 헤더 및 푸터 렌더링 확인\r\n  it('헤더와 푸터가 전달되면 함께 렌더링되어야 함', () => {\r\n    const { toJSON } = render(\r\n      <FormLayout\r\n        header={<Text>헤더 영역</Text>}\r\n        footer={<Text>푸터 영역</Text>}\r\n      >\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    // JSON 결과에 헤더와 푸터가 포함되어 있는지 확인\r\n    const jsonString = JSON.stringify(toJSON());\r\n    expect(jsonString).toContain('헤더 영역');\r\n    expect(jsonString).toContain('푸터 영역');\r\n    expect(jsonString).toContain('폼 내용');\r\n  });\r\n  \r\n  // 키보드 회피 옵션 확인\r\n  it('avoidKeyboard 옵션이 설정되면 컴포넌트 구조가 변경되어야 함', () => {\r\n    const { toJSON: withKeyboardAvoid } = render(\r\n      <FormLayout avoidKeyboard={true}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    const { toJSON: withoutKeyboardAvoid } = render(\r\n      <FormLayout avoidKeyboard={false}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    // avoidKeyboard 옵션에 따라 다른 컴포넌트 구조가 렌더링되어야 함\r\n    expect(JSON.stringify(withKeyboardAvoid())).not.toEqual(JSON.stringify(withoutKeyboardAvoid()));\r\n  });\r\n  \r\n  // 스타일 적용 확인\r\n  it('커스텀 스타일이 적용되어야 함', () => {\r\n    const { toJSON: defaultStyle } = render(\r\n      <FormLayout>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    const { toJSON: customStyle } = render(\r\n      <FormLayout\r\n        style={{ backgroundColor: 'red' }}\r\n        contentContainerStyle={{ padding: 20 }}\r\n      >\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    // 스타일 변경에 따라 다른 결과가 렌더링되어야 함\r\n    expect(JSON.stringify(defaultStyle())).not.toEqual(JSON.stringify(customStyle()));\r\n  });\r\n  \r\n  // 실제 렌더링 구조 확인\r\n  it('FormLayout이 올바른 구조로 렌더링되어야 함', () => {\r\n    const { toJSON } = render(\r\n      <FormLayout>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    const tree = toJSON();\r\n    expect(tree).toMatchSnapshot();\r\n    \r\n    // 스냅샷 대신 간단한 구조 검증으로 대체할 수도 있음\r\n    // 아래 타입 검증은 스냅샷이 없을 경우 대체 검증\r\n    expect(tree?.type).toBeDefined();\r\n    expect(tree?.children).toBeDefined();\r\n    \r\n    // 최소한 자식 요소가 있는지 확인\r\n    const jsonString = JSON.stringify(tree);\r\n    expect(jsonString).toContain('폼 내용');\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}