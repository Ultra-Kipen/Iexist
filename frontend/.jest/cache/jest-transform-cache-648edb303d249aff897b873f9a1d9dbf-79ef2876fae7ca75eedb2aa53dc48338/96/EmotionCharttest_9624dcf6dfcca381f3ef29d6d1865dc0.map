{"version":3,"names":["_getJestObj","mock","React","require","_require","View","Text","LineChart","jest","fn","props","createElement","testID","PieChart","_interopRequireDefault","_react","_reactNative","_EmotionChart","_jsxRuntime","_require2","describe","mockEmotionData","count","date","emotionId","emotionName","color","it","_render","render","jsx","default","data","timeRange","getByText","expect","toBeTruthy","_render2","getByTestId","_render3","type","timeRanges","range","expected","forEach","_ref","_render4","customHeight","_render5","height"],"sources":["EmotionChart.test.tsx"],"sourcesContent":["// tests/components/EmotionChart.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport EmotionChart from '../../src/components/EmotionChart';\r\n\r\n// 라이브러리 모킹\r\njest.mock('react-native-chart-kit', () => {\r\n  const React = require('react');\r\n  const { View, Text } = require('react-native');\r\n  \r\n  return {\r\n    LineChart: jest.fn(props => {\r\n      return React.createElement(View, { testID: 'line-chart' }, \r\n        React.createElement(Text, null, 'LineChart Mocked')\r\n      );\r\n    }),\r\n    PieChart: jest.fn(props => {\r\n      return React.createElement(View, { testID: 'pie-chart' }, \r\n        React.createElement(Text, null, 'PieChart Mocked')\r\n      );\r\n    }),\r\n  };\r\n});\r\n\r\ndescribe('EmotionChart', () => {\r\n  const mockEmotionData = [\r\n    { count: 5, date: '2025-04-01', emotionId: 1, emotionName: '행복', color: '#FFD700' },\r\n    { count: 3, date: '2025-04-02', emotionId: 2, emotionName: '슬픔', color: '#4682B4' },\r\n    { count: 2, date: '2025-04-03', emotionId: 1, emotionName: '행복', color: '#FFD700' },\r\n    { count: 4, date: '2025-04-04', emotionId: 3, emotionName: '화남', color: '#FF4500' },\r\n  ];\r\n\r\n  it('renders empty state when no data is provided', () => {\r\n    const { getByText } = render(\r\n      <EmotionChart data={[]} timeRange=\"daily\" />\r\n    );\r\n    expect(getByText('감정 기록이 없습니다.')).toBeTruthy();\r\n  });\r\n\r\n  it('renders LineChart by default', () => {\r\n    const { getByText, getByTestId } = render(\r\n      <EmotionChart data={mockEmotionData} timeRange=\"daily\" />\r\n    );\r\n    expect(getByText('일간 감정 변화')).toBeTruthy();\r\n    expect(getByTestId('line-chart')).toBeTruthy();\r\n  });\r\n\r\n  it('renders PieChart when type is pie', () => {\r\n    const { getByText, getByTestId } = render(\r\n      <EmotionChart data={mockEmotionData} timeRange=\"weekly\" type=\"pie\" />\r\n    );\r\n    expect(getByText('주간 감정 분포')).toBeTruthy();\r\n    expect(getByTestId('pie-chart')).toBeTruthy();\r\n  });\r\n\r\n  it('shows correct title based on timeRange', () => {\r\n    const timeRanges = [\r\n      { range: 'daily', expected: '일간' },\r\n      { range: 'weekly', expected: '주간' },\r\n      { range: 'monthly', expected: '월간' },\r\n      { range: 'yearly', expected: '연간' },\r\n    ];\r\n\r\n    timeRanges.forEach(({ range, expected }) => {\r\n      const { getByText } = render(\r\n        <EmotionChart data={mockEmotionData} timeRange={range as any} />\r\n      );\r\n      expect(getByText(`${expected} 감정 변화`)).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  it('applies custom height when provided', () => {\r\n    const customHeight = 300;\r\n    const { getByTestId } = render(\r\n      <EmotionChart data={mockEmotionData} timeRange=\"monthly\" height={customHeight} />\r\n    );\r\n    expect(getByTestId('line-chart')).toBeTruthy();\r\n    // 실제 환경에서는 height prop이 LineChart에 전달되었는지 확인할 수 있지만,\r\n    // 모킹된 환경에서는 이 테스트는 단순히 컴포넌트가 렌더링되는지만 확인합니다.\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}