83bc4b52b068d86c79835242610d3038
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useOnAction = useOnAction;
var React = _interopRequireWildcard(require("react"));
var _DeprecatedNavigationInChildContext = require("./DeprecatedNavigationInChildContext.js");
var _NavigationBuilderContext = require("./NavigationBuilderContext.js");
var _useOnPreventRemove = require("./useOnPreventRemove.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function useOnAction(_ref) {
  var router = _ref.router,
    getState = _ref.getState,
    setState = _ref.setState,
    key = _ref.key,
    actionListeners = _ref.actionListeners,
    beforeRemoveListeners = _ref.beforeRemoveListeners,
    routerConfigOptions = _ref.routerConfigOptions,
    emitter = _ref.emitter;
  var _React$useContext = React.useContext(_NavigationBuilderContext.NavigationBuilderContext),
    onActionParent = _React$useContext.onAction,
    onRouteFocusParent = _React$useContext.onRouteFocus,
    addListenerParent = _React$useContext.addListener,
    onDispatchAction = _React$useContext.onDispatchAction;
  var navigationInChildEnabled = React.useContext(_DeprecatedNavigationInChildContext.DeprecatedNavigationInChildContext);
  var routerConfigOptionsRef = React.useRef(routerConfigOptions);
  React.useEffect(function () {
    routerConfigOptionsRef.current = routerConfigOptions;
  });
  var onAction = React.useCallback(function (action) {
    var visitedNavigators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();
    var state = getState();
    if (visitedNavigators.has(state.key)) {
      return false;
    }
    visitedNavigators.add(state.key);
    if (typeof action.target !== 'string' || action.target === state.key) {
      var result = router.getStateForAction(state, action, routerConfigOptionsRef.current);
      result = result === null && action.target === state.key ? state : result;
      if (result !== null) {
        onDispatchAction(action, state === result);
        if (state !== result) {
          var isPrevented = (0, _useOnPreventRemove.shouldPreventRemove)(emitter, beforeRemoveListeners, state.routes, result.routes, action);
          if (isPrevented) {
            return true;
          }
          setState(result);
        }
        if (onRouteFocusParent !== undefined) {
          var shouldFocus = router.shouldActionChangeFocus(action);
          if (shouldFocus && key !== undefined) {
            onRouteFocusParent(key);
          }
        }
        return true;
      }
    }
    if (onActionParent !== undefined) {
      if (onActionParent(action, visitedNavigators)) {
        return true;
      }
    }
    if (typeof action.target === 'string' || action.type === 'NAVIGATE_DEPRECATED' || navigationInChildEnabled) {
      for (var i = actionListeners.length - 1; i >= 0; i--) {
        var listener = actionListeners[i];
        if (listener(action, visitedNavigators)) {
          return true;
        }
      }
    }
    return false;
  }, [actionListeners, beforeRemoveListeners, emitter, getState, navigationInChildEnabled, key, onActionParent, onDispatchAction, onRouteFocusParent, router, setState]);
  (0, _useOnPreventRemove.useOnPreventRemove)({
    getState: getState,
    emitter: emitter,
    beforeRemoveListeners: beforeRemoveListeners
  });
  React.useEffect(function () {
    return addListenerParent == null ? void 0 : addListenerParent('action', onAction);
  }, [addListenerParent, onAction]);
  return onAction;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9EZXByZWNhdGVkTmF2aWdhdGlvbkluQ2hpbGRDb250ZXh0IiwiX05hdmlnYXRpb25CdWlsZGVyQ29udGV4dCIsIl91c2VPblByZXZlbnRSZW1vdmUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJ1c2VPbkFjdGlvbiIsIl9yZWYiLCJyb3V0ZXIiLCJnZXRTdGF0ZSIsInNldFN0YXRlIiwia2V5IiwiYWN0aW9uTGlzdGVuZXJzIiwiYmVmb3JlUmVtb3ZlTGlzdGVuZXJzIiwicm91dGVyQ29uZmlnT3B0aW9ucyIsImVtaXR0ZXIiLCJfUmVhY3QkdXNlQ29udGV4dCIsInVzZUNvbnRleHQiLCJOYXZpZ2F0aW9uQnVpbGRlckNvbnRleHQiLCJvbkFjdGlvblBhcmVudCIsIm9uQWN0aW9uIiwib25Sb3V0ZUZvY3VzUGFyZW50Iiwib25Sb3V0ZUZvY3VzIiwiYWRkTGlzdGVuZXJQYXJlbnQiLCJhZGRMaXN0ZW5lciIsIm9uRGlzcGF0Y2hBY3Rpb24iLCJuYXZpZ2F0aW9uSW5DaGlsZEVuYWJsZWQiLCJEZXByZWNhdGVkTmF2aWdhdGlvbkluQ2hpbGRDb250ZXh0Iiwicm91dGVyQ29uZmlnT3B0aW9uc1JlZiIsInVzZVJlZiIsInVzZUVmZmVjdCIsImN1cnJlbnQiLCJ1c2VDYWxsYmFjayIsImFjdGlvbiIsInZpc2l0ZWROYXZpZ2F0b3JzIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiU2V0Iiwic3RhdGUiLCJhZGQiLCJ0YXJnZXQiLCJyZXN1bHQiLCJnZXRTdGF0ZUZvckFjdGlvbiIsImlzUHJldmVudGVkIiwic2hvdWxkUHJldmVudFJlbW92ZSIsInJvdXRlcyIsInNob3VsZEZvY3VzIiwic2hvdWxkQWN0aW9uQ2hhbmdlRm9jdXMiLCJ0eXBlIiwibGlzdGVuZXIiLCJ1c2VPblByZXZlbnRSZW1vdmUiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvdXNlT25BY3Rpb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFPQSxJQUFBQSxLQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxtQ0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUseUJBQUEsR0FBQUYsT0FBQTtBQU9BLElBQUFHLG1CQUFBLEdBQUFILE9BQUE7QUFBOEUsU0FBQUkseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFBLFNBQUFOLHdCQUFBTSxDQUFBLEVBQUFFLENBQUEsU0FBQUEsQ0FBQSxJQUFBRixDQUFBLElBQUFBLENBQUEsQ0FBQUksVUFBQSxTQUFBSixDQUFBLGVBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsV0FBQUssT0FBQSxFQUFBTCxDQUFBLFFBQUFHLENBQUEsR0FBQUosd0JBQUEsQ0FBQUcsQ0FBQSxPQUFBQyxDQUFBLElBQUFBLENBQUEsQ0FBQUcsR0FBQSxDQUFBTixDQUFBLFVBQUFHLENBQUEsQ0FBQUksR0FBQSxDQUFBUCxDQUFBLE9BQUFRLENBQUEsS0FBQUMsU0FBQSxVQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFFLHdCQUFBLFdBQUFDLENBQUEsSUFBQWQsQ0FBQSxvQkFBQWMsQ0FBQSxPQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWhCLENBQUEs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