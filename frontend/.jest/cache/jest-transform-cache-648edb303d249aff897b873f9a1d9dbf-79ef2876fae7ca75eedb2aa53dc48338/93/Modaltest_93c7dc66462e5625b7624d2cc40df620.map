{"version":3,"names":["_react","_interopRequireDefault","require","_reactTestRenderer","_Modal","_jsxRuntime","TestContent","jsx","children","describe","mockOnClose","jest","fn","beforeEach","mockClear","it","tree","create","default","isVisible","onClose","expect","toJSON","toBeNull","not","root","findByType","toBeTruthy","title","titleElement","findByProps","props","toBe","closeOnBackdropPress","backdrop","act","onClick","toHaveBeenCalledTimes","toHaveBeenCalled","closeButton","Footer","footer","footerContainer"],"sources":["Modal.test.tsx"],"sourcesContent":["// Modal.test.tsx - React 테스트용\r\nimport React from 'react';\r\nimport { create, act } from 'react-test-renderer';\r\nimport Modal from '../../src/components/Modal';\r\n\r\n// 테스트용 컴포넌트\r\nconst TestContent = () => <div>Test Content</div>;\r\n\r\ndescribe('Modal Component', () => {\r\n  const mockOnClose = jest.fn();\r\n  \r\n  beforeEach(() => {\r\n    mockOnClose.mockClear();\r\n  });\r\n  \r\n  it('renders nothing when not visible', () => {\r\n    const tree = create(\r\n      <Modal isVisible={false} onClose={mockOnClose}>\r\n        <TestContent />\r\n      </Modal>\r\n    );\r\n    \r\n    expect(tree.toJSON()).toBeNull();\r\n  });\r\n\r\n  it('renders content when visible', () => {\r\n    const tree = create(\r\n      <Modal isVisible={true} onClose={mockOnClose}>\r\n        <TestContent />\r\n      </Modal>\r\n    );\r\n    \r\n    expect(tree.toJSON()).not.toBeNull();\r\n    expect(tree.root.findByType(TestContent)).toBeTruthy();\r\n  });\r\n\r\n  it('displays title when provided', () => {\r\n    const tree = create(\r\n      <Modal isVisible={true} onClose={mockOnClose} title=\"Test Modal\">\r\n        <TestContent />\r\n      </Modal>\r\n    );\r\n    \r\n    const titleElement = tree.root.findByProps({ 'data-testid': 'modal-header' });\r\n    expect(titleElement).toBeTruthy();\r\n    expect(titleElement.findByType('h3').props.children).toBe('Test Modal');\r\n  });\r\n  \r\n  it('calls onClose when backdrop is pressed', () => {\r\n    const tree = create(\r\n      <Modal isVisible={true} onClose={mockOnClose} closeOnBackdropPress={true}>\r\n        <TestContent />\r\n      </Modal>\r\n    );\r\n    \r\n    const backdrop = tree.root.findByProps({ 'data-testid': 'modal-backdrop' });\r\n    act(() => {\r\n      backdrop.props.onClick();\r\n    });\r\n    \r\n    expect(mockOnClose).toHaveBeenCalledTimes(1);\r\n  });\r\n  \r\n  it('does not call onClose when backdrop is pressed and closeOnBackdropPress is false', () => {\r\n    const tree = create(\r\n      <Modal isVisible={true} onClose={mockOnClose} closeOnBackdropPress={false}>\r\n        <TestContent />\r\n      </Modal>\r\n    );\r\n    \r\n    const backdrop = tree.root.findByProps({ 'data-testid': 'modal-backdrop' });\r\n    act(() => {\r\n      backdrop.props.onClick();\r\n    });\r\n    \r\n    expect(mockOnClose).not.toHaveBeenCalled();\r\n  });\r\n  \r\n  it('calls onClose when close button is pressed', () => {\r\n    const tree = create(\r\n      <Modal isVisible={true} onClose={mockOnClose} title=\"Test Modal\">\r\n        <TestContent />\r\n      </Modal>\r\n    );\r\n    \r\n    const closeButton = tree.root.findByProps({ 'data-testid': 'modal-close-button' });\r\n    act(() => {\r\n      closeButton.props.onClick();\r\n    });\r\n    \r\n    expect(mockOnClose).toHaveBeenCalledTimes(1);\r\n  });\r\n  \r\n  it('renders footer when provided', () => {\r\n    const Footer = () => <div>Footer Content</div>;\r\n    \r\n    const tree = create(\r\n      <Modal \r\n        isVisible={true} \r\n        onClose={mockOnClose}\r\n        footer={<Footer />}\r\n      >\r\n        <TestContent />\r\n      </Modal>\r\n    );\r\n    \r\n    const footerContainer = tree.root.findByProps({ 'data-testid': 'modal-footer' });\r\n    expect(footerContainer).toBeTruthy();\r\n    expect(footerContainer.findByType(Footer)).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}