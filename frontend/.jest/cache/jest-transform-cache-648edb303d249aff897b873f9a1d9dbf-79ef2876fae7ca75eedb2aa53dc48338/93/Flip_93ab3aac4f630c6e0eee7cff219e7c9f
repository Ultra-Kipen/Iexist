fe36de015bd07d01ba8b8e73b41df47b
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FlipOutYRight = exports.FlipOutYLeft = exports.FlipOutXUp = exports.FlipOutXDown = exports.FlipOutEasyY = exports.FlipOutEasyX = exports.FlipInYRight = exports.FlipInYLeft = exports.FlipInXUp = exports.FlipInXDown = exports.FlipInEasyY = exports.FlipInEasyX = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _index = require("../animationBuilder/index.js");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var FlipInXUp = exports.FlipInXUp = function (_ComplexAnimationBuil) {
  function FlipInXUp() {
    var _this;
    (0, _classCallCheck2.default)(this, FlipInXUp);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, FlipInXUp, [].concat(args));
    _this.build = function () {
      var delayFunction = _this.getDelayFunction();
      var _this$getAnimationAnd = _this.getAnimationAndConfig(),
        _this$getAnimationAnd2 = (0, _slicedToArray2.default)(_this$getAnimationAnd, 2),
        animation = _this$getAnimationAnd2[0],
        config = _this$getAnimationAnd2[1];
      var delay = _this.getDelay();
      var callback = _this.callbackV;
      var initialValues = _this.initialValues;
      return function (targetValues) {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateX: '90deg'
            }, {
              translateY: -targetValues.targetHeight
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: 500
            }, {
              rotateX: delayFunction(delay, animation('0deg', config))
            }, {
              translateY: delayFunction(delay, animation(0, config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this;
  }
  (0, _inherits2.default)(FlipInXUp, _ComplexAnimationBuil);
  return (0, _createClass2.default)(FlipInXUp, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipInXUp();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipInXUp.presetName = 'FlipInXUp';
var FlipInYLeft = exports.FlipInYLeft = function (_ComplexAnimationBuil2) {
  function FlipInYLeft() {
    var _this2;
    (0, _classCallCheck2.default)(this, FlipInYLeft);
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    _this2 = _callSuper(this, FlipInYLeft, [].concat(args));
    _this2.build = function () {
      var delayFunction = _this2.getDelayFunction();
      var _this2$getAnimationAn = _this2.getAnimationAndConfig(),
        _this2$getAnimationAn2 = (0, _slicedToArray2.default)(_this2$getAnimationAn, 2),
        animation = _this2$getAnimationAn2[0],
        config = _this2$getAnimationAn2[1];
      var delay = _this2.getDelay();
      var callback = _this2.callbackV;
      var initialValues = _this2.initialValues;
      return function (targetValues) {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateY: '-90deg'
            }, {
              translateX: -targetValues.targetWidth
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateY: delayFunction(delay, animation('0deg', config))
            }, {
              translateX: delayFunction(delay, animation(0, config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this2;
  }
  (0, _inherits2.default)(FlipInYLeft, _ComplexAnimationBuil2);
  return (0, _createClass2.default)(FlipInYLeft, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipInYLeft();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipInYLeft.presetName = 'FlipInYLeft';
var FlipInXDown = exports.FlipInXDown = function (_ComplexAnimationBuil3) {
  function FlipInXDown() {
    var _this3;
    (0, _classCallCheck2.default)(this, FlipInXDown);
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    _this3 = _callSuper(this, FlipInXDown, [].concat(args));
    _this3.build = function () {
      var delayFunction = _this3.getDelayFunction();
      var _this3$getAnimationAn = _this3.getAnimationAndConfig(),
        _this3$getAnimationAn2 = (0, _slicedToArray2.default)(_this3$getAnimationAn, 2),
        animation = _this3$getAnimationAn2[0],
        config = _this3$getAnimationAn2[1];
      var delay = _this3.getDelay();
      var callback = _this3.callbackV;
      var initialValues = _this3.initialValues;
      return function (targetValues) {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateX: '-90deg'
            }, {
              translateY: targetValues.targetHeight
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateX: delayFunction(delay, animation('0deg', config))
            }, {
              translateY: delayFunction(delay, animation(0, config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this3;
  }
  (0, _inherits2.default)(FlipInXDown, _ComplexAnimationBuil3);
  return (0, _createClass2.default)(FlipInXDown, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipInXDown();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipInXDown.presetName = 'FlipInXDown';
var FlipInYRight = exports.FlipInYRight = function (_ComplexAnimationBuil4) {
  function FlipInYRight() {
    var _this4;
    (0, _classCallCheck2.default)(this, FlipInYRight);
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    _this4 = _callSuper(this, FlipInYRight, [].concat(args));
    _this4.build = function () {
      var delayFunction = _this4.getDelayFunction();
      var _this4$getAnimationAn = _this4.getAnimationAndConfig(),
        _this4$getAnimationAn2 = (0, _slicedToArray2.default)(_this4$getAnimationAn, 2),
        animation = _this4$getAnimationAn2[0],
        config = _this4$getAnimationAn2[1];
      var delay = _this4.getDelay();
      var callback = _this4.callbackV;
      var initialValues = _this4.initialValues;
      return function (targetValues) {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateY: '90deg'
            }, {
              translateX: targetValues.targetWidth
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateY: delayFunction(delay, animation('0deg', config))
            }, {
              translateX: delayFunction(delay, animation(0, config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this4;
  }
  (0, _inherits2.default)(FlipInYRight, _ComplexAnimationBuil4);
  return (0, _createClass2.default)(FlipInYRight, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipInYRight();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipInYRight.presetName = 'FlipInYRight';
var FlipInEasyX = exports.FlipInEasyX = function (_ComplexAnimationBuil5) {
  function FlipInEasyX() {
    var _this5;
    (0, _classCallCheck2.default)(this, FlipInEasyX);
    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }
    _this5 = _callSuper(this, FlipInEasyX, [].concat(args));
    _this5.build = function () {
      var delayFunction = _this5.getDelayFunction();
      var _this5$getAnimationAn = _this5.getAnimationAndConfig(),
        _this5$getAnimationAn2 = (0, _slicedToArray2.default)(_this5$getAnimationAn, 2),
        animation = _this5$getAnimationAn2[0],
        config = _this5$getAnimationAn2[1];
      var delay = _this5.getDelay();
      var callback = _this5.callbackV;
      var initialValues = _this5.initialValues;
      return function () {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateX: '90deg'
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateX: delayFunction(delay, animation('0deg', config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this5;
  }
  (0, _inherits2.default)(FlipInEasyX, _ComplexAnimationBuil5);
  return (0, _createClass2.default)(FlipInEasyX, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipInEasyX();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipInEasyX.presetName = 'FlipInEasyX';
var FlipInEasyY = exports.FlipInEasyY = function (_ComplexAnimationBuil6) {
  function FlipInEasyY() {
    var _this6;
    (0, _classCallCheck2.default)(this, FlipInEasyY);
    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
      args[_key6] = arguments[_key6];
    }
    _this6 = _callSuper(this, FlipInEasyY, [].concat(args));
    _this6.build = function () {
      var delayFunction = _this6.getDelayFunction();
      var _this6$getAnimationAn = _this6.getAnimationAndConfig(),
        _this6$getAnimationAn2 = (0, _slicedToArray2.default)(_this6$getAnimationAn, 2),
        animation = _this6$getAnimationAn2[0],
        config = _this6$getAnimationAn2[1];
      var delay = _this6.getDelay();
      var callback = _this6.callbackV;
      var initialValues = _this6.initialValues;
      return function () {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateY: '90deg'
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateY: delayFunction(delay, animation('0deg', config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this6;
  }
  (0, _inherits2.default)(FlipInEasyY, _ComplexAnimationBuil6);
  return (0, _createClass2.default)(FlipInEasyY, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipInEasyY();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipInEasyY.presetName = 'FlipInEasyY';
var FlipOutXUp = exports.FlipOutXUp = function (_ComplexAnimationBuil7) {
  function FlipOutXUp() {
    var _this7;
    (0, _classCallCheck2.default)(this, FlipOutXUp);
    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
      args[_key7] = arguments[_key7];
    }
    _this7 = _callSuper(this, FlipOutXUp, [].concat(args));
    _this7.build = function () {
      var delayFunction = _this7.getDelayFunction();
      var _this7$getAnimationAn = _this7.getAnimationAndConfig(),
        _this7$getAnimationAn2 = (0, _slicedToArray2.default)(_this7$getAnimationAn, 2),
        animation = _this7$getAnimationAn2[0],
        config = _this7$getAnimationAn2[1];
      var delay = _this7.getDelay();
      var callback = _this7.callbackV;
      var initialValues = _this7.initialValues;
      return function (targetValues) {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateX: '0deg'
            }, {
              translateY: 0
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateX: delayFunction(delay, animation('90deg', config))
            }, {
              translateY: delayFunction(delay, animation(-targetValues.currentHeight, config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this7;
  }
  (0, _inherits2.default)(FlipOutXUp, _ComplexAnimationBuil7);
  return (0, _createClass2.default)(FlipOutXUp, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipOutXUp();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipOutXUp.presetName = 'FlipOutXUp';
var FlipOutYLeft = exports.FlipOutYLeft = function (_ComplexAnimationBuil8) {
  function FlipOutYLeft() {
    var _this8;
    (0, _classCallCheck2.default)(this, FlipOutYLeft);
    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
      args[_key8] = arguments[_key8];
    }
    _this8 = _callSuper(this, FlipOutYLeft, [].concat(args));
    _this8.build = function () {
      var delayFunction = _this8.getDelayFunction();
      var _this8$getAnimationAn = _this8.getAnimationAndConfig(),
        _this8$getAnimationAn2 = (0, _slicedToArray2.default)(_this8$getAnimationAn, 2),
        animation = _this8$getAnimationAn2[0],
        config = _this8$getAnimationAn2[1];
      var delay = _this8.getDelay();
      var callback = _this8.callbackV;
      var initialValues = _this8.initialValues;
      return function (targetValues) {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateY: '0deg'
            }, {
              translateX: 0
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateY: delayFunction(delay, animation('-90deg', config))
            }, {
              translateX: delayFunction(delay, animation(-targetValues.currentWidth, config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this8;
  }
  (0, _inherits2.default)(FlipOutYLeft, _ComplexAnimationBuil8);
  return (0, _createClass2.default)(FlipOutYLeft, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipOutYLeft();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipOutYLeft.presetName = 'FlipOutYLeft';
var FlipOutXDown = exports.FlipOutXDown = function (_ComplexAnimationBuil9) {
  function FlipOutXDown() {
    var _this9;
    (0, _classCallCheck2.default)(this, FlipOutXDown);
    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
      args[_key9] = arguments[_key9];
    }
    _this9 = _callSuper(this, FlipOutXDown, [].concat(args));
    _this9.build = function () {
      var delayFunction = _this9.getDelayFunction();
      var _this9$getAnimationAn = _this9.getAnimationAndConfig(),
        _this9$getAnimationAn2 = (0, _slicedToArray2.default)(_this9$getAnimationAn, 2),
        animation = _this9$getAnimationAn2[0],
        config = _this9$getAnimationAn2[1];
      var delay = _this9.getDelay();
      var callback = _this9.callbackV;
      var initialValues = _this9.initialValues;
      return function (targetValues) {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateX: '0deg'
            }, {
              translateY: 0
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateX: delayFunction(delay, animation('-90deg', config))
            }, {
              translateY: delayFunction(delay, animation(targetValues.currentHeight, config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this9;
  }
  (0, _inherits2.default)(FlipOutXDown, _ComplexAnimationBuil9);
  return (0, _createClass2.default)(FlipOutXDown, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipOutXDown();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipOutXDown.presetName = 'FlipOutXDown';
var FlipOutYRight = exports.FlipOutYRight = function (_ComplexAnimationBuil10) {
  function FlipOutYRight() {
    var _this10;
    (0, _classCallCheck2.default)(this, FlipOutYRight);
    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
      args[_key10] = arguments[_key10];
    }
    _this10 = _callSuper(this, FlipOutYRight, [].concat(args));
    _this10.build = function () {
      var delayFunction = _this10.getDelayFunction();
      var _this10$getAnimationA = _this10.getAnimationAndConfig(),
        _this10$getAnimationA2 = (0, _slicedToArray2.default)(_this10$getAnimationA, 2),
        animation = _this10$getAnimationA2[0],
        config = _this10$getAnimationA2[1];
      var delay = _this10.getDelay();
      var callback = _this10.callbackV;
      var initialValues = _this10.initialValues;
      return function (targetValues) {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateY: '0deg'
            }, {
              translateX: 0
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateY: delayFunction(delay, animation('90deg', config))
            }, {
              translateX: delayFunction(delay, animation(targetValues.currentWidth, config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this10;
  }
  (0, _inherits2.default)(FlipOutYRight, _ComplexAnimationBuil10);
  return (0, _createClass2.default)(FlipOutYRight, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipOutYRight();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipOutYRight.presetName = 'FlipOutYRight';
var FlipOutEasyX = exports.FlipOutEasyX = function (_ComplexAnimationBuil11) {
  function FlipOutEasyX() {
    var _this11;
    (0, _classCallCheck2.default)(this, FlipOutEasyX);
    for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
      args[_key11] = arguments[_key11];
    }
    _this11 = _callSuper(this, FlipOutEasyX, [].concat(args));
    _this11.build = function () {
      var delayFunction = _this11.getDelayFunction();
      var _this11$getAnimationA = _this11.getAnimationAndConfig(),
        _this11$getAnimationA2 = (0, _slicedToArray2.default)(_this11$getAnimationA, 2),
        animation = _this11$getAnimationA2[0],
        config = _this11$getAnimationA2[1];
      var delay = _this11.getDelay();
      var callback = _this11.callbackV;
      var initialValues = _this11.initialValues;
      return function () {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateX: '0deg'
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateX: delayFunction(delay, animation('90deg', config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this11;
  }
  (0, _inherits2.default)(FlipOutEasyX, _ComplexAnimationBuil11);
  return (0, _createClass2.default)(FlipOutEasyX, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipOutEasyX();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipOutEasyX.presetName = 'FlipOutEasyX';
var FlipOutEasyY = exports.FlipOutEasyY = function (_ComplexAnimationBuil12) {
  function FlipOutEasyY() {
    var _this12;
    (0, _classCallCheck2.default)(this, FlipOutEasyY);
    for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
      args[_key12] = arguments[_key12];
    }
    _this12 = _callSuper(this, FlipOutEasyY, [].concat(args));
    _this12.build = function () {
      var delayFunction = _this12.getDelayFunction();
      var _this12$getAnimationA = _this12.getAnimationAndConfig(),
        _this12$getAnimationA2 = (0, _slicedToArray2.default)(_this12$getAnimationA, 2),
        animation = _this12$getAnimationA2[0],
        config = _this12$getAnimationA2[1];
      var delay = _this12.getDelay();
      var callback = _this12.callbackV;
      var initialValues = _this12.initialValues;
      return function () {
        'worklet';

        return {
          initialValues: Object.assign({
            transform: [{
              perspective: 500
            }, {
              rotateY: '0deg'
            }]
          }, initialValues),
          animations: {
            transform: [{
              perspective: delayFunction(delay, animation(500, config))
            }, {
              rotateY: delayFunction(delay, animation('90deg', config))
            }]
          },
          callback: callback
        };
      };
    };
    return _this12;
  }
  (0, _inherits2.default)(FlipOutEasyY, _ComplexAnimationBuil12);
  return (0, _createClass2.default)(FlipOutEasyY, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FlipOutEasyY();
    }
  }]);
}(_index.ComplexAnimationBuilder);
FlipOutEasyY.presetName = 'FlipOutEasyY';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,