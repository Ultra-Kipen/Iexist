2263a08a9a7f05011d94c34337abdb7f
_getJestObj().mock("../../src/hooks/useTheme", function () {
  return {
    useTheme: function useTheme() {
      return {
        theme: {
          colors: {
            background: '#ffffff'
          },
          dark: false
        }
      };
    }
  };
});
_getJestObj().mock("../../src/components/LoadingIndicator", function () {
  var React = require('react');
  var ReactNative = require('react-native');
  return {
    __esModule: true,
    default: function _default() {
      return React.createElement(ReactNative.View, {
        testID: 'loading-indicator'
      });
    }
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _reactNative2 = require("react-native");
var _FormLayout = _interopRequireDefault(require("../../src/layouts/FormLayout"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('FormLayout', function () {
  it('renders children correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD3FC \uB0B4\uC6A9"
        })
      })),
      getByText = _render.getByText;
    expect(getByText('폼 내용')).toBeTruthy();
  });
  it('shows loading indicator when loading is true', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
        loading: true,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD3FC \uB0B4\uC6A9"
        })
      })),
      getByTestId = _render2.getByTestId,
      queryByText = _render2.queryByText;
    expect(getByTestId('loading-indicator')).toBeTruthy();
    expect(queryByText('폼 내용')).toBeNull();
  });
  it('renders header and footer when provided', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
        header: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD3FC \uD5E4\uB354"
        }),
        footer: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD3FC \uD478\uD130"
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD3FC \uB0B4\uC6A9"
        })
      })),
      getByText = _render3.getByText;
    expect(getByText('폼 헤더')).toBeTruthy();
    expect(getByText('폼 푸터')).toBeTruthy();
    expect(getByText('폼 내용')).toBeTruthy();
  });
  it('calls onSubmit when form is submitted via footer button', function () {
    var onSubmitMock = jest.fn();
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
        onSubmit: onSubmitMock,
        footer: (0, _jsxRuntime.jsx)(_reactNative2.Button, {
          title: "\uC81C\uCD9C",
          onPress: onSubmitMock
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD3FC \uB0B4\uC6A9"
        })
      })),
      getByText = _render4.getByText;
    _reactNative.fireEvent.press(getByText('제출'));
    expect(onSubmitMock).toHaveBeenCalledTimes(1);
  });
  it('renders without KeyboardAvoidingView when avoidKeyboard is false', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
        avoidKeyboard: false,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD3FC \uB0B4\uC6A9"
        })
      })),
      getByText = _render5.getByText;
    expect(getByText('폼 내용')).toBeTruthy();
  });
  it('applies custom style when provided', function () {
    var customStyle = {
      backgroundColor: 'red'
    };
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
        style: customStyle,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD3FC \uB0B4\uC6A9"
        })
      })),
      getByText = _render6.getByText;
    expect(getByText('폼 내용')).toBeTruthy();
  });
  it('applies custom contentContainerStyle when provided', function () {
    var customContentContainerStyle = {
      padding: 20
    };
    var _render7 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
        contentContainerStyle: customContentContainerStyle,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uD3FC \uB0B4\uC6A9"
        })
      })),
      getByText = _render7.getByText;
    expect(getByText('폼 내용')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,