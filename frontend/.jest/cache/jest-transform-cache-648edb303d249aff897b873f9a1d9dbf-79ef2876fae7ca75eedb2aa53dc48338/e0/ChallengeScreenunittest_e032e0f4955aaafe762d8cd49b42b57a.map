{"version":3,"names":["_getJestObj","mock","Card","props","children","CardContent","CardActions","Title","Paragraph","Button","ProgressBar","useTheme","colors","primary","background","Provider","List","Item","title","Icon","_interopRequireDefault","require","_react","_reactNative","_ChallengeScreen","_jsxRuntime","_require","jest","mockConsoleLog","fn","console","log","describe","beforeEach","mockClear","test","_render","render","jsx","default","getByText","expect","toBeTruthy","_render2","_render3","_render4","_render5","_render6","getAllByText","joinButtons","toHaveLength","fireEvent","press","toHaveBeenCalledWith","toHaveBeenCalledTimes","_render7","progressTexts","length","toBe","_render8","toHaveBeenLastCalledWith","_render9","_render10"],"sources":["ChallengeScreen.unit.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport ChallengeScreen from '../../../src/screens/ChallengeScreen';\r\n\r\n// React Native Paper 모킹\r\njest.mock('react-native-paper', () => {\r\n  return {\r\n    Card: function Card(props) { return props.children; },\r\n    'Card.Content': function CardContent(props) { return props.children; },\r\n    'Card.Actions': function CardActions(props) { return props.children; },\r\n    Title: function Title(props) { return props.children; },\r\n    Paragraph: function Paragraph(props) { return props.children; },\r\n    Button: function Button(props) { return props.children; },\r\n    ProgressBar: function ProgressBar() { return null; },\r\n    useTheme: () => ({\r\n      colors: {\r\n        primary: '#6200ee',\r\n        background: '#ffffff',\r\n      },\r\n    }),\r\n    Provider: function Provider(props) { return props.children; },\r\n    List: {\r\n      Item: function Item(props) { return props.title; },\r\n      Icon: function Icon() { return null; },\r\n    },\r\n  };\r\n});\r\n\r\n// handleJoinChallenge 함수의 호출을 모니터링하기 위한 모킹\r\nconst mockConsoleLog = jest.fn();\r\nconsole.log = mockConsoleLog;\r\n\r\ndescribe('ChallengeScreen 단위 테스트', () => {\r\n  beforeEach(() => {\r\n    mockConsoleLog.mockClear();\r\n  });\r\n\r\n  test('각 챌린지의 제목이 올바르게 표시되는지 확인', () => {\r\n    const { getByText } = render(<ChallengeScreen />);\r\n    expect(getByText('7일간의 감사 일기')).toBeTruthy();\r\n    expect(getByText('30일 긍정 에너지 나누기')).toBeTruthy();\r\n    expect(getByText('21일 명상 습관 만들기')).toBeTruthy();\r\n  });\r\n  \r\n  test('각 챌린지의 설명이 올바르게 표시되는지 확인', () => {\r\n    const { getByText } = render(<ChallengeScreen />);\r\n    \r\n    expect(getByText('매일 감사한 일 3가지를 기록해보세요.')).toBeTruthy();\r\n    expect(getByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.')).toBeTruthy();\r\n    expect(getByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.')).toBeTruthy();\r\n  });\r\n  \r\n  test('각 챌린지의 참여자 수가 올바르게 표시되는지 확인', () => {\r\n    const { getByText } = render(<ChallengeScreen />);\r\n    \r\n    expect(getByText('참여자: 128명')).toBeTruthy();\r\n    expect(getByText('참여자: 56명')).toBeTruthy();\r\n    expect(getByText('참여자: 89명')).toBeTruthy();\r\n  });\r\n  \r\n  test('각 챌린지의 기간이 올바르게 표시되는지 확인', () => {\r\n    const { getByText } = render(<ChallengeScreen />);\r\n    \r\n    expect(getByText('기간: 7일')).toBeTruthy();\r\n    expect(getByText('기간: 30일')).toBeTruthy();\r\n    expect(getByText('기간: 21일')).toBeTruthy();\r\n  });\r\n  \r\n  test('각 챌린지의 진행률이 올바르게 표시되는지 확인', () => {\r\n    const { getByText } = render(<ChallengeScreen />);\r\n    \r\n    expect(getByText('40% 완료')).toBeTruthy();\r\n    expect(getByText('20% 완료')).toBeTruthy();\r\n    expect(getByText('60% 완료')).toBeTruthy();\r\n  });\r\n  \r\n  test('참여하기 버튼이 올바르게 동작하는지 확인', () => {\r\n    const { getAllByText } = render(<ChallengeScreen />);\r\n    \r\n    const joinButtons = getAllByText('참여하기');\r\n    expect(joinButtons).toHaveLength(3);\r\n    \r\n    // 첫 번째 버튼 클릭\r\n    fireEvent.press(joinButtons[0]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 1);\r\n    \r\n    // 두 번째 버튼 클릭\r\n    fireEvent.press(joinButtons[1]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 2);\r\n    \r\n    // 세 번째 버튼 클릭\r\n    fireEvent.press(joinButtons[2]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 3);\r\n    \r\n    expect(mockConsoleLog).toHaveBeenCalledTimes(3);\r\n  });\r\n  \r\n  test('진행률이 올바르게 표시되는지 확인', () => {\r\n    const { getAllByText } = render(<ChallengeScreen />);\r\n    \r\n    // 진행률 텍스트 확인\r\n    const progressTexts = [\r\n      getAllByText('40% 완료')[0],\r\n      getAllByText('20% 완료')[0],\r\n      getAllByText('60% 완료')[0]\r\n    ];\r\n    \r\n    expect(progressTexts.length).toBe(3);\r\n  });\r\n  \r\n  test('핸들러 함수가 올바른 챌린지 ID를 전달받는지 확인', () => {\r\n    const { getAllByText } = render(<ChallengeScreen />);\r\n    \r\n    const joinButtons = getAllByText('참여하기');\r\n    \r\n    // 각 버튼 클릭 시 올바른 ID가 전달되는지 확인\r\n    fireEvent.press(joinButtons[0]);\r\n    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 1);\r\n    \r\n    fireEvent.press(joinButtons[1]);\r\n    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 2);\r\n    \r\n    fireEvent.press(joinButtons[2]);\r\n    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 3);\r\n  });\r\n  \r\n  test('컴포넌트 렌더링 시 헤더 텍스트가 표시되는지 확인', () => {\r\n    const { getByText } = render(<ChallengeScreen />);\r\n    expect(getByText('현재 진행 중인 챌린지')).toBeTruthy();\r\n  });\r\n  \r\n  test('모든 챌린지 카드의 정보가 한 번에 표시되는지 확인', () => {\r\n    const { getByText } = render(<ChallengeScreen />);\r\n    \r\n    // 모든 챌린지 정보 확인\r\n    // 첫 번째 챌린지\r\n    expect(getByText('7일간의 감사 일기')).toBeTruthy();\r\n    expect(getByText('매일 감사한 일 3가지를 기록해보세요.')).toBeTruthy();\r\n    expect(getByText('40% 완료')).toBeTruthy();\r\n    expect(getByText('참여자: 128명')).toBeTruthy();\r\n    expect(getByText('기간: 7일')).toBeTruthy();\r\n    \r\n    // 두 번째 챌린지\r\n    expect(getByText('30일 긍정 에너지 나누기')).toBeTruthy();\r\n    expect(getByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.')).toBeTruthy();\r\n    expect(getByText('20% 완료')).toBeTruthy();\r\n    expect(getByText('참여자: 56명')).toBeTruthy();\r\n    expect(getByText('기간: 30일')).toBeTruthy();\r\n    \r\n    // 세 번째 챌린지\r\n    expect(getByText('21일 명상 습관 만들기')).toBeTruthy();\r\n    expect(getByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.')).toBeTruthy();\r\n    expect(getByText('60% 완료')).toBeTruthy();\r\n    expect(getByText('참여자: 89명')).toBeTruthy();\r\n    expect(getByText('기간: 21일')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}