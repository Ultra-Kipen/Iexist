{"version":3,"names":["_getJestObj","mock","getNotifications","jest","fn","markAsRead","markAllAsRead","useNavigation","navigate","goBack","alert","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_NotificationScreen","_reactNative2","_notificationService","_jsxRuntime","_require","mockNotifications","id","user_id","content","notification_type","related_id","is_read","created_at","Date","toISOString","now","describe","beforeEach","clearAllMocks","notificationService","mockResolvedValue","data","pagination","page","limit","total","success","it","_render","render","jsx","default","getByText","expect","toBeTruthy","_render2","waitFor","_render3","_render4","notification","fireEvent","press","toHaveBeenCalledWith","_render5","markAllButton","toHaveBeenCalled","Alert","mockRejectedValue","Error","_render6","_render7","markAllReadButton"],"sources":["NotificationScreen.test.tsx"],"sourcesContent":["// __tests__/screens/NotificationScreen.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\r\nimport NotificationScreen from '../../src/screens/NotificationScreen';\r\nimport { Alert } from 'react-native';\r\n\r\n// API 서비스 모킹\r\njest.mock('../../src/services/api/notificationService', () => ({\r\n  getNotifications: jest.fn(),\r\n  markAsRead: jest.fn(),\r\n  markAllAsRead: jest.fn(),\r\n}));\r\n\r\n// 모듈 모킹\r\njest.mock('@react-navigation/native', () => ({\r\n  useNavigation: () => ({\r\n    navigate: jest.fn(),\r\n    goBack: jest.fn(),\r\n  }),\r\n}));\r\n\r\n// Alert 모킹\r\njest.mock('react-native/Libraries/Alert/Alert', () => ({\r\n  alert: jest.fn(),\r\n}));\r\n\r\n// 컴포넌트 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => 'LoadingIndicator');\r\njest.mock('../../src/components/Button', () => 'Button');\r\n\r\n// 테스트에 필요한 모듈 가져오기\r\nimport notificationService from '../../src/services/api/notificationService';\r\n\r\n// 테스트 데이터\r\nconst mockNotifications = [\r\n  {\r\n    id: 1,\r\n    user_id: 101,\r\n    content: '홍길동님이 회원님의 게시물에 좋아요를 눌렀습니다.',\r\n    notification_type: 'like',\r\n    related_id: 101,\r\n    is_read: false,\r\n    created_at: new Date().toISOString(),\r\n  },\r\n  {\r\n    id: 2,\r\n    user_id: 102,\r\n    content: '김철수님이 회원님의 게시물에 댓글을 남겼습니다.',\r\n    notification_type: 'comment',\r\n    related_id: 102,\r\n    is_read: true,\r\n    created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), // 1일 전\r\n  },\r\n  {\r\n    id: 3,\r\n    user_id: 103,\r\n    content: '행복 챌린지가 시작되었습니다.',\r\n    notification_type: 'challenge',\r\n    related_id: 5,\r\n    is_read: false,\r\n    created_at: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(), // 3일 전\r\n  },\r\n];\r\n\r\ndescribe('NotificationScreen', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // API 응답 모킹\r\n    (notificationService.getNotifications as jest.Mock).mockResolvedValue({\r\n      data: mockNotifications,\r\n      pagination: { page: 1, limit: 20, total: 3 }\r\n    });\r\n    \r\n    (notificationService.markAsRead as jest.Mock).mockResolvedValue({ success: true });\r\n    (notificationService.markAllAsRead as jest.Mock).mockResolvedValue({ success: true });\r\n  });\r\n\r\n  it('renders loading state initially', () => {\r\n    const { getByText } = render(<NotificationScreen />);\r\n    expect(getByText('알림 로딩 중...')).toBeTruthy();\r\n  });\r\n\r\n  it('renders notifications list correctly', async () => {\r\n    const { getByText } = render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      expect(getByText('알림')).toBeTruthy();\r\n      expect(getByText('홍길동님이 회원님의 게시물에 좋아요를 눌렀습니다.')).toBeTruthy();\r\n      expect(getByText('김철수님이 회원님의 게시물에 댓글을 남겼습니다.')).toBeTruthy();\r\n      expect(getByText('행복 챌린지가 시작되었습니다.')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  it('shows empty state when no notifications', async () => {\r\n    (notificationService.getNotifications as jest.Mock).mockResolvedValue({\r\n      data: [],\r\n      pagination: { page: 1, limit: 20, total: 0 }\r\n    });\r\n    \r\n    const { getByText } = render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      expect(getByText('알림이 없습니다.')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  it('marks notification as read when clicked', async () => {\r\n    const { getByText } = render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      const notification = getByText('홍길동님이 회원님의 게시물에 좋아요를 눌렀습니다.');\r\n      fireEvent.press(notification);\r\n    });\r\n    \r\n    expect(notificationService.markAsRead).toHaveBeenCalledWith(1);\r\n  });\r\n\r\n  it('marks all notifications as read', async () => {\r\n    const { getByText } = render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      const markAllButton = getByText('모두 읽음');\r\n      fireEvent.press(markAllButton);\r\n    });\r\n    \r\n    expect(notificationService.markAllAsRead).toHaveBeenCalled();\r\n    expect(Alert.alert).toHaveBeenCalledWith('성공', '모든 알림이 읽음 처리되었습니다.');\r\n  });\r\n\r\n  it('handles error during loading', async () => {\r\n    (notificationService.getNotifications as jest.Mock).mockRejectedValue(new Error('네트워크 오류'));\r\n    \r\n    const { getByText } = render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      expect(getByText('알림을 불러오는 중 오류가 발생했습니다.')).toBeTruthy();\r\n      expect(getByText('다시 시도')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  it('handles refresh functionality', async () => {\r\n    const { getByText } = render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      const markAllReadButton = getByText('모두 읽음');\r\n      fireEvent.press(markAllReadButton);\r\n    });\r\n    \r\n    expect(notificationService.markAllAsRead).toHaveBeenCalled();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}