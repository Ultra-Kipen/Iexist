ffba28713f991fe453b24993911d4e81
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _native = require("@react-navigation/native");
var _NotificationContext = require("../contexts/NotificationContext");
var _MaterialCommunityIcons = _interopRequireDefault(require("react-native-vector-icons/MaterialCommunityIcons"));
var _jsxRuntime = require("react/jsx-runtime");
var NotificationItem = function NotificationItem(_ref) {
  var notification = _ref.notification,
    onPress = _ref.onPress;
  var navigation = (0, _native.useNavigation)();
  var _useNotification = (0, _NotificationContext.useNotification)(),
    markAsRead = _useNotification.markAsRead,
    deleteNotification = _useNotification.deleteNotification;
  var getIcon = function getIcon() {
    switch (notification.notification_type) {
      case 'like':
        return 'heart-outline';
      case 'comment':
        return 'comment-outline';
      case 'challenge':
        return 'trophy-outline';
      case 'system':
        return 'bell-outline';
      default:
        return 'bell-outline';
    }
  };
  var formattedTime = formatRelativeTime(notification.created_at);
  var handlePress = function () {
    var _ref2 = (0, _asyncToGenerator2.default)(function* () {
      if (onPress) {
        onPress();
      }
      if (!notification.is_read) {
        yield markAsRead(notification.id);
      }
      if (notification.related_id) {
        switch (notification.notification_type) {
          case 'like':
          case 'comment':
            navigation.navigate('PostDetailScreen', {
              postId: notification.related_id
            });
            break;
          case 'challenge':
            navigation.navigate('ChallengeDetailScreen', {
              challengeId: notification.related_id
            });
            break;
        }
      }
    });
    return function handlePress() {
      return _ref2.apply(this, arguments);
    };
  }();
  var confirmDelete = function confirmDelete() {
    _reactNative.Alert.alert('알림 삭제', '이 알림을 삭제하시겠습니까?', [{
      text: '취소',
      style: 'cancel'
    }, {
      text: '삭제',
      onPress: function onPress() {
        return deleteNotification(notification.id);
      },
      style: 'destructive'
    }]);
  };
  return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
    testID: "notification-item",
    style: [styles.container, !notification.is_read && styles.unread],
    onPress: handlePress,
    onLongPress: confirmDelete,
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.iconContainer,
      children: (0, _jsxRuntime.jsx)(_MaterialCommunityIcons.default, {
        name: getIcon(),
        size: 24,
        color: "#4A6572"
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.contentContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.content,
        children: notification.content
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.time,
        children: formattedTime
      })]
    }), !notification.is_read && (0, _jsxRuntime.jsx)(_reactNative.View, {
      testID: "unread-indicator",
      style: styles.unreadDot
    })]
  });
};
var formatRelativeTime = function formatRelativeTime(dateString) {
  var now = new Date();
  var date = new Date(dateString);
  var diffMs = now.getTime() - date.getTime();
  var diffMins = Math.floor(diffMs / (1000 * 60));
  if (diffMins < 1) return '방금 전';
  if (diffMins < 60) return `${diffMins}분 전`;
  var diffHours = Math.floor(diffMins / 60);
  if (diffHours < 24) return `${diffHours}시간 전`;
  var diffDays = Math.floor(diffHours / 24);
  if (diffDays < 7) return `${diffDays}일 전`;
  var diffWeeks = Math.floor(diffDays / 7);
  if (diffWeeks < 4) return `${diffWeeks}주 전`;
  var diffMonths = Math.floor(diffDays / 30);
  if (diffMonths < 12) return `${diffMonths}개월 전`;
  var diffYears = Math.floor(diffDays / 365);
  return `${diffYears}년 전`;
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    padding: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#E1E8ED',
    backgroundColor: 'white'
  },
  unread: {
    backgroundColor: '#F5F8FA'
  },
  iconContainer: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: '#E8EDF0',
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 12
  },
  contentContainer: {
    flex: 1,
    justifyContent: 'center'
  },
  content: {
    fontSize: 14,
    color: '#14171A',
    marginBottom: 4
  },
  time: {
    fontSize: 12,
    color: '#657786'
  },
  unreadDot: {
    width: 8,
    height: 8,
    borderRadius: 4,
    backgroundColor: '#1DA1F2',
    alignSelf: 'center',
    marginLeft: 8
  }
});
var _default = exports.default = NotificationItem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,