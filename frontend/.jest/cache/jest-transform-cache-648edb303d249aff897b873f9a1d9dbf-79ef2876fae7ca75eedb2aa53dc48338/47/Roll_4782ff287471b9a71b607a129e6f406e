98d16e3b46facdee5d5be49d8e4c9e88
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RollOutRight = exports.RollOutLeft = exports.RollInRight = exports.RollInLeft = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _index = require("../animationBuilder/index.js");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var RollInLeft = exports.RollInLeft = function (_ComplexAnimationBuil) {
  function RollInLeft() {
    var _this;
    (0, _classCallCheck2.default)(this, RollInLeft);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, RollInLeft, [].concat(args));
    _this.build = function () {
      var delayFunction = _this.getDelayFunction();
      var _this$getAnimationAnd = _this.getAnimationAndConfig(),
        _this$getAnimationAnd2 = (0, _slicedToArray2.default)(_this$getAnimationAnd, 2),
        animation = _this$getAnimationAnd2[0],
        config = _this$getAnimationAnd2[1];
      var delay = _this.getDelay();
      var callback = _this.callbackV;
      var initialValues = _this.initialValues;
      return function (values) {
        'worklet';

        return {
          animations: {
            transform: [{
              translateX: delayFunction(delay, animation(0, config))
            }, {
              rotate: delayFunction(delay, animation('0deg', config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              translateX: -values.windowWidth
            }, {
              rotate: '-180deg'
            }]
          }, initialValues),
          callback: callback
        };
      };
    };
    return _this;
  }
  (0, _inherits2.default)(RollInLeft, _ComplexAnimationBuil);
  return (0, _createClass2.default)(RollInLeft, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new RollInLeft();
    }
  }]);
}(_index.ComplexAnimationBuilder);
RollInLeft.presetName = 'RollInLeft';
var RollInRight = exports.RollInRight = function (_ComplexAnimationBuil2) {
  function RollInRight() {
    var _this2;
    (0, _classCallCheck2.default)(this, RollInRight);
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    _this2 = _callSuper(this, RollInRight, [].concat(args));
    _this2.build = function () {
      var delayFunction = _this2.getDelayFunction();
      var _this2$getAnimationAn = _this2.getAnimationAndConfig(),
        _this2$getAnimationAn2 = (0, _slicedToArray2.default)(_this2$getAnimationAn, 2),
        animation = _this2$getAnimationAn2[0],
        config = _this2$getAnimationAn2[1];
      var delay = _this2.getDelay();
      var callback = _this2.callbackV;
      var initialValues = _this2.initialValues;
      return function (values) {
        'worklet';

        return {
          animations: {
            transform: [{
              translateX: delayFunction(delay, animation(0, config))
            }, {
              rotate: delayFunction(delay, animation('0deg', config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              translateX: values.windowWidth
            }, {
              rotate: '180deg'
            }]
          }, initialValues),
          callback: callback
        };
      };
    };
    return _this2;
  }
  (0, _inherits2.default)(RollInRight, _ComplexAnimationBuil2);
  return (0, _createClass2.default)(RollInRight, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new RollInRight();
    }
  }]);
}(_index.ComplexAnimationBuilder);
RollInRight.presetName = 'RollInRight';
var RollOutLeft = exports.RollOutLeft = function (_ComplexAnimationBuil3) {
  function RollOutLeft() {
    var _this3;
    (0, _classCallCheck2.default)(this, RollOutLeft);
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    _this3 = _callSuper(this, RollOutLeft, [].concat(args));
    _this3.build = function () {
      var delayFunction = _this3.getDelayFunction();
      var _this3$getAnimationAn = _this3.getAnimationAndConfig(),
        _this3$getAnimationAn2 = (0, _slicedToArray2.default)(_this3$getAnimationAn, 2),
        animation = _this3$getAnimationAn2[0],
        config = _this3$getAnimationAn2[1];
      var delay = _this3.getDelay();
      var callback = _this3.callbackV;
      var initialValues = _this3.initialValues;
      return function (values) {
        'worklet';

        return {
          animations: {
            transform: [{
              translateX: delayFunction(delay, animation(-values.windowWidth, config))
            }, {
              rotate: delayFunction(delay, animation('-180deg', config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              translateX: 0
            }, {
              rotate: '0deg'
            }]
          }, initialValues),
          callback: callback
        };
      };
    };
    return _this3;
  }
  (0, _inherits2.default)(RollOutLeft, _ComplexAnimationBuil3);
  return (0, _createClass2.default)(RollOutLeft, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new RollOutLeft();
    }
  }]);
}(_index.ComplexAnimationBuilder);
RollOutLeft.presetName = 'RollOutLeft';
var RollOutRight = exports.RollOutRight = function (_ComplexAnimationBuil4) {
  function RollOutRight() {
    var _this4;
    (0, _classCallCheck2.default)(this, RollOutRight);
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    _this4 = _callSuper(this, RollOutRight, [].concat(args));
    _this4.build = function () {
      var delayFunction = _this4.getDelayFunction();
      var _this4$getAnimationAn = _this4.getAnimationAndConfig(),
        _this4$getAnimationAn2 = (0, _slicedToArray2.default)(_this4$getAnimationAn, 2),
        animation = _this4$getAnimationAn2[0],
        config = _this4$getAnimationAn2[1];
      var delay = _this4.getDelay();
      var callback = _this4.callbackV;
      var initialValues = _this4.initialValues;
      return function (values) {
        'worklet';

        return {
          animations: {
            transform: [{
              translateX: delayFunction(delay, animation(values.windowWidth, config))
            }, {
              rotate: delayFunction(delay, animation('180deg', config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              translateX: 0
            }, {
              rotate: '0deg'
            }]
          }, initialValues),
          callback: callback
        };
      };
    };
    return _this4;
  }
  (0, _inherits2.default)(RollOutRight, _ComplexAnimationBuil4);
  return (0, _createClass2.default)(RollOutRight, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new RollOutRight();
    }
  }]);
}(_index.ComplexAnimationBuilder);
RollOutRight.presetName = 'RollOutRight';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,