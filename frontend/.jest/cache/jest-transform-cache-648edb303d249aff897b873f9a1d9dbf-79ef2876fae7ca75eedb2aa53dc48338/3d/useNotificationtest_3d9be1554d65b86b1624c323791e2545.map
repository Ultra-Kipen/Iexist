{"version":3,"names":["_getJestObj","mock","useNotification","jest","fn","getNotifications","_interopRequireDefault","require","_asyncToGenerator2","_reactHooks","_useNotification","_NotificationContext","_notificationService","_require","describe","mockNotifications","id","content","is_read","notification_type","created_at","mockContextFunctions","notifications","unreadCount","fetchNotifications","mockResolvedValue","undefined","markAsRead","markAllAsRead","deleteNotification","beforeEach","clearAllMocks","mockReturnValue","notificationService","data","total","unread","it","_renderHook","renderHook","useNotificationManager","result","expect","current","toEqual","toBe","loading","error","toBeNull","default","_renderHook2","responseData","act","toHaveBeenCalledWith","page","limit","toHaveBeenCalled","testError","Error","mockRejectedValueOnce","_renderHook3","_renderHook4","_renderHook5","_renderHook6"],"sources":["useNotification.test.ts"],"sourcesContent":["// __tests__/hooks/useNotification.test.ts\r\nimport { renderHook, act } from '@testing-library/react-hooks';\r\nimport { useNotificationManager } from '../../src/hooks/useNotification';\r\nimport { useNotification } from '../../src/contexts/NotificationContext';\r\nimport notificationService from '../../src/services/api/notificationService';\r\n\r\n// 모킹\r\njest.mock('../../src/contexts/NotificationContext', () => ({\r\n  useNotification: jest.fn(),\r\n}));\r\n\r\njest.mock('../../src/services/api/notificationService', () => ({\r\n  getNotifications: jest.fn(),\r\n}));\r\n\r\ndescribe('useNotificationManager', () => {\r\n  // 기본 모킹 값 설정\r\n  const mockNotifications = [\r\n    { id: 1, content: 'Test notification 1', is_read: false, notification_type: 'system', created_at: '2023-01-01' },\r\n    { id: 2, content: 'Test notification 2', is_read: true, notification_type: 'like', created_at: '2023-01-02' },\r\n  ];\r\n  \r\n  const mockContextFunctions = {\r\n    notifications: mockNotifications,\r\n    unreadCount: 1,\r\n    fetchNotifications: jest.fn().mockResolvedValue(undefined),\r\n    markAsRead: jest.fn(),\r\n    markAllAsRead: jest.fn(),\r\n    deleteNotification: jest.fn(),\r\n  };\r\n  \r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // 컨텍스트 훅 모킹\r\n    (useNotification as jest.Mock).mockReturnValue(mockContextFunctions);\r\n    \r\n    // 서비스 함수 모킹\r\n    (notificationService.getNotifications as jest.Mock).mockResolvedValue({\r\n      data: {\r\n        notifications: mockNotifications,\r\n        total: 2,\r\n        unread: 1,\r\n      },\r\n    });\r\n  });\r\n\r\n  it('should return context values and local state', () => {\r\n    const { result } = renderHook(() => useNotificationManager());\r\n    \r\n    // 초기 상태 확인\r\n    expect(result.current.notifications).toEqual(mockNotifications);\r\n    expect(result.current.unreadCount).toBe(1);\r\n    expect(result.current.loading).toBe(false);\r\n    expect(result.current.error).toBeNull();\r\n  });\r\n\r\n  it('should fetch notifications with pagination', async () => {\r\n    const { result } = renderHook(() => useNotificationManager());\r\n    \r\n    let responseData: any;\r\n    \r\n    await act(async () => {\r\n      responseData = await result.current.fetchNotifications(1, 10);\r\n    });\r\n    \r\n    // API 호출 확인\r\n    expect(notificationService.getNotifications).toHaveBeenCalledWith({ page: 1, limit: 10 });\r\n    \r\n    // 컨텍스트 업데이트 함수 호출 확인\r\n    expect(mockContextFunctions.fetchNotifications).toHaveBeenCalled();\r\n    \r\n    // 반환값 확인\r\n    expect(responseData).toEqual({\r\n      notifications: mockNotifications,\r\n      total: 2,\r\n      unread: 1,\r\n    });\r\n  });\r\n\r\n  it('should handle error during fetch', async () => {\r\n    // 에러 발생 모킹\r\n    const testError = new Error('API error');\r\n    (notificationService.getNotifications as jest.Mock).mockRejectedValueOnce(testError);\r\n    \r\n    const { result } = renderHook(() => useNotificationManager());\r\n    \r\n    // 에러 처리 테스트\r\n    await act(async () => {\r\n      try {\r\n        await result.current.fetchNotifications();\r\n      } catch (error) {\r\n        // 에러 무시 - 훅 내부에서 처리됨\r\n      }\r\n    });\r\n    \r\n    // 에러 상태 확인 - loading은 완료되고 error 상태가 설정되어야 함\r\n    expect(result.current.loading).toBe(false);\r\n    expect(result.current.error).toBe('API error');\r\n  });\r\n\r\n  it('should handle non-Error objects in error case', async () => {\r\n    // 문자열 에러 모킹\r\n    (notificationService.getNotifications as jest.Mock).mockRejectedValueOnce('String error');\r\n    \r\n    const { result } = renderHook(() => useNotificationManager());\r\n    \r\n    // 에러 처리 테스트\r\n    await act(async () => {\r\n      try {\r\n        await result.current.fetchNotifications();\r\n      } catch (error) {\r\n        // 에러 무시\r\n      }\r\n    });\r\n    \r\n    // 기본 에러 메시지 사용 확인\r\n    expect(result.current.error).toBe('알림을 불러오는 중 오류가 발생했습니다.');\r\n  });\r\n\r\n  it('should pass through context functions', () => {\r\n    const { result } = renderHook(() => useNotificationManager());\r\n    \r\n    // 컨텍스트 함수 전달 확인\r\n    result.current.markAsRead(1);\r\n    expect(mockContextFunctions.markAsRead).toHaveBeenCalledWith(1);\r\n    \r\n    result.current.markAllAsRead();\r\n    expect(mockContextFunctions.markAllAsRead).toHaveBeenCalled();\r\n    \r\n    result.current.deleteNotification(1);\r\n    expect(mockContextFunctions.deleteNotification).toHaveBeenCalledWith(1);\r\n  });\r\n\r\n  it('should handle fetch with default pagination parameters', async () => {\r\n    const { result } = renderHook(() => useNotificationManager());\r\n    \r\n    await act(async () => {\r\n      await result.current.fetchNotifications();\r\n    });\r\n    \r\n    // 기본 파라미터로 호출 확인\r\n    expect(notificationService.getNotifications).toHaveBeenCalledWith({ page: undefined, limit: undefined });\r\n    \r\n    // 컨텍스트 함수 호출 확인\r\n    expect(mockContextFunctions.fetchNotifications).toHaveBeenCalled();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}