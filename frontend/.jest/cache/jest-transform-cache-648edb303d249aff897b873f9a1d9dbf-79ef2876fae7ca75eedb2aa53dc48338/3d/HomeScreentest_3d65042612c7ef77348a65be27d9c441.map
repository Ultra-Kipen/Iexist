{"version":3,"names":["_getJestObj","mock","interceptors","request","use","jest","fn","response","get","post","put","delete","getItem","Promise","resolve","setItem","removeItem","useAuth","user","username","nickname","isAuthenticated","login","logout","useEmotion","emotions","emotion_id","name","icon","selectedEmotions","selectEmotion","logEmotion","_interopRequireDefault","require","_react","_reactNative","_HomeScreen","_jsxRuntime","_require","describe","it","_render","render","jsx","default","getByTestId","getByText","homeContainer","expect","toBeTruthy","_render2","emotionSurface","_render3","getByPlaceholderText","postInput","fireEvent","changeText","shareButton","press"],"sources":["HomeScreen.test.tsx"],"sourcesContent":["// __tests__/screens/HomeScreen.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport HomeScreen from '../../src/screens/HomeScreen';\r\n\r\n// Mock the external modules\r\njest.mock('../../src/services/api/client', () => ({\r\n  interceptors: {\r\n    request: {\r\n      use: jest.fn()\r\n    },\r\n    response: {\r\n      use: jest.fn()\r\n    }\r\n  },\r\n  get: jest.fn(),\r\n  post: jest.fn(),\r\n  put: jest.fn(),\r\n  delete: jest.fn()\r\n}));\r\n\r\n// Mock AsyncStorage\r\njest.mock('@react-native-async-storage/async-storage', () => ({\r\n  getItem: jest.fn(() => Promise.resolve('test_token')),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn()\r\n}));\r\n\r\n// Mock contexts\r\njest.mock('../../src/contexts/AuthContext', () => ({\r\n  useAuth: () => ({\r\n    user: { username: 'testuser', nickname: 'Test User' },\r\n    isAuthenticated: true,\r\n    login: jest.fn(),\r\n    logout: jest.fn()\r\n  })\r\n}));\r\n\r\njest.mock('../../src/contexts/EmotionContext', () => ({\r\n  useEmotion: () => ({\r\n    emotions: [\r\n      { emotion_id: 1, name: '행복', icon: 'emoticon-happy-outline' },\r\n      { emotion_id: 2, name: '감사', icon: 'hand-heart' }\r\n    ],\r\n    selectedEmotions: [],\r\n    selectEmotion: jest.fn(),\r\n    logEmotion: jest.fn()\r\n  })\r\n}));\r\n\r\n// Mock MaterialCommunityIcons\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'MaterialCommunityIcons');\r\n\r\ndescribe('HomeScreen', () => {\r\n  it('renders correctly when authenticated', () => {\r\n    const { getByTestId, getByText } = render(<HomeScreen />);\r\n    \r\n    // Check if the home screen container is rendered\r\n    const homeContainer = getByTestId('home-screen-container');\r\n    expect(homeContainer).toBeTruthy();\r\n    \r\n    // Check welcome message\r\n    expect(getByText('환영합니다, Test User님')).toBeTruthy();\r\n  });\r\n\r\n  it('displays the emotion selector', () => {\r\n    const { getByTestId } = render(<HomeScreen />);\r\n    \r\n    const emotionSurface = getByTestId('emotion-surface');\r\n    expect(emotionSurface).toBeTruthy();\r\n  });\r\n\r\n  it('allows users to create a post', () => {\r\n    const { getByTestId, getByPlaceholderText } = render(<HomeScreen />);\r\n    \r\n    // Find and interact with the post input\r\n    const postInput = getByPlaceholderText('나의 오늘은...');\r\n    fireEvent.changeText(postInput, '테스트 게시물 내용');\r\n    \r\n    // Find and press the submit button\r\n    const shareButton = getByTestId('share-post-button');\r\n    fireEvent.press(shareButton);\r\n    \r\n    // Additional assertions could be added here to check post submission\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}