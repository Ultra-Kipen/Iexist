{"version":3,"names":["_getJestObj","mock","Platform","OS","select","jest","fn","obj","ios","default","Keyboard","dismiss","StyleSheet","create","styles","Text","_ref","children","View","_ref2","testID","type","props","ScrollView","_ref3","TouchableWithoutFeedback","_ref4","onPress","KeyboardAvoidingView","_ref5","ImageBackground","_ref6","Image","_ref7","StatusBar","_ref8","SafeAreaView","_ref9","useTheme","theme","colors","background","dark","LoadingIndicator","_interopRequireDefault","require","_react","_reactNative","_AuthLayout","_reactNative2","_jsxRuntime","_require","describe","it","_render","render","jsx","queryByText","expect","toBeTruthy","_render2","loading","getByTestId","toBeNull","_render3","title","footer","getByText","_render4","imageBackground","_render5","jsxs","_render6","queryByTestId","_render7"],"sources":["AuthLayout.test.tsx"],"sourcesContent":["// tests/layouts/AuthLayout.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport AuthLayout from '../../src/layouts/AuthLayout';\r\n\r\n// React Native 컴포넌트를 명시적으로 import\r\nimport { Text, View } from 'react-native';\r\n\r\n// React Native 모킹\r\njest.mock('react-native', () => {\r\n  return {\r\n    Platform: { OS: 'ios', select: jest.fn(obj => obj.ios || obj.default) },\r\n    Keyboard: { dismiss: jest.fn() },\r\n    StyleSheet: { create: jest.fn(styles => styles) },\r\n    Text: ({ children }) => children,\r\n    View: ({ children, testID }) => ({ type: 'view', props: { testID, children } }),\r\n    ScrollView: ({ children, testID }) => ({ type: 'scrollview', props: { testID, children } }),\r\n    TouchableWithoutFeedback: ({ children, onPress }) => ({ type: 'touchablewithoutfeedback', props: { onPress, children } }),\r\n    KeyboardAvoidingView: ({ children, testID }) => ({ type: 'keyboardavoidingview', props: { testID, children } }),\r\n    ImageBackground: ({ children, testID }) => ({ type: 'imagebackground', props: { testID, children } }),\r\n    Image: ({ testID }) => ({ type: 'image', props: { testID } }),\r\n    StatusBar: ({ testID }) => ({ type: 'statusbar', props: { testID } })\r\n  };\r\n});\r\n\r\n// SafeAreaView 모킹\r\njest.mock('react-native-safe-area-context', () => ({\r\n  SafeAreaView: ({ children, testID }) => ({ type: 'safeareaview', props: { testID, children } })\r\n}));\r\n\r\n// useTheme 모킹\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#ffffff',\r\n      },\r\n      dark: false,\r\n    },\r\n  }),\r\n}));\r\n\r\n// LoadingIndicator 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => {\r\n  return function LoadingIndicator() {\r\n    return { type: 'loadingindicator', props: { testID: 'loading-indicator' } };\r\n  };\r\n});\r\n\r\n// 이미지 모킹\r\njest.mock('../../src/assets/images/logo.png', () => 'logo.png');\r\njest.mock('../../src/assets/images/auth-background.jpg', () => 'background.jpg');\r\n\r\ndescribe('AuthLayout', () => {\r\n  // 기본 렌더링 테스트\r\n  it('renders children correctly', () => {\r\n    const { queryByText } = render(\r\n      <AuthLayout>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(queryByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  // 로딩 상태 테스트\r\n  it('shows loading indicator when loading is true', () => {\r\n    const { getByTestId, queryByText } = render(\r\n      <AuthLayout loading={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('loading-indicator')).toBeTruthy();\r\n    expect(queryByText('인증 내용')).toBeNull();\r\n  });\r\n  \r\n  // 제목 및 푸터 테스트\r\n  it('renders title and footer when provided', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout\r\n        title={<Text>인증 제목</Text>}\r\n        footer={<Text>인증 푸터</Text>}\r\n      >\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 제목')).toBeTruthy();\r\n    expect(getByText('인증 푸터')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  // 기본 배경 테스트\r\n  it('renders with default background when imageBackground is false', () => {\r\n    const { getByTestId, getByText } = render(\r\n      <AuthLayout imageBackground={false}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('auth-layout')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n\r\n  it('handles complex children correctly', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout>\r\n        <View>\r\n          <Text>첫 번째 자식</Text>\r\n          <Text>두 번째 자식</Text>\r\n          <View>\r\n            <Text>중첩된 자식</Text>\r\n          </View>\r\n        </View>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('첫 번째 자식')).toBeTruthy();\r\n    expect(getByText('두 번째 자식')).toBeTruthy();\r\n    expect(getByText('중첩된 자식')).toBeTruthy();\r\n  });\r\n  \r\n  it('renders correctly with only title', () => {\r\n    const { getByText, queryByTestId } = render(\r\n      <AuthLayout title={<Text>인증 제목만</Text>}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 제목만')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n    expect(queryByTestId('footer-container')).toBeNull();\r\n  });\r\n  \r\n  it('renders correctly with only footer', () => {\r\n    const { getByText, queryByTestId } = render(\r\n      <AuthLayout footer={<Text>인증 푸터만</Text>}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 푸터만')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n    expect(queryByTestId('title-container')).toBeNull();\r\n  });\r\n});"],"mappings":"AASAA,WAAA,GAAKC,IAAI,CAAC,cAAc,EAAE,YAAM;EAC9B,OAAO;IACLC,QAAQ,EAAE;MAAEC,EAAE,EAAE,KAAK;MAAEC,MAAM,EAAEC,IAAI,CAACC,EAAE,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,GAAG,IAAID,GAAG,CAACE,OAAO;MAAA;IAAE,CAAC;IACvEC,QAAQ,EAAE;MAAEC,OAAO,EAAEN,IAAI,CAACC,EAAE,CAAC;IAAE,CAAC;IAChCM,UAAU,EAAE;MAAEC,MAAM,EAAER,IAAI,CAACC,EAAE,CAAC,UAAAQ,MAAM;QAAA,OAAIA,MAAM;MAAA;IAAE,CAAC;IACjDC,IAAI,EAAE,SAANA,IAAIA,CAAAC,IAAA;MAAA,IAAKC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;MAAA,OAAOA,QAAQ;IAAA;IAChCC,IAAI,EAAE,SAANA,IAAIA,CAAAC,KAAA;MAAA,IAAKF,QAAQ,GAAAE,KAAA,CAARF,QAAQ;QAAEG,MAAM,GAAAD,KAAA,CAANC,MAAM;MAAA,OAAQ;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE;UAAEF,MAAM,EAANA,MAAM;UAAEH,QAAQ,EAARA;QAAS;MAAE,CAAC;IAAA,CAAC;IAC/EM,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA;MAAA,IAAKP,QAAQ,GAAAO,KAAA,CAARP,QAAQ;QAAEG,MAAM,GAAAI,KAAA,CAANJ,MAAM;MAAA,OAAQ;QAAEC,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE;UAAEF,MAAM,EAANA,MAAM;UAAEH,QAAQ,EAARA;QAAS;MAAE,CAAC;IAAA,CAAC;IAC3FQ,wBAAwB,EAAE,SAA1BA,wBAAwBA,CAAAC,KAAA;MAAA,IAAKT,QAAQ,GAAAS,KAAA,CAART,QAAQ;QAAEU,OAAO,GAAAD,KAAA,CAAPC,OAAO;MAAA,OAAQ;QAAEN,IAAI,EAAE,0BAA0B;QAAEC,KAAK,EAAE;UAAEK,OAAO,EAAPA,OAAO;UAAEV,QAAQ,EAARA;QAAS;MAAE,CAAC;IAAA,CAAC;IACzHW,oBAAoB,EAAE,SAAtBA,oBAAoBA,CAAAC,KAAA;MAAA,IAAKZ,QAAQ,GAAAY,KAAA,CAARZ,QAAQ;QAAEG,MAAM,GAAAS,KAAA,CAANT,MAAM;MAAA,OAAQ;QAAEC,IAAI,EAAE,sBAAsB;QAAEC,KAAK,EAAE;UAAEF,MAAM,EAANA,MAAM;UAAEH,QAAQ,EAARA;QAAS;MAAE,CAAC;IAAA,CAAC;IAC/Ga,eAAe,EAAE,SAAjBA,eAAeA,CAAAC,KAAA;MAAA,IAAKd,QAAQ,GAAAc,KAAA,CAARd,QAAQ;QAAEG,MAAM,GAAAW,KAAA,CAANX,MAAM;MAAA,OAAQ;QAAEC,IAAI,EAAE,iBAAiB;QAAEC,KAAK,EAAE;UAAEF,MAAM,EAANA,MAAM;UAAEH,QAAQ,EAARA;QAAS;MAAE,CAAC;IAAA,CAAC;IACrGe,KAAK,EAAE,SAAPA,KAAKA,CAAAC,KAAA;MAAA,IAAKb,MAAM,GAAAa,KAAA,CAANb,MAAM;MAAA,OAAQ;QAAEC,IAAI,EAAE,OAAO;QAAEC,KAAK,EAAE;UAAEF,MAAM,EAANA;QAAO;MAAE,CAAC;IAAA,CAAC;IAC7Dc,SAAS,EAAE,SAAXA,SAASA,CAAAC,KAAA;MAAA,IAAKf,MAAM,GAAAe,KAAA,CAANf,MAAM;MAAA,OAAQ;QAAEC,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE;UAAEF,MAAM,EAANA;QAAO;MAAE,CAAC;IAAA;EACtE,CAAC;AACH,CAAC,CAAC;AAGFpB,WAAA,GAAKC,IAAI,CAAC,gCAAgC,EAAE;EAAA,OAAO;IACjDmC,YAAY,EAAE,SAAdA,YAAYA,CAAAC,KAAA;MAAA,IAAKpB,QAAQ,GAAAoB,KAAA,CAARpB,QAAQ;QAAEG,MAAM,GAAAiB,KAAA,CAANjB,MAAM;MAAA,OAAQ;QAAEC,IAAI,EAAE,cAAc;QAAEC,KAAK,EAAE;UAAEF,MAAM,EAANA,MAAM;UAAEH,QAAQ,EAARA;QAAS;MAAE,CAAC;IAAA;EAChG,CAAC;AAAA,CAAC,CAAC;AAGHjB,WAAA,GAAKC,IAAI,6BAA6B;EAAA,OAAO;IAC3CqC,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAS;QACfC,KAAK,EAAE;UACLC,MAAM,EAAE;YACNC,UAAU,EAAE;UACd,CAAC;UACDC,IAAI,EAAE;QACR;MACF,CAAC;IAAA;EACH,CAAC;AAAA,CAAC,CAAC;AAGH1C,WAAA,GAAKC,IAAI,0CAA0C,YAAM;EACvD,OAAO,SAAS0C,gBAAgBA,CAAA,EAAG;IACjC,OAAO;MAAEtB,IAAI,EAAE,kBAAkB;MAAEC,KAAK,EAAE;QAAEF,MAAM,EAAE;MAAoB;IAAE,CAAC;EAC7E,CAAC;AACH,CAAC,CAAC;AAGFpB,WAAA,GAAKC,IAAI,qCAAqC;EAAA,OAAM,UAAU;AAAA,EAAC;AAC/DD,WAAA,GAAKC,IAAI,gDAAgD;EAAA,OAAM,gBAAgB;AAAA,EAAC;AAAC,IAAA2C,sBAAA,GAAAC,OAAA;AAlDjF,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,WAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAGA,IAAAI,aAAA,GAAAJ,OAAA;AAA0C,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAA7C,YAAA;EAAA,IAAAmD,QAAA,GAAAN,OAAA;IAAAxC,IAAA,GAAA8C,QAAA,CAAA9C,IAAA;EAAAL,WAAA,YAAAA,YAAA;IAAA,OAAAK,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AA+C1C+C,QAAQ,CAAC,YAAY,EAAE,YAAM;EAE3BC,EAAE,CAAC,4BAA4B,EAAE,YAAM;IACrC,IAAAC,OAAA,GAAwB,IAAAC,mBAAM,EAC5B,IAAAL,WAAA,CAAAM,GAAA,EAACR,WAAA,CAAAvC,OAAU;QAAAQ,QAAA,EACT,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAJOwC,WAAW,GAAAH,OAAA,CAAXG,WAAW;IAMnBC,MAAM,CAACD,WAAW,CAAC,OAAO,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC3C,CAAC,CAAC;EAGFN,EAAE,CAAC,8CAA8C,EAAE,YAAM;IACvD,IAAAO,QAAA,GAAqC,IAAAL,mBAAM,EACzC,IAAAL,WAAA,CAAAM,GAAA,EAACR,WAAA,CAAAvC,OAAU;QAACoD,OAAO,EAAE,IAAK;QAAA5C,QAAA,EACxB,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAJO6C,WAAW,GAAAF,QAAA,CAAXE,WAAW;MAAEL,WAAW,GAAAG,QAAA,CAAXH,WAAW;IAMhCC,MAAM,CAACI,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAACH,UAAU,CAAC,CAAC;IACrDD,MAAM,CAACD,WAAW,CAAC,OAAO,CAAC,CAAC,CAACM,QAAQ,CAAC,CAAC;EACzC,CAAC,CAAC;EAGFV,EAAE,CAAC,wCAAwC,EAAE,YAAM;IACjD,IAAAW,QAAA,GAAsB,IAAAT,mBAAM,EAC1B,IAAAL,WAAA,CAAAM,GAAA,EAACR,WAAA,CAAAvC,OAAU;QACTwD,KAAK,EAAE,IAAAf,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAK,CAAM,CAAE;QAC1BiD,MAAM,EAAE,IAAAhB,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAK,CAAM,CAAE;QAAAA,QAAA,EAE3B,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAPOkD,SAAS,GAAAH,QAAA,CAATG,SAAS;IASjBT,MAAM,CAACS,SAAS,CAAC,OAAO,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;IACvCD,MAAM,CAACS,SAAS,CAAC,OAAO,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;IACvCD,MAAM,CAACS,SAAS,CAAC,OAAO,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;EACzC,CAAC,CAAC;EAGFN,EAAE,CAAC,+DAA+D,EAAE,YAAM;IACxE,IAAAe,QAAA,GAAmC,IAAAb,mBAAM,EACvC,IAAAL,WAAA,CAAAM,GAAA,EAACR,WAAA,CAAAvC,OAAU;QAAC4D,eAAe,EAAE,KAAM;QAAApD,QAAA,EACjC,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAJO6C,WAAW,GAAAM,QAAA,CAAXN,WAAW;MAAEK,SAAS,GAAAC,QAAA,CAATD,SAAS;IAM9BT,MAAM,CAACI,WAAW,CAAC,aAAa,CAAC,CAAC,CAACH,UAAU,CAAC,CAAC;IAC/CD,MAAM,CAACS,SAAS,CAAC,OAAO,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;EACzC,CAAC,CAAC;EAEFN,EAAE,CAAC,oCAAoC,EAAE,YAAM;IAC7C,IAAAiB,QAAA,GAAsB,IAAAf,mBAAM,EAC1B,IAAAL,WAAA,CAAAM,GAAA,EAACR,WAAA,CAAAvC,OAAU;QAAAQ,QAAA,EACT,IAAAiC,WAAA,CAAAqB,IAAA,EAACtB,aAAA,CAAA/B,IAAI;UAAAD,QAAA,GACH,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;YAAAE,QAAA,EAAC;UAAO,CAAM,CAAC,EACpB,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;YAAAE,QAAA,EAAC;UAAO,CAAM,CAAC,EACpB,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAA/B,IAAI;YAAAD,QAAA,EACH,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;cAAAE,QAAA,EAAC;YAAM,CAAM;UAAC,CACf,CAAC;QAAA,CACH;MAAC,CACG,CACd,CAAC;MAVOkD,SAAS,GAAAG,QAAA,CAATH,SAAS;IAYjBT,MAAM,CAACS,SAAS,CAAC,SAAS,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;IACzCD,MAAM,CAACS,SAAS,CAAC,SAAS,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;IACzCD,MAAM,CAACS,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;EAC1C,CAAC,CAAC;EAEFN,EAAE,CAAC,mCAAmC,EAAE,YAAM;IAC5C,IAAAmB,QAAA,GAAqC,IAAAjB,mBAAM,EACzC,IAAAL,WAAA,CAAAM,GAAA,EAACR,WAAA,CAAAvC,OAAU;QAACwD,KAAK,EAAE,IAAAf,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAM,CAAM,CAAE;QAAAA,QAAA,EACrC,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAJOkD,SAAS,GAAAK,QAAA,CAATL,SAAS;MAAEM,aAAa,GAAAD,QAAA,CAAbC,aAAa;IAMhCf,MAAM,CAACS,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;IACxCD,MAAM,CAACS,SAAS,CAAC,OAAO,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;IACvCD,MAAM,CAACe,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAACV,QAAQ,CAAC,CAAC;EACtD,CAAC,CAAC;EAEFV,EAAE,CAAC,oCAAoC,EAAE,YAAM;IAC7C,IAAAqB,QAAA,GAAqC,IAAAnB,mBAAM,EACzC,IAAAL,WAAA,CAAAM,GAAA,EAACR,WAAA,CAAAvC,OAAU;QAACyD,MAAM,EAAE,IAAAhB,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAM,CAAM,CAAE;QAAAA,QAAA,EACtC,IAAAiC,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAlC,IAAI;UAAAE,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAJOkD,SAAS,GAAAO,QAAA,CAATP,SAAS;MAAEM,aAAa,GAAAC,QAAA,CAAbD,aAAa;IAMhCf,MAAM,CAACS,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;IACxCD,MAAM,CAACS,SAAS,CAAC,OAAO,CAAC,CAAC,CAACR,UAAU,CAAC,CAAC;IACvCD,MAAM,CAACe,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAACV,QAAQ,CAAC,CAAC;EACrD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}