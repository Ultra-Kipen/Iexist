127fd64522d0d073a2454ca39686c26b
_getJestObj().mock('react-native', function () {
  return {
    Platform: {
      OS: 'ios',
      select: jest.fn(function (obj) {
        return obj.ios || obj.default;
      })
    },
    Keyboard: {
      dismiss: jest.fn()
    },
    StyleSheet: {
      create: jest.fn(function (styles) {
        return styles;
      })
    },
    Text: function Text(_ref) {
      var children = _ref.children;
      return children;
    },
    View: function View(_ref2) {
      var children = _ref2.children,
        testID = _ref2.testID;
      return {
        type: 'view',
        props: {
          testID: testID,
          children: children
        }
      };
    },
    ScrollView: function ScrollView(_ref3) {
      var children = _ref3.children,
        testID = _ref3.testID;
      return {
        type: 'scrollview',
        props: {
          testID: testID,
          children: children
        }
      };
    },
    TouchableWithoutFeedback: function TouchableWithoutFeedback(_ref4) {
      var children = _ref4.children,
        onPress = _ref4.onPress;
      return {
        type: 'touchablewithoutfeedback',
        props: {
          onPress: onPress,
          children: children
        }
      };
    },
    KeyboardAvoidingView: function KeyboardAvoidingView(_ref5) {
      var children = _ref5.children,
        testID = _ref5.testID;
      return {
        type: 'keyboardavoidingview',
        props: {
          testID: testID,
          children: children
        }
      };
    },
    ImageBackground: function ImageBackground(_ref6) {
      var children = _ref6.children,
        testID = _ref6.testID;
      return {
        type: 'imagebackground',
        props: {
          testID: testID,
          children: children
        }
      };
    },
    Image: function Image(_ref7) {
      var testID = _ref7.testID;
      return {
        type: 'image',
        props: {
          testID: testID
        }
      };
    },
    StatusBar: function StatusBar(_ref8) {
      var testID = _ref8.testID;
      return {
        type: 'statusbar',
        props: {
          testID: testID
        }
      };
    }
  };
});
_getJestObj().mock('react-native-safe-area-context', function () {
  return {
    SafeAreaView: function SafeAreaView(_ref9) {
      var children = _ref9.children,
        testID = _ref9.testID;
      return {
        type: 'safeareaview',
        props: {
          testID: testID,
          children: children
        }
      };
    }
  };
});
_getJestObj().mock("../../src/hooks/useTheme", function () {
  return {
    useTheme: function useTheme() {
      return {
        theme: {
          colors: {
            background: '#ffffff'
          },
          dark: false
        }
      };
    }
  };
});
_getJestObj().mock("../../src/components/LoadingIndicator", function () {
  return function LoadingIndicator() {
    return {
      type: 'loadingindicator',
      props: {
        testID: 'loading-indicator'
      }
    };
  };
});
_getJestObj().mock("../../src/assets/images/logo.png", function () {
  return 'logo.png';
});
_getJestObj().mock("../../src/assets/images/auth-background.jpg", function () {
  return 'background.jpg';
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _AuthLayout = _interopRequireDefault(require("../../src/layouts/AuthLayout"));
var _reactNative2 = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('AuthLayout', function () {
  it('renders children correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      queryByText = _render.queryByText;
    expect(queryByText('인증 내용')).toBeTruthy();
  });
  it('shows loading indicator when loading is true', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        loading: true,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByTestId = _render2.getByTestId,
      queryByText = _render2.queryByText;
    expect(getByTestId('loading-indicator')).toBeTruthy();
    expect(queryByText('인증 내용')).toBeNull();
  });
  it('renders title and footer when provided', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        title: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uC81C\uBAA9"
        }),
        footer: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uD478\uD130"
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render3.getByText;
    expect(getByText('인증 제목')).toBeTruthy();
    expect(getByText('인증 푸터')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('renders with default background when imageBackground is false', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        imageBackground: false,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByTestId = _render4.getByTestId,
      getByText = _render4.getByText;
    expect(getByTestId('auth-layout')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('handles complex children correctly', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        children: (0, _jsxRuntime.jsxs)(_reactNative2.View, {
          children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
            children: "\uCCAB \uBC88\uC9F8 \uC790\uC2DD"
          }), (0, _jsxRuntime.jsx)(_reactNative2.Text, {
            children: "\uB450 \uBC88\uC9F8 \uC790\uC2DD"
          }), (0, _jsxRuntime.jsx)(_reactNative2.View, {
            children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
              children: "\uC911\uCCA9\uB41C \uC790\uC2DD"
            })
          })]
        })
      })),
      getByText = _render5.getByText;
    expect(getByText('첫 번째 자식')).toBeTruthy();
    expect(getByText('두 번째 자식')).toBeTruthy();
    expect(getByText('중첩된 자식')).toBeTruthy();
  });
  it('renders correctly with only title', function () {
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        title: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uC81C\uBAA9\uB9CC"
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render6.getByText,
      queryByTestId = _render6.queryByTestId;
    expect(getByText('인증 제목만')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
    expect(queryByTestId('footer-container')).toBeNull();
  });
  it('renders correctly with only footer', function () {
    var _render7 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        footer: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uD478\uD130\uB9CC"
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render7.getByText,
      queryByTestId = _render7.queryByTestId;
    expect(getByText('인증 푸터만')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
    expect(queryByTestId('title-container')).toBeNull();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,