f8890bd63a6930b9ad5018493fde0f56
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useKeyedChildListeners = useKeyedChildListeners;
var React = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function useKeyedChildListeners() {
  var _React$useRef = React.useRef(Object.assign(Object.create(null), {
      getState: {},
      beforeRemove: {}
    })),
    keyedListeners = _React$useRef.current;
  var addKeyedListener = React.useCallback(function (type, key, listener) {
    keyedListeners[type][key] = listener;
    return function () {
      keyedListeners[type][key] = undefined;
    };
  }, [keyedListeners]);
  return {
    keyedListeners: keyedListeners,
    addKeyedListener: addKeyedListener
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImUiLCJXZWFrTWFwIiwiciIsInQiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsInVzZUtleWVkQ2hpbGRMaXN0ZW5lcnMiLCJfUmVhY3QkdXNlUmVmIiwidXNlUmVmIiwiYXNzaWduIiwiY3JlYXRlIiwiZ2V0U3RhdGUiLCJiZWZvcmVSZW1vdmUiLCJrZXllZExpc3RlbmVycyIsImN1cnJlbnQiLCJhZGRLZXllZExpc3RlbmVyIiwidXNlQ2FsbGJhY2siLCJ0eXBlIiwia2V5IiwibGlzdGVuZXIiLCJ1bmRlZmluZWQiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvdXNlS2V5ZWRDaGlsZExpc3RlbmVycy50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUE4QixTQUFBQyx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxtQkFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQSxXQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxLQUFBRixDQUFBO0FBQUEsU0FBQUgsd0JBQUFHLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUEsZUFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxXQUFBSyxPQUFBLEVBQUFMLENBQUEsUUFBQUcsQ0FBQSxHQUFBSix3QkFBQSxDQUFBRyxDQUFBLE9BQUFDLENBQUEsSUFBQUEsQ0FBQSxDQUFBRyxHQUFBLENBQUFOLENBQUEsVUFBQUcsQ0FBQSxDQUFBSSxHQUFBLENBQUFQLENBQUEsT0FBQVEsQ0FBQSxLQUFBQyxTQUFBLFVBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUEsV0FBQUMsQ0FBQSxJQUFBZCxDQUFBLG9CQUFBYyxDQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxDQUFBLFNBQUFHLENBQUEsR0FBQVAsQ0FBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFiLENBQUEsRUFBQWMsQ0FBQSxVQUFBRyxDQUFBLEtBQUFBLENBQUEsQ0FBQVYsR0FBQSxJQUFBVSxDQUFBLENBQUFDLEdBQUEsSUFBQVAsTUFBQSxDQUFBQyxjQUFBLENBQUFKLENBQUEsRUFBQU0sQ0FBQSxFQUFBRyxDQUFBLElBQUFULENBQUEsQ0FBQU0sQ0FBQSxJQUFBZCxDQUFBLENBQUFjLENBQUEsWUFBQU4sQ0FBQSxDQUFBSCxPQUFBLEdBQUFMLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBT3ZCLFNBQVNXLHNCQUFzQkEsQ0FBQSxFQUFHO0VBQ3ZDLElBQUFDLGFBQUEsR0FBb0N4QixLQUFLLENBQUN5QixNQUFNLENBTTlDVixNQUFNLENBQUNXLE1BQU0sQ0FBQ1gsTUFBTSxDQUFDWSxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUU7TUFDakNDLFFBQVEsRUFBRSxDQUFDLENBQUM7TUFDWkMsWUFBWSxFQUFFLENBQUM7SUFDakIsQ0FBQyxDQUNILENBQUM7SUFWZ0JDLGNBQUEsR0FBQU4sYUFBQSxDQUFUTyxPQUFPO0VBWWYsSUFBTUMsZ0JBQWdCLEdBQUdoQyxLQUFLLENBQUNpQyxXQUFXLENBQ3hDLFVBQ0VDLElBQU8sRUFDUEMsR0FBVyxFQUNYQyxRQUE2QixFQUMxQjtJQUVITixjQUFjLENBQUNJLElBQUksQ0FBQyxDQUFDQyxHQUFHLENBQUMsR0FBR0MsUUFBUTtJQUVwQyxPQUFPLFlBQU07TUFFWE4sY0FBYyxDQUFDSSxJQUFJLENBQUMsQ0FBQ0MsR0FBRyxDQUFDLEdBQUdFLFNBQVM7SUFDdkMsQ0FBQztFQUNILENBQUMsRUFDRCxDQUFDUCxjQUFjLENBQ2pCLENBQUM7RUFFRCxPQUFPO0lBQ0xBLGNBQWMsRUFBZEEsY0FBYztJQUNkRSxnQkFBQSxFQUFBQTtFQUNGLENBQUM7QUFDSCIsImlnbm9yZUxpc3QiOltdfQ==