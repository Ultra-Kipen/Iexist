b5b8fcfa9430c05a68c0cd8a78b444e7
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mockAuthService = void 0;
function cov_odiac0h94() {
  var path = "C:\\app_build\\Iexist\\frontend\\__tests__\\mocks\\mockAuthService.ts";
  var hash = "b15ea57b0d2cb9eb802c35ab8fb909f956ee25b6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\__tests__\\mocks\\mockAuthService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 31
        },
        end: {
          line: 13,
          column: 3
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b15ea57b0d2cb9eb802c35ab8fb909f956ee25b6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_odiac0h94 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_odiac0h94();
var mockAuthService = exports.mockAuthService = (cov_odiac0h94().s[0]++, {
  login: jest.fn().mockResolvedValue({
    data: {
      success: true,
      data: {
        token: 'test-token',
        user: {
          id: 1,
          username: 'testuser'
        }
      }
    }
  }),
  logout: jest.fn().mockResolvedValue({
    data: {
      success: true
    }
  })
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2NrQXV0aFNlcnZpY2UiLCJleHBvcnRzIiwiY292X29kaWFjMGg5NCIsInMiLCJsb2dpbiIsImplc3QiLCJmbiIsIm1vY2tSZXNvbHZlZFZhbHVlIiwiZGF0YSIsInN1Y2Nlc3MiLCJ0b2tlbiIsInVzZXIiLCJpZCIsInVzZXJuYW1lIiwibG9nb3V0Il0sInNvdXJjZXMiOlsibW9ja0F1dGhTZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIF9fdGVzdHNfXy9tb2Nrcy9tb2NrQXV0aFNlcnZpY2UudHNcclxuZXhwb3J0IGNvbnN0IG1vY2tBdXRoU2VydmljZSA9IHtcclxuICAgIGxvZ2luOiBqZXN0LmZuKCkubW9ja1Jlc29sdmVkVmFsdWUoeyBcclxuICAgICAgZGF0YTogeyBcclxuICAgICAgICBzdWNjZXNzOiB0cnVlLCBcclxuICAgICAgICBkYXRhOiB7IFxyXG4gICAgICAgICAgdG9rZW46ICd0ZXN0LXRva2VuJywgXHJcbiAgICAgICAgICB1c2VyOiB7IGlkOiAxLCB1c2VybmFtZTogJ3Rlc3R1c2VyJyB9IFxyXG4gICAgICAgIH0gXHJcbiAgICAgIH0gXHJcbiAgICB9KSxcclxuICAgIGxvZ291dDogamVzdC5mbigpLm1vY2tSZXNvbHZlZFZhbHVlKHsgZGF0YTogeyBzdWNjZXNzOiB0cnVlIH0gfSlcclxuICB9OyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNPLElBQU1BLGVBQWUsR0FBQUMsT0FBQSxDQUFBRCxlQUFBLElBQUFFLGFBQUEsR0FBQUMsQ0FBQSxPQUFHO0VBQzNCQyxLQUFLLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUM7SUFDakNDLElBQUksRUFBRTtNQUNKQyxPQUFPLEVBQUUsSUFBSTtNQUNiRCxJQUFJLEVBQUU7UUFDSkUsS0FBSyxFQUFFLFlBQVk7UUFDbkJDLElBQUksRUFBRTtVQUFFQyxFQUFFLEVBQUUsQ0FBQztVQUFFQyxRQUFRLEVBQUU7UUFBVztNQUN0QztJQUNGO0VBQ0YsQ0FBQyxDQUFDO0VBQ0ZDLE1BQU0sRUFBRVQsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQztJQUFFQyxJQUFJLEVBQUU7TUFBRUMsT0FBTyxFQUFFO0lBQUs7RUFBRSxDQUFDO0FBQ2pFLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=