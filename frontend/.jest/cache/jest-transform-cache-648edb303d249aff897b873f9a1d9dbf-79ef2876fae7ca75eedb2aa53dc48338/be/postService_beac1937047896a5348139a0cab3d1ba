05e44b8d80ba34c9d6b244c80e1ad48c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _client = _interopRequireDefault(require("./client"));
function cov_pif1io1z1() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\services\\api\\postService.ts";
  var hash = "f006e36ead1bb0d0b932d40615b13ea400349321";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\services\\api\\postService.ts",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "2": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "3": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 51
        }
      },
      "4": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 56
        }
      },
      "5": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 54
        }
      },
      "6": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "7": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 67
        }
      },
      "8": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 14
          },
          end: {
            line: 19,
            column: 15
          }
        },
        loc: {
          start: {
            line: 19,
            column: 46
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 13
          }
        },
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 16
          }
        },
        loc: {
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 36,
            column: 3
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 14
          },
          end: {
            line: 38,
            column: 15
          }
        },
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 3
          }
        },
        line: 42
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 14
          },
          end: {
            line: 46,
            column: 15
          }
        },
        loc: {
          start: {
            line: 46,
            column: 40
          },
          end: {
            line: 48,
            column: 3
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        loc: {
          start: {
            line: 50,
            column: 38
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 54,
            column: 14
          },
          end: {
            line: 54,
            column: 15
          }
        },
        loc: {
          start: {
            line: 54,
            column: 63
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 54
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 58,
            column: 16
          }
        },
        loc: {
          start: {
            line: 58,
            column: 41
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 58
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f006e36ead1bb0d0b932d40615b13ea400349321"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_pif1io1z1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pif1io1z1();
var postService = (cov_pif1io1z1().s[0]++, {
  createPost: function () {
    var _createPost = (0, _asyncToGenerator2.default)(function* (data) {
      cov_pif1io1z1().f[0]++;
      cov_pif1io1z1().s[1]++;
      return yield _client.default.post('/posts', data);
    });
    function createPost(_x) {
      return _createPost.apply(this, arguments);
    }
    return createPost;
  }(),
  getPosts: function () {
    var _getPosts = (0, _asyncToGenerator2.default)(function* (params) {
      cov_pif1io1z1().f[1]++;
      cov_pif1io1z1().s[2]++;
      return yield _client.default.get('/posts', {
        params: params
      });
    });
    function getPosts(_x2) {
      return _getPosts.apply(this, arguments);
    }
    return getPosts;
  }(),
  getPostById: function () {
    var _getPostById = (0, _asyncToGenerator2.default)(function* (postId) {
      cov_pif1io1z1().f[2]++;
      cov_pif1io1z1().s[3]++;
      return yield _client.default.get(`/posts/${postId}`);
    });
    function getPostById(_x3) {
      return _getPostById.apply(this, arguments);
    }
    return getPostById;
  }(),
  getMyPosts: function () {
    var _getMyPosts = (0, _asyncToGenerator2.default)(function* (params) {
      cov_pif1io1z1().f[3]++;
      cov_pif1io1z1().s[4]++;
      return yield _client.default.get('/posts/me', {
        params: params
      });
    });
    function getMyPosts(_x4) {
      return _getMyPosts.apply(this, arguments);
    }
    return getMyPosts;
  }(),
  deletePost: function () {
    var _deletePost = (0, _asyncToGenerator2.default)(function* (postId) {
      cov_pif1io1z1().f[4]++;
      cov_pif1io1z1().s[5]++;
      return yield _client.default.delete(`/posts/${postId}`);
    });
    function deletePost(_x5) {
      return _deletePost.apply(this, arguments);
    }
    return deletePost;
  }(),
  likePost: function () {
    var _likePost = (0, _asyncToGenerator2.default)(function* (postId) {
      cov_pif1io1z1().f[5]++;
      cov_pif1io1z1().s[6]++;
      return yield _client.default.post(`/posts/${postId}/like`);
    });
    function likePost(_x6) {
      return _likePost.apply(this, arguments);
    }
    return likePost;
  }(),
  addComment: function () {
    var _addComment = (0, _asyncToGenerator2.default)(function* (postId, data) {
      cov_pif1io1z1().f[6]++;
      cov_pif1io1z1().s[7]++;
      return yield _client.default.post(`/posts/${postId}/comments`, data);
    });
    function addComment(_x7, _x8) {
      return _addComment.apply(this, arguments);
    }
    return addComment;
  }(),
  getComments: function () {
    var _getComments = (0, _asyncToGenerator2.default)(function* (postId) {
      cov_pif1io1z1().f[7]++;
      cov_pif1io1z1().s[8]++;
      return yield _client.default.get(`/posts/${postId}/comments`);
    });
    function getComments(_x9) {
      return _getComments.apply(this, arguments);
    }
    return getComments;
  }()
});
var _default = exports.default = postService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,