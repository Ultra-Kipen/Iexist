{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_Button","_jsxRuntime","describe","mockOnPress","jest","fn","beforeEach","clearAllMocks","it","_render","render","jsx","default","onPress","title","getByText","buttonText","expect","toBeDefined","_render2","fireEvent","press","toHaveBeenCalledTimes","_render3","disabled","not","toHaveBeenCalled","_render4","loading","queryByText","toBeNull","_render5","type","_render6","_render7","_render8","_render9","size","_render10","customStyle","backgroundColor","borderRadius","_render11","style","_render12","textStyle","fontSize","fontWeight","color","leftIcon","View","testID","_render13","getByTestId","icon","rightIcon","_render14","_render15","queryByTestId","leftIconElement","rightIconElement"],"sources":["Button.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent, RenderAPI } from '@testing-library/react-native';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport Button from '../../src/components/Button';\r\n\r\ndescribe('Button 컴포넌트', () => {\r\n  const mockOnPress = jest.fn();\r\n  \r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it('버튼이 올바르게 렌더링되어야 함', () => {\r\n    const { getByText } = render(\r\n      <Button onPress={mockOnPress} title=\"테스트 버튼\" />\r\n    );\r\n    \r\n    const buttonText = getByText('테스트 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('버튼 클릭 시 onPress 함수가 호출되어야 함', () => {\r\n    const { getByText } = render(\r\n      <Button onPress={mockOnPress} title=\"테스트 버튼\" />\r\n    );\r\n    \r\n    const buttonText = getByText('테스트 버튼');\r\n    // Text 컴포넌트의 부모(TouchableOpacity)를 찾는 대신, \r\n    // 직접 Text 컴포넌트에 press 이벤트를 발생시킵니다.\r\n    fireEvent.press(buttonText);\r\n    \r\n    expect(mockOnPress).toHaveBeenCalledTimes(1);\r\n  });\r\n\r\n  it('비활성화된 버튼은 onPress 함수를 호출하지 않아야 함', () => {\r\n    const { getByText } = render(\r\n      <Button onPress={mockOnPress} title=\"비활성화 버튼\" disabled={true} />\r\n    );\r\n    \r\n    const buttonText = getByText('비활성화 버튼');\r\n    fireEvent.press(buttonText);\r\n    \r\n    expect(mockOnPress).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('로딩 상태의 버튼은 텍스트를 숨겨야 함', () => {\r\n    const { queryByText } = render(\r\n      <Button onPress={mockOnPress} title=\"로딩 버튼\" loading={true} />\r\n    );\r\n    \r\n    // 로딩 중에는 텍스트가 숨겨짐\r\n    const buttonText = queryByText('로딩 버튼');\r\n    expect(buttonText).toBeNull();\r\n  });\r\n\r\n  it('primary 타입 버튼이 렌더링되어야 함', () => {\r\n    const { getByText } = render(\r\n      <Button onPress={mockOnPress} title=\"프라이머리 버튼\" type=\"primary\" />\r\n    );\r\n    \r\n    const buttonText = getByText('프라이머리 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('secondary 타입 버튼이 렌더링되어야 함', () => {\r\n    const { getByText } = render(\r\n      <Button onPress={mockOnPress} title=\"세컨더리 버튼\" type=\"secondary\" />\r\n    );\r\n    \r\n    const buttonText = getByText('세컨더리 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('outline 타입 버튼이 렌더링되어야 함', () => {\r\n    const { getByText } = render(\r\n      <Button onPress={mockOnPress} title=\"아웃라인 버튼\" type=\"outline\" />\r\n    );\r\n    \r\n    const buttonText = getByText('아웃라인 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('text 타입 버튼이 렌더링되어야 함', () => {\r\n    const { getByText } = render(\r\n      <Button onPress={mockOnPress} title=\"텍스트 버튼\" type=\"text\" />\r\n    );\r\n    \r\n    const buttonText = getByText('텍스트 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('small 크기 버튼이 렌더링되어야 함', () => {\r\n    const { getByText } = render(\r\n      <Button onPress={mockOnPress} title=\"작은 버튼\" size=\"small\" />\r\n    );\r\n    \r\n    const buttonText = getByText('작은 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('large 크기 버튼이 렌더링되어야 함', () => {\r\n    const { getByText } = render(\r\n      <Button onPress={mockOnPress} title=\"큰 버튼\" size=\"large\" />\r\n    );\r\n    \r\n    const buttonText = getByText('큰 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('커스텀 스타일이 적용된 버튼이 렌더링되어야 함', () => {\r\n    const customStyle = { backgroundColor: '#FF5733', borderRadius: 20 };\r\n    \r\n    const { getByText } = render(\r\n      <Button \r\n        onPress={mockOnPress} \r\n        title=\"커스텀 스타일 버튼\" \r\n        style={customStyle} \r\n      />\r\n    );\r\n    \r\n    const buttonText = getByText('커스텀 스타일 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('커스텀 텍스트 스타일이 적용된 버튼이 렌더링되어야 함', () => {\r\n    // 인라인으로 스타일 객체를 직접 전달\r\n    const { getByText } = render(\r\n      <Button \r\n        onPress={mockOnPress} \r\n        title=\"커스텀 텍스트 스타일\" \r\n        textStyle={{ fontSize: 18, fontWeight: 'bold', color: '#FF0000' }}\r\n      />\r\n    );\r\n    \r\n    const buttonText = getByText('커스텀 텍스트 스타일');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('leftIcon이 있는 버튼이 올바르게 렌더링되어야 함', () => {\r\n    const leftIcon = <View testID=\"left-icon\" />;\r\n    \r\n    const { getByTestId, getByText } = render(\r\n      <Button \r\n        onPress={mockOnPress} \r\n        title=\"왼쪽 아이콘 버튼\" \r\n        leftIcon={leftIcon}\r\n      />\r\n    );\r\n    \r\n    // 아이콘이 렌더링되었는지 확인\r\n    const icon = getByTestId('left-icon');\r\n    expect(icon).toBeDefined();\r\n    \r\n    // 텍스트도 렌더링되었는지 확인\r\n    const buttonText = getByText('왼쪽 아이콘 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('rightIcon이 있는 버튼이 올바르게 렌더링되어야 함', () => {\r\n    const rightIcon = <View testID=\"right-icon\" />;\r\n    \r\n    const { getByTestId, getByText } = render(\r\n      <Button \r\n        onPress={mockOnPress} \r\n        title=\"오른쪽 아이콘 버튼\" \r\n        rightIcon={rightIcon}\r\n      />\r\n    );\r\n    \r\n    // 아이콘이 렌더링되었는지 확인\r\n    const icon = getByTestId('right-icon');\r\n    expect(icon).toBeDefined();\r\n    \r\n    // 텍스트도 렌더링되었는지 확인\r\n    const buttonText = getByText('오른쪽 아이콘 버튼');\r\n    expect(buttonText).toBeDefined();\r\n  });\r\n\r\n  it('로딩 상태에서는 아이콘이 표시되지 않아야 함', () => {\r\n    const leftIcon = <View testID=\"left-icon\" />;\r\n    const rightIcon = <View testID=\"right-icon\" />;\r\n    \r\n    const { queryByTestId } = render(\r\n      <Button \r\n        onPress={mockOnPress} \r\n        title=\"로딩 상태 아이콘 버튼\" \r\n        leftIcon={leftIcon}\r\n        rightIcon={rightIcon}\r\n        loading={true}\r\n      />\r\n    );\r\n    \r\n    // 로딩 중에는 아이콘이 표시되지 않아야 함\r\n    const leftIconElement = queryByTestId('left-icon');\r\n    const rightIconElement = queryByTestId('right-icon');\r\n    expect(leftIconElement).toBeNull();\r\n    expect(rightIconElement).toBeNull();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}