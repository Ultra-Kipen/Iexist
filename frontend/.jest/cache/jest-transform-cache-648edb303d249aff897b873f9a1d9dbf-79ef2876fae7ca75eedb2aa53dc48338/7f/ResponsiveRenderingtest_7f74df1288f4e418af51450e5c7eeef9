323ae9ea90f816dfc06b0a0e1a8a2eb5
_getJestObj().mock('@react-native-async-storage/async-storage', function () {
  return {
    getItem: jest.fn().mockResolvedValue(null),
    setItem: jest.fn().mockResolvedValue(undefined),
    removeItem: jest.fn().mockResolvedValue(undefined)
  };
});
_getJestObj().mock("../../src/services/api/authService", function () {
  return {
    login: jest.fn(),
    register: jest.fn(),
    logout: jest.fn()
  };
});
_getJestObj().mock("../../src/services/api/emotionService", function () {
  return {
    getAllEmotions: jest.fn().mockResolvedValue({
      data: []
    }),
    getDailyEmotionCheck: jest.fn().mockResolvedValue({
      data: []
    }),
    recordEmotions: jest.fn().mockResolvedValue(undefined)
  };
});
_getJestObj().mock("../../src/screens/HomeScreen", function () {
  return 'MockedHomeScreen';
});
_getJestObj().mock('react-native-paper', function () {
  return {
    Text: 'MockedText',
    useTheme: jest.fn(function () {
      return {
        colors: {
          primary: 'mockPrimary',
          surface: 'mockSurface'
        }
      };
    })
  };
});
var _reactNative = require("react-native");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('Dimensions API Tests', function () {
  var originalDimensionsGet;
  beforeEach(function () {
    originalDimensionsGet = _reactNative.Dimensions.get;
  });
  afterEach(function () {
    _reactNative.Dimensions.get = originalDimensionsGet;
  });
  test('화면 크기를 모킹할 수 있어야 함', function () {
    _reactNative.Dimensions.get = jest.fn(function (dim) {
      if (dim === 'window' || dim === 'screen') {
        return {
          width: 320,
          height: 568,
          scale: 1,
          fontScale: 1
        };
      }
      return originalDimensionsGet(dim);
    });
    var dimensions = _reactNative.Dimensions.get('window');
    expect(dimensions.width).toBe(320);
    expect(dimensions.height).toBe(568);
    expect(_reactNative.Dimensions.get).toHaveBeenCalledWith('window');
  });
  test('서로 다른 화면 크기를 시뮬레이션할 수 있어야 함', function () {
    _reactNative.Dimensions.get = jest.fn().mockReturnValue({
      width: 375,
      height: 812,
      scale: 1,
      fontScale: 1
    });
    var dimensions = _reactNative.Dimensions.get('window');
    expect(dimensions.width).toBe(375);
    expect(dimensions.height).toBe(812);
    _reactNative.Dimensions.get = jest.fn().mockReturnValue({
      width: 768,
      height: 1024,
      scale: 1,
      fontScale: 1
    });
    dimensions = _reactNative.Dimensions.get('window');
    expect(dimensions.width).toBe(768);
    expect(dimensions.height).toBe(1024);
    _reactNative.Dimensions.get = jest.fn().mockReturnValue({
      width: 812,
      height: 375,
      scale: 1,
      fontScale: 1
    });
    dimensions = _reactNative.Dimensions.get('window');
    expect(dimensions.width).toBe(812);
    expect(dimensions.height).toBe(375);
  });
});
describe('Dummy Tests', function () {
  test('dummy test to replace old snapshots', function () {
    expect(true).toBe(true);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,