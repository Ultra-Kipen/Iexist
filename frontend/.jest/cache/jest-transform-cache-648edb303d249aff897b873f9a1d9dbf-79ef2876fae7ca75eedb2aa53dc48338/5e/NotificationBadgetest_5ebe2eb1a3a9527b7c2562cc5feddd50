621627e77bc3cc0703bf181fb5f39032
_getJestObj().mock('react-native', function () {
  return {
    Platform: {
      OS: 'ios',
      select: jest.fn()
    },
    StyleSheet: {
      create: function create(styles) {
        return styles;
      },
      flatten: function flatten(styles) {
        return styles;
      },
      compose: function compose(style1, style2) {
        return [style1, style2];
      }
    },
    View: jest.fn(function (_ref) {
      var children = _ref.children,
        style = _ref.style,
        testID = _ref.testID;
      return children;
    }),
    Text: jest.fn(function (_ref2) {
      var children = _ref2.children,
        style = _ref2.style,
        testID = _ref2.testID;
      return children;
    }),
    Dimensions: {
      get: function get() {
        return {
          width: 375,
          height: 667
        };
      }
    }
  };
}, {
  virtual: true
});
_getJestObj().mock("../../src/contexts/NotificationContext", function () {
  return {
    useNotification: jest.fn()
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _NotificationBadge = _interopRequireDefault(require("../../src/components/NotificationBadge"));
var _NotificationContext = require("../../src/contexts/NotificationContext");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('NotificationBadge 컴포넌트', function () {
  beforeEach(function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 0
    });
  });
  it('unreadCount가 0이고 showZero가 false이면 배지가 표시되지 않아야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 0
    });
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {
        showZero: false
      })),
      queryByText = _render.queryByText;
    expect(queryByText('0')).toBeNull();
  });
  it('unreadCount가 0이지만 showZero가 true이면 배지가 표시되어야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 0
    });
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {
        showZero: true
      })),
      getByText = _render2.getByText;
    expect(getByText('0')).toBeTruthy();
  });
  it('unreadCount가 있으면 배지에 카운트가 표시되어야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 5
    });
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {})),
      getByText = _render3.getByText;
    expect(getByText('5')).toBeTruthy();
  });
  it('maxCount보다 큰 unreadCount는 maxCount+로 표시되어야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 120
    });
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {
        maxCount: 99
      })),
      getByText = _render4.getByText;
    expect(getByText('99+')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,