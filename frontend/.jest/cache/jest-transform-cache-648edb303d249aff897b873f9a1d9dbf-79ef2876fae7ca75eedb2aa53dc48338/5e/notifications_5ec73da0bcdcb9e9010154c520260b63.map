{"version":3,"names":["_index","require","_error","cov_hq84czurt","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","fetchNotifications","exports","_ref","_asyncToGenerator2","default","dispatch","ActionType","SET_LOADING","payload","response","fetch","method","headers","ok","Error","data","json","forEach","notification","ADD_NOTIFICATION","error","appError","handleApiError","SET_ERROR","message","_x","apply","arguments","markNotificationAsRead","_ref2","notificationId","REMOVE_NOTIFICATION","updatedNotification","_x2","_x3","markAllNotificationsAsRead","_ref3","CLEAR_NOTIFICATIONS","updatedNotifications","_x4","deleteNotification","_ref4","_x5","_x6"],"sources":["notifications.ts"],"sourcesContent":["import { Dispatch } from 'react';\r\nimport { Action, ActionType } from './index';\r\nimport { handleApiError } from '../utils/error';\r\n\r\nexport interface Notification {\r\n  id: string;\r\n  content: string;\r\n  notificationType: 'like' | 'comment' | 'challenge' | 'system';\r\n  relatedId?: number;\r\n  isRead: boolean;\r\n  createdAt: string;\r\n}\r\n\r\n// 알림 목록 가져오기\r\nexport const fetchNotifications = async (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: true });\r\n    \r\n    // API 호출을 위한 실제 코드로 대체해야 합니다\r\n    const response = await fetch('/api/notifications', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 토큰 추가\r\n      },\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('알림을 가져오는데 실패했습니다.');\r\n    }\r\n    \r\n    const data: Notification[] = await response.json();\r\n    \r\n    // 각 알림을 추가\r\n    data.forEach(notification => {\r\n      dispatch({\r\n        type: ActionType.ADD_NOTIFICATION,\r\n        payload: notification,\r\n      });\r\n    });\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    const appError = handleApiError(error as any);\r\n    dispatch({ type: ActionType.SET_ERROR, payload: appError.message });\r\n    throw appError;\r\n  } finally {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: false });\r\n  }\r\n};\r\n\r\n// 알림 읽음 표시\r\nexport const markNotificationAsRead = async (\r\n  dispatch: Dispatch<Action>,\r\n  notificationId: string\r\n) => {\r\n  try {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: true });\r\n    \r\n    // API 호출을 위한 실제 코드로 대체해야 합니다\r\n    const response = await fetch(`/api/notifications/${notificationId}/read`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 토큰 추가\r\n      },\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('알림을 읽음 표시하는데 실패했습니다.');\r\n    }\r\n    \r\n    // 알림 상태 업데이트 (실제로는 받아온 업데이트된 알림으로 대체해야 함)\r\n    dispatch({\r\n      type: ActionType.REMOVE_NOTIFICATION,\r\n      payload: notificationId,\r\n    });\r\n    \r\n    const updatedNotification = await response.json();\r\n    dispatch({\r\n      type: ActionType.ADD_NOTIFICATION,\r\n      payload: updatedNotification,\r\n    });\r\n    \r\n    return updatedNotification;\r\n  } catch (error) {\r\n    const appError = handleApiError(error as any);\r\n    dispatch({ type: ActionType.SET_ERROR, payload: appError.message });\r\n    throw appError;\r\n  } finally {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: false });\r\n  }\r\n};\r\n\r\n// 모든 알림 읽음 표시\r\nexport const markAllNotificationsAsRead = async (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: true });\r\n    \r\n    // API 호출을 위한 실제 코드로 대체해야 합니다\r\n    const response = await fetch('/api/notifications/read-all', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 토큰 추가\r\n      },\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('모든 알림을 읽음 표시하는데 실패했습니다.');\r\n    }\r\n    \r\n    // 상태 초기화 후 새로운 알림 목록 설정\r\n    dispatch({ type: ActionType.CLEAR_NOTIFICATIONS });\r\n    \r\n    const updatedNotifications = await response.json();\r\n    updatedNotifications.forEach((notification: Notification) => {\r\n      dispatch({\r\n        type: ActionType.ADD_NOTIFICATION,\r\n        payload: notification,\r\n      });\r\n    });\r\n    \r\n    return updatedNotifications;\r\n  } catch (error) {\r\n    const appError = handleApiError(error as any);\r\n    dispatch({ type: ActionType.SET_ERROR, payload: appError.message });\r\n    throw appError;\r\n  } finally {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: false });\r\n  }\r\n};\r\n\r\n// 알림 삭제\r\nexport const deleteNotification = async (\r\n  dispatch: Dispatch<Action>,\r\n  notificationId: string\r\n) => {\r\n  try {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: true });\r\n    \r\n    // API 호출을 위한 실제 코드로 대체해야 합니다\r\n    const response = await fetch(`/api/notifications/${notificationId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 토큰 추가\r\n      },\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('알림을 삭제하는데 실패했습니다.');\r\n    }\r\n    \r\n    // 상태에서 알림 제거\r\n    dispatch({\r\n      type: ActionType.REMOVE_NOTIFICATION,\r\n      payload: notificationId,\r\n    });\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    const appError = handleApiError(error as any);\r\n    dispatch({ type: ActionType.SET_ERROR, payload: appError.message });\r\n    throw appError;\r\n  } finally {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: false });\r\n  }\r\n};"],"mappings":";;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAAgD,SAAAE,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAA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","ignoreList":[]}