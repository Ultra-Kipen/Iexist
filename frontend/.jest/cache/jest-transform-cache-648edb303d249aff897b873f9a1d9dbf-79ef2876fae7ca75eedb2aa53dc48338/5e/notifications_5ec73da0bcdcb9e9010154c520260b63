ec9c11ba618fe47af89d24ecdcacf37a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.markNotificationAsRead = exports.markAllNotificationsAsRead = exports.fetchNotifications = exports.deleteNotification = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _index = require("./index");
var _error = require("../utils/error");
function cov_hq84czurt() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\store\\notifications.ts";
  var hash = "55b049f3574a76a2bd33a6d8002ef7d1460d973b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\store\\notifications.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 50,
          column: 1
        }
      },
      "1": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 49,
          column: 3
        }
      },
      "2": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "3": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "4": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "5": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 43
        }
      },
      "6": {
        start: {
          line: 32,
          column: 33
        },
        end: {
          line: 32,
          column: 54
        }
      },
      "7": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 40,
          column: 7
        }
      },
      "8": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "9": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 16
        }
      },
      "10": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 49
        }
      },
      "11": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 72
        }
      },
      "12": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "13": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 63
        }
      },
      "14": {
        start: {
          line: 53,
          column: 38
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "15": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 92,
          column: 3
        }
      },
      "16": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 62
        }
      },
      "17": {
        start: {
          line: 61,
          column: 21
        },
        end: {
          line: 67,
          column: 6
        }
      },
      "18": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "19": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 70,
          column: 46
        }
      },
      "20": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "21": {
        start: {
          line: 79,
          column: 32
        },
        end: {
          line: 79,
          column: 53
        }
      },
      "22": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 83,
          column: 7
        }
      },
      "23": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 31
        }
      },
      "24": {
        start: {
          line: 87,
          column: 21
        },
        end: {
          line: 87,
          column: 49
        }
      },
      "25": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 72
        }
      },
      "26": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 19
        }
      },
      "27": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 63
        }
      },
      "28": {
        start: {
          line: 96,
          column: 42
        },
        end: {
          line: 132,
          column: 1
        }
      },
      "29": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 131,
          column: 3
        }
      },
      "30": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 62
        }
      },
      "31": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 107,
          column: 6
        }
      },
      "32": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "33": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 49
        }
      },
      "34": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 55
        }
      },
      "35": {
        start: {
          line: 116,
          column: 33
        },
        end: {
          line: 116,
          column: 54
        }
      },
      "36": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 122,
          column: 7
        }
      },
      "37": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "38": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 32
        }
      },
      "39": {
        start: {
          line: 126,
          column: 21
        },
        end: {
          line: 126,
          column: 49
        }
      },
      "40": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 72
        }
      },
      "41": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 19
        }
      },
      "42": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 63
        }
      },
      "43": {
        start: {
          line: 135,
          column: 34
        },
        end: {
          line: 169,
          column: 1
        }
      },
      "44": {
        start: {
          line: 139,
          column: 2
        },
        end: {
          line: 168,
          column: 3
        }
      },
      "45": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 62
        }
      },
      "46": {
        start: {
          line: 143,
          column: 21
        },
        end: {
          line: 149,
          column: 6
        }
      },
      "47": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "48": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 43
        }
      },
      "49": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 159,
          column: 7
        }
      },
      "50": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 16
        }
      },
      "51": {
        start: {
          line: 163,
          column: 21
        },
        end: {
          line: 163,
          column: 49
        }
      },
      "52": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 164,
          column: 72
        }
      },
      "53": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 19
        }
      },
      "54": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 15,
            column: 35
          }
        },
        loc: {
          start: {
            line: 15,
            column: 72
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 18
          }
        },
        loc: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 53,
            column: 38
          },
          end: {
            line: 53,
            column: 39
          }
        },
        loc: {
          start: {
            line: 56,
            column: 5
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 96,
            column: 42
          },
          end: {
            line: 96,
            column: 43
          }
        },
        loc: {
          start: {
            line: 96,
            column: 80
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 96
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 117,
            column: 33
          },
          end: {
            line: 117,
            column: 34
          }
        },
        loc: {
          start: {
            line: 117,
            column: 65
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 117
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 135,
            column: 34
          },
          end: {
            line: 135,
            column: 35
          }
        },
        loc: {
          start: {
            line: 138,
            column: 5
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 138
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "3": {
        loc: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "55b049f3574a76a2bd33a6d8002ef7d1460d973b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_hq84czurt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_hq84czurt();
cov_hq84czurt().s[0]++;
var fetchNotifications = exports.fetchNotifications = function () {
  var _ref = (0, _asyncToGenerator2.default)(function* (dispatch) {
    cov_hq84czurt().f[0]++;
    cov_hq84czurt().s[1]++;
    try {
      cov_hq84czurt().s[2]++;
      dispatch({
        type: _index.ActionType.SET_LOADING,
        payload: true
      });
      var response = (cov_hq84czurt().s[3]++, yield fetch('/api/notifications', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      cov_hq84czurt().s[4]++;
      if (!response.ok) {
        cov_hq84czurt().b[0][0]++;
        cov_hq84czurt().s[5]++;
        throw new Error('알림을 가져오는데 실패했습니다.');
      } else {
        cov_hq84czurt().b[0][1]++;
      }
      var data = (cov_hq84czurt().s[6]++, yield response.json());
      cov_hq84czurt().s[7]++;
      data.forEach(function (notification) {
        cov_hq84czurt().f[1]++;
        cov_hq84czurt().s[8]++;
        dispatch({
          type: _index.ActionType.ADD_NOTIFICATION,
          payload: notification
        });
      });
      cov_hq84czurt().s[9]++;
      return data;
    } catch (error) {
      var appError = (cov_hq84czurt().s[10]++, (0, _error.handleApiError)(error));
      cov_hq84czurt().s[11]++;
      dispatch({
        type: _index.ActionType.SET_ERROR,
        payload: appError.message
      });
      cov_hq84czurt().s[12]++;
      throw appError;
    } finally {
      cov_hq84czurt().s[13]++;
      dispatch({
        type: _index.ActionType.SET_LOADING,
        payload: false
      });
    }
  });
  return function fetchNotifications(_x) {
    return _ref.apply(this, arguments);
  };
}();
cov_hq84czurt().s[14]++;
var markNotificationAsRead = exports.markNotificationAsRead = function () {
  var _ref2 = (0, _asyncToGenerator2.default)(function* (dispatch, notificationId) {
    cov_hq84czurt().f[2]++;
    cov_hq84czurt().s[15]++;
    try {
      cov_hq84czurt().s[16]++;
      dispatch({
        type: _index.ActionType.SET_LOADING,
        payload: true
      });
      var response = (cov_hq84czurt().s[17]++, yield fetch(`/api/notifications/${notificationId}/read`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      cov_hq84czurt().s[18]++;
      if (!response.ok) {
        cov_hq84czurt().b[1][0]++;
        cov_hq84czurt().s[19]++;
        throw new Error('알림을 읽음 표시하는데 실패했습니다.');
      } else {
        cov_hq84czurt().b[1][1]++;
      }
      cov_hq84czurt().s[20]++;
      dispatch({
        type: _index.ActionType.REMOVE_NOTIFICATION,
        payload: notificationId
      });
      var updatedNotification = (cov_hq84czurt().s[21]++, yield response.json());
      cov_hq84czurt().s[22]++;
      dispatch({
        type: _index.ActionType.ADD_NOTIFICATION,
        payload: updatedNotification
      });
      cov_hq84czurt().s[23]++;
      return updatedNotification;
    } catch (error) {
      var appError = (cov_hq84czurt().s[24]++, (0, _error.handleApiError)(error));
      cov_hq84czurt().s[25]++;
      dispatch({
        type: _index.ActionType.SET_ERROR,
        payload: appError.message
      });
      cov_hq84czurt().s[26]++;
      throw appError;
    } finally {
      cov_hq84czurt().s[27]++;
      dispatch({
        type: _index.ActionType.SET_LOADING,
        payload: false
      });
    }
  });
  return function markNotificationAsRead(_x2, _x3) {
    return _ref2.apply(this, arguments);
  };
}();
cov_hq84czurt().s[28]++;
var markAllNotificationsAsRead = exports.markAllNotificationsAsRead = function () {
  var _ref3 = (0, _asyncToGenerator2.default)(function* (dispatch) {
    cov_hq84czurt().f[3]++;
    cov_hq84czurt().s[29]++;
    try {
      cov_hq84czurt().s[30]++;
      dispatch({
        type: _index.ActionType.SET_LOADING,
        payload: true
      });
      var response = (cov_hq84czurt().s[31]++, yield fetch('/api/notifications/read-all', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      cov_hq84czurt().s[32]++;
      if (!response.ok) {
        cov_hq84czurt().b[2][0]++;
        cov_hq84czurt().s[33]++;
        throw new Error('모든 알림을 읽음 표시하는데 실패했습니다.');
      } else {
        cov_hq84czurt().b[2][1]++;
      }
      cov_hq84czurt().s[34]++;
      dispatch({
        type: _index.ActionType.CLEAR_NOTIFICATIONS
      });
      var updatedNotifications = (cov_hq84czurt().s[35]++, yield response.json());
      cov_hq84czurt().s[36]++;
      updatedNotifications.forEach(function (notification) {
        cov_hq84czurt().f[4]++;
        cov_hq84czurt().s[37]++;
        dispatch({
          type: _index.ActionType.ADD_NOTIFICATION,
          payload: notification
        });
      });
      cov_hq84czurt().s[38]++;
      return updatedNotifications;
    } catch (error) {
      var appError = (cov_hq84czurt().s[39]++, (0, _error.handleApiError)(error));
      cov_hq84czurt().s[40]++;
      dispatch({
        type: _index.ActionType.SET_ERROR,
        payload: appError.message
      });
      cov_hq84czurt().s[41]++;
      throw appError;
    } finally {
      cov_hq84czurt().s[42]++;
      dispatch({
        type: _index.ActionType.SET_LOADING,
        payload: false
      });
    }
  });
  return function markAllNotificationsAsRead(_x4) {
    return _ref3.apply(this, arguments);
  };
}();
cov_hq84czurt().s[43]++;
var deleteNotification = exports.deleteNotification = function () {
  var _ref4 = (0, _asyncToGenerator2.default)(function* (dispatch, notificationId) {
    cov_hq84czurt().f[5]++;
    cov_hq84czurt().s[44]++;
    try {
      cov_hq84czurt().s[45]++;
      dispatch({
        type: _index.ActionType.SET_LOADING,
        payload: true
      });
      var response = (cov_hq84czurt().s[46]++, yield fetch(`/api/notifications/${notificationId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      cov_hq84czurt().s[47]++;
      if (!response.ok) {
        cov_hq84czurt().b[3][0]++;
        cov_hq84czurt().s[48]++;
        throw new Error('알림을 삭제하는데 실패했습니다.');
      } else {
        cov_hq84czurt().b[3][1]++;
      }
      cov_hq84czurt().s[49]++;
      dispatch({
        type: _index.ActionType.REMOVE_NOTIFICATION,
        payload: notificationId
      });
      cov_hq84czurt().s[50]++;
      return true;
    } catch (error) {
      var appError = (cov_hq84czurt().s[51]++, (0, _error.handleApiError)(error));
      cov_hq84czurt().s[52]++;
      dispatch({
        type: _index.ActionType.SET_ERROR,
        payload: appError.message
      });
      cov_hq84czurt().s[53]++;
      throw appError;
    } finally {
      cov_hq84czurt().s[54]++;
      dispatch({
        type: _index.ActionType.SET_LOADING,
        payload: false
      });
    }
  });
  return function deleteNotification(_x5, _x6) {
    return _ref4.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,