cc1721325ac4524c813386e5ac355aee
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withErrorHandling = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function cov_14xf1e2q62() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\hoc\\withErrorHandling.tsx";
  var hash = "2e51fcb4ac1d0b0f216b832b29cad7b468145104";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\hoc\\withErrorHandling.tsx",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 33
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "1": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "2": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 29,
          column: 8
        }
      },
      "3": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "4": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 35
        }
      },
      "5": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 50
        }
      },
      "6": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "7": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "8": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 65,
          column: 7
        }
      },
      "9": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 64,
          column: 10
        }
      },
      "10": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 50
        }
      },
      "11": {
        start: {
          line: 71,
          column: 17
        },
        end: {
          line: 105,
          column: 4
        }
      },
      "12": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "13": {
        start: {
          line: 114,
          column: 2
        },
        end: {
          line: 114,
          column: 79
        }
      },
      "14": {
        start: {
          line: 116,
          column: 2
        },
        end: {
          line: 116,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 15,
            column: 34
          }
        },
        loc: {
          start: {
            line: 17,
            column: 23
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 83
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 64
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 18
          }
        },
        loc: {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 41
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 13
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 49
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "1": {
        loc: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 15
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 32
          }
        }, {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 25
          }
        }, {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 15
          }
        }],
        line: 109
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2e51fcb4ac1d0b0f216b832b29cad7b468145104"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_14xf1e2q62 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14xf1e2q62();
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
cov_14xf1e2q62().s[0]++;
var withErrorHandling = exports.withErrorHandling = function withErrorHandling(WrappedComponent) {
  cov_14xf1e2q62().f[0]++;
  var WithErrorHandling = function (_Component) {
    function WithErrorHandling(props) {
      var _this;
      (0, _classCallCheck2.default)(this, WithErrorHandling);
      cov_14xf1e2q62().f[1]++;
      cov_14xf1e2q62().s[1]++;
      _this = _callSuper(this, WithErrorHandling, [props]);
      _this.resetError = (cov_14xf1e2q62().s[6]++, function () {
        cov_14xf1e2q62().f[4]++;
        cov_14xf1e2q62().s[7]++;
        _this.setState({
          hasError: false,
          error: null,
          errorInfo: null
        });
      });
      cov_14xf1e2q62().s[2]++;
      _this.state = {
        hasError: false,
        error: null,
        errorInfo: null
      };
      return _this;
    }
    (0, _inherits2.default)(WithErrorHandling, _Component);
    return (0, _createClass2.default)(WithErrorHandling, [{
      key: "componentDidCatch",
      value: function componentDidCatch(error, errorInfo) {
        cov_14xf1e2q62().f[3]++;
        cov_14xf1e2q62().s[4]++;
        this.setState({
          errorInfo: errorInfo
        });
        cov_14xf1e2q62().s[5]++;
        console.error('컴포넌트 오류:', error, errorInfo);
      }
    }, {
      key: "render",
      value: function render() {
        cov_14xf1e2q62().f[5]++;
        cov_14xf1e2q62().s[8]++;
        if (this.state.hasError) {
          var _this$state$error;
          cov_14xf1e2q62().b[0][0]++;
          cov_14xf1e2q62().s[9]++;
          return (0, _jsxRuntime.jsxs)(_reactNative.View, {
            style: styles.errorContainer,
            children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: styles.errorTitle,
              children: "\uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4"
            }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: styles.errorDescription,
              children: "\uCEF4\uD3EC\uB10C\uD2B8 \uB80C\uB354\uB9C1 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uB2E4\uC2DC \uC2DC\uB3C4\uD574 \uC8FC\uC138\uC694."
            }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
              style: styles.errorMessage,
              children: (_this$state$error = this.state.error) == null ? void 0 : _this$state$error.toString()
            }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
              style: styles.button,
              onPress: this.resetError,
              children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
                style: styles.buttonText,
                children: "\uB2E4\uC2DC \uC2DC\uB3C4"
              })
            })]
          });
        } else {
          cov_14xf1e2q62().b[0][1]++;
        }
        cov_14xf1e2q62().s[10]++;
        return (0, _jsxRuntime.jsx)(WrappedComponent, Object.assign({}, this.props));
      }
    }], [{
      key: "getDerivedStateFromError",
      value: function getDerivedStateFromError(error) {
        cov_14xf1e2q62().f[2]++;
        cov_14xf1e2q62().s[3]++;
        return {
          hasError: true,
          error: error
        };
      }
    }]);
  }(_react.Component);
  var styles = (cov_14xf1e2q62().s[11]++, _reactNative.StyleSheet.create({
    errorContainer: {
      padding: 20,
      alignItems: 'center',
      justifyContent: 'center'
    },
    errorTitle: {
      fontSize: 18,
      fontWeight: 'bold',
      marginBottom: 10,
      color: 'red'
    },
    errorDescription: {
      fontSize: 14,
      marginBottom: 15,
      textAlign: 'center'
    },
    errorMessage: {
      fontSize: 12,
      marginBottom: 20,
      color: '#666',
      padding: 10,
      backgroundColor: '#f8f8f8',
      width: '100%'
    },
    button: {
      backgroundColor: '#2196F3',
      padding: 10,
      borderRadius: 5
    },
    buttonText: {
      color: 'white',
      fontWeight: 'bold'
    }
  }));
  var wrappedComponentName = (cov_14xf1e2q62().s[12]++, (cov_14xf1e2q62().b[1][0]++, WrappedComponent.displayName) || (cov_14xf1e2q62().b[1][1]++, WrappedComponent.name) || (cov_14xf1e2q62().b[1][2]++, 'Component'));
  cov_14xf1e2q62().s[13]++;
  WithErrorHandling.displayName = `withErrorHandling(${wrappedComponentName})`;
  cov_14xf1e2q62().s[14]++;
  return WithErrorHandling;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,