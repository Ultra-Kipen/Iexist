2f98bfb82c2ad04cfb6fde7d65acce7d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLabelSizeWeb = exports.getFabStyle = exports.getFABGroupColors = exports.getFABColors = exports.getExtendedFabStyle = exports.getCombinedStyles = void 0;
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _colors = require("../../styles/themes/v2/colors");
var _getContrastingColor = _interopRequireDefault(require("../../utils/getContrastingColor"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var getCombinedStyles = function getCombinedStyles(_ref) {
  var isAnimatedFromRight = _ref.isAnimatedFromRight,
    isIconStatic = _ref.isIconStatic,
    distance = _ref.distance,
    animFAB = _ref.animFAB;
  var isRTL = _reactNative.I18nManager.isRTL;
  var defaultPositionStyles = {
    left: -distance,
    right: undefined
  };
  var combinedStyles = {
    innerWrapper: Object.assign({}, defaultPositionStyles),
    iconWrapper: Object.assign({}, defaultPositionStyles),
    absoluteFill: {}
  };
  var animatedFromRight = isAnimatedFromRight && !isRTL;
  var animatedFromRightRTL = isAnimatedFromRight && isRTL;
  var animatedFromLeft = !isAnimatedFromRight && !isRTL;
  var animatedFromLeftRTL = !isAnimatedFromRight && isRTL;
  if (animatedFromRight) {
    combinedStyles.innerWrapper.transform = [{
      translateX: animFAB.interpolate({
        inputRange: [distance, 0],
        outputRange: [distance, 0]
      })
    }];
    combinedStyles.iconWrapper.transform = [{
      translateX: isIconStatic ? 0 : animFAB
    }];
    combinedStyles.absoluteFill.transform = [{
      translateX: animFAB.interpolate({
        inputRange: [distance, 0],
        outputRange: [Math.abs(distance) / 2, Math.abs(distance)]
      })
    }];
  } else if (animatedFromRightRTL) {
    combinedStyles.iconWrapper.transform = [{
      translateX: isIconStatic ? 0 : animFAB.interpolate({
        inputRange: [distance, 0],
        outputRange: [-distance, 0]
      })
    }];
    combinedStyles.innerWrapper.transform = [{
      translateX: animFAB.interpolate({
        inputRange: [distance, 0],
        outputRange: [-distance, 0]
      })
    }];
    combinedStyles.absoluteFill.transform = [{
      translateX: animFAB.interpolate({
        inputRange: [distance, 0],
        outputRange: [0, distance]
      })
    }];
  } else if (animatedFromLeft) {
    combinedStyles.iconWrapper.transform = [{
      translateX: isIconStatic ? distance : animFAB.interpolate({
        inputRange: [0, distance],
        outputRange: [distance, distance * 2]
      })
    }];
    combinedStyles.innerWrapper.transform = [{
      translateX: animFAB
    }];
    combinedStyles.absoluteFill.transform = [{
      translateX: animFAB.interpolate({
        inputRange: [0, distance],
        outputRange: [0, Math.abs(distance) / 2]
      })
    }];
  } else if (animatedFromLeftRTL) {
    combinedStyles.iconWrapper.transform = [{
      translateX: isIconStatic ? animFAB.interpolate({
        inputRange: [0, distance],
        outputRange: [-distance, -distance * 2]
      }) : -distance
    }];
    combinedStyles.innerWrapper.transform = [{
      translateX: animFAB.interpolate({
        inputRange: [0, distance],
        outputRange: [0, -distance]
      })
    }];
    combinedStyles.absoluteFill.transform = [{
      translateX: animFAB.interpolate({
        inputRange: [0, distance],
        outputRange: [0, -distance]
      })
    }];
  }
  return combinedStyles;
};
exports.getCombinedStyles = getCombinedStyles;
var getBackgroundColor = function getBackgroundColor(_ref2) {
  var _theme$colors;
  var theme = _ref2.theme,
    isVariant = _ref2.isVariant,
    disabled = _ref2.disabled,
    customBackgroundColor = _ref2.customBackgroundColor;
  if (customBackgroundColor && !disabled) {
    return customBackgroundColor;
  }
  if (theme.isV3) {
    if (disabled) {
      return theme.colors.surfaceDisabled;
    }
    if (isVariant('primary')) {
      return theme.colors.primaryContainer;
    }
    if (isVariant('secondary')) {
      return theme.colors.secondaryContainer;
    }
    if (isVariant('tertiary')) {
      return theme.colors.tertiaryContainer;
    }
    if (isVariant('surface')) {
      return theme.colors.elevation.level3;
    }
  }
  if (disabled) {
    if (theme.dark) {
      return (0, _color.default)(_colors.white).alpha(0.12).rgb().string();
    }
    return (0, _color.default)(_colors.black).alpha(0.12).rgb().string();
  }
  return (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.accent;
};
var getForegroundColor = function getForegroundColor(_ref3) {
  var theme = _ref3.theme,
    isVariant = _ref3.isVariant,
    disabled = _ref3.disabled,
    backgroundColor = _ref3.backgroundColor,
    customColor = _ref3.customColor;
  if (typeof customColor !== 'undefined' && !disabled) {
    return customColor;
  }
  if (theme.isV3) {
    if (disabled) {
      return theme.colors.onSurfaceDisabled;
    }
    if (isVariant('primary')) {
      return theme.colors.onPrimaryContainer;
    }
    if (isVariant('secondary')) {
      return theme.colors.onSecondaryContainer;
    }
    if (isVariant('tertiary')) {
      return theme.colors.onTertiaryContainer;
    }
    if (isVariant('surface')) {
      return theme.colors.primary;
    }
  }
  if (disabled) {
    if (theme.dark) {
      return (0, _color.default)(_colors.white).alpha(0.32).rgb().string();
    }
    return (0, _color.default)(_colors.black).alpha(0.32).rgb().string();
  }
  if (backgroundColor) {
    return (0, _getContrastingColor.default)(backgroundColor || _colors.white, _colors.white, 'rgba(0, 0, 0, .54)');
  }
  return (0, _getContrastingColor.default)(_colors.white, _colors.white, 'rgba(0, 0, 0, .54)');
};
var getFABColors = function getFABColors(_ref4) {
  var theme = _ref4.theme,
    variant = _ref4.variant,
    disabled = _ref4.disabled,
    customColor = _ref4.customColor,
    customBackgroundColor = _ref4.customBackgroundColor,
    customRippleColor = _ref4.customRippleColor;
  var isVariant = function isVariant(variantToCompare) {
    return variant === variantToCompare;
  };
  var baseFABColorProps = {
    theme: theme,
    isVariant: isVariant,
    disabled: disabled
  };
  var backgroundColor = getBackgroundColor(Object.assign({}, baseFABColorProps, {
    customBackgroundColor: customBackgroundColor
  }));
  var foregroundColor = getForegroundColor(Object.assign({}, baseFABColorProps, {
    customColor: customColor,
    backgroundColor: backgroundColor
  }));
  return {
    backgroundColor: backgroundColor,
    foregroundColor: foregroundColor,
    rippleColor: customRippleColor || (0, _color.default)(foregroundColor).alpha(0.12).rgb().string()
  };
};
exports.getFABColors = getFABColors;
var getLabelColor = function getLabelColor(_ref5) {
  var theme = _ref5.theme;
  if (theme.isV3) {
    return theme.colors.onSurface;
  }
  if (theme.dark) {
    return theme.colors.text;
  }
  return (0, _color.default)(theme.colors.text).fade(0.54).rgb().string();
};
var getBackdropColor = function getBackdropColor(_ref6) {
  var _theme$colors2;
  var theme = _ref6.theme,
    customBackdropColor = _ref6.customBackdropColor;
  if (customBackdropColor) {
    return customBackdropColor;
  }
  if (theme.isV3) {
    return (0, _color.default)(theme.colors.background).alpha(0.95).rgb().string();
  }
  return (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.backdrop;
};
var getStackedFABBackgroundColor = function getStackedFABBackgroundColor(_ref7) {
  var theme = _ref7.theme;
  if (theme.isV3) {
    return theme.colors.elevation.level3;
  }
  return theme.colors.surface;
};
var getFABGroupColors = function getFABGroupColors(_ref8) {
  var theme = _ref8.theme,
    customBackdropColor = _ref8.customBackdropColor;
  return {
    labelColor: getLabelColor({
      theme: theme
    }),
    backdropColor: getBackdropColor({
      theme: theme,
      customBackdropColor: customBackdropColor
    }),
    stackedFABBackgroundColor: getStackedFABBackgroundColor({
      theme: theme
    })
  };
};
exports.getFABGroupColors = getFABGroupColors;
var standardSize = {
  height: 56,
  width: 56,
  borderRadius: 28
};
var smallSize = {
  height: 40,
  width: 40,
  borderRadius: 28
};
var v3SmallSize = {
  height: 40,
  width: 40
};
var v3MediumSize = {
  height: 56,
  width: 56
};
var v3LargeSize = {
  height: 96,
  width: 96
};
var getCustomFabSize = function getCustomFabSize(customSize, roundness) {
  return {
    height: customSize,
    width: customSize,
    borderRadius: roundness === 0 ? 0 : customSize / roundness
  };
};
var getFabStyle = function getFabStyle(_ref9) {
  var size = _ref9.size,
    theme = _ref9.theme,
    customSize = _ref9.customSize;
  var isV3 = theme.isV3,
    roundness = theme.roundness;
  if (customSize) return getCustomFabSize(customSize, roundness);
  if (isV3) {
    switch (size) {
      case 'small':
        return Object.assign({}, v3SmallSize, {
          borderRadius: 3 * roundness
        });
      case 'medium':
        return Object.assign({}, v3MediumSize, {
          borderRadius: 4 * roundness
        });
      case 'large':
        return Object.assign({}, v3LargeSize, {
          borderRadius: 7 * roundness
        });
    }
  }
  if (size === 'small') {
    return smallSize;
  }
  return standardSize;
};
exports.getFabStyle = getFabStyle;
var extended = {
  height: 48,
  paddingHorizontal: 16
};
var v3Extended = {
  height: 56,
  borderRadius: 16,
  paddingHorizontal: 16
};
var getExtendedFabDimensions = function getExtendedFabDimensions(customSize) {
  return {
    height: customSize,
    paddingHorizontal: 16
  };
};
var getExtendedFabStyle = function getExtendedFabStyle(_ref10) {
  var customSize = _ref10.customSize,
    theme = _ref10.theme;
  if (customSize) return getExtendedFabDimensions(customSize);
  var isV3 = theme.isV3;
  return isV3 ? v3Extended : extended;
};
exports.getExtendedFabStyle = getExtendedFabStyle;
var cachedContext = null;
var getCanvasContext = function getCanvasContext() {
  if (cachedContext) {
    return cachedContext;
  }
  var canvas = document.createElement('canvas');
  cachedContext = canvas.getContext('2d');
  return cachedContext;
};
var getLabelSizeWeb = function getLabelSizeWeb(ref) {
  var _metrics$fontBounding, _metrics$fontBounding2;
  if (_reactNative.Platform.OS !== 'web' || ref.current === null) {
    return null;
  }
  var canvasContext = getCanvasContext();
  if (!canvasContext) {
    return null;
  }
  var elementStyles = window.getComputedStyle(ref.current);
  canvasContext.font = elementStyles.font;
  var metrics = canvasContext.measureText(ref.current.innerText);
  return {
    width: metrics.width,
    height: ((_metrics$fontBounding = metrics.fontBoundingBoxAscent) != null ? _metrics$fontBounding : 0) + ((_metrics$fontBounding2 = metrics.fontBoundingBoxDescent) != null ? _metrics$fontBounding2 : 0)
  };
};
exports.getLabelSizeWeb = getLabelSizeWeb;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,