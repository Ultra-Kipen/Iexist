445e6667c78dec7a6c38e07443134e1d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _TagSelector = _interopRequireDefault(require("../../src/components/TagSelector"));
var _jsxRuntime = require("react/jsx-runtime");
var mockTags = [{
  id: 1,
  name: '일상'
}, {
  id: 2,
  name: '감정'
}, {
  id: 3,
  name: '고민'
}];
describe('TagSelector 컴포넌트', function () {
  it('태그 목록이 올바르게 렌더링되어야 합니다', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_TagSelector.default, {
        tags: mockTags,
        selectedTags: [],
        onTagSelect: jest.fn()
      })),
      getByText = _render.getByText;
    expect(getByText('일상')).toBeTruthy();
    expect(getByText('감정')).toBeTruthy();
    expect(getByText('고민')).toBeTruthy();
  });
  it('선택된 태그는 시각적으로 구분되어야 합니다', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_TagSelector.default, {
        tags: mockTags,
        selectedTags: [1],
        onTagSelect: jest.fn()
      })),
      getByText = _render2.getByText;
    var selectedTag = getByText('일상');
    expect(selectedTag.props.style).toContainEqual({
      color: '#4A90E2',
      fontWeight: '500'
    });
  });
  it('태그를 클릭하면 onTagSelect 콜백이 호출되어야 합니다', function () {
    var mockOnTagSelect = jest.fn();
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_TagSelector.default, {
        tags: mockTags,
        selectedTags: [],
        onTagSelect: mockOnTagSelect
      })),
      getByText = _render3.getByText;
    var tagTextElement = getByText('감정');
    _reactNative.fireEvent.press(tagTextElement);
    expect(mockOnTagSelect).toHaveBeenCalled();
  });
  it('allowCreation=true일 때 태그 생성 UI가 표시되어야 합니다', function () {
    var mockOnTagCreate = jest.fn();
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_TagSelector.default, {
        tags: mockTags,
        selectedTags: [],
        onTagSelect: jest.fn(),
        allowCreation: true,
        onTagCreate: mockOnTagCreate
      })),
      getByPlaceholderText = _render4.getByPlaceholderText,
      getByText = _render4.getByText;
    expect(getByPlaceholderText('새 태그 입력')).toBeTruthy();
    expect(getByText('추가')).toBeTruthy();
  });
  it('maxSelected를 초과하는 태그를 선택하려 하면 disabled 상태가 되어야 합니다', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_TagSelector.default, {
        tags: mockTags,
        selectedTags: [1, 2],
        onTagSelect: jest.fn(),
        maxSelected: 2
      })),
      getByText = _render5.getByText;
    var disabledTagText = getByText('고민');
    expect(disabledTagText.props.style).toContainEqual({
      color: '#999999'
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,