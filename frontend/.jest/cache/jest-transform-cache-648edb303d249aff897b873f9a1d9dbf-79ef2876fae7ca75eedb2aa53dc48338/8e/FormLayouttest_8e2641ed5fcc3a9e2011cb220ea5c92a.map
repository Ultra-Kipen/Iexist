{"version":3,"names":["_getJestObj","mock","useTheme","theme","colors","background","dark","React","require","ReactNative","__esModule","default","createElement","View","testID","RN","jest","requireActual","Object","assign","Button","_ref","onPress","title","_jsxRuntime","jsx","children","Text","_interopRequireDefault","_react","_reactNative","_reactNative2","_FormLayout","_require","describe","it","_render","render","getByText","expect","toBeTruthy","_render2","loading","getByTestId","queryByText","toBeNull","_render3","header","footer","onSubmitMock","fn","_render4","onSubmit","fireEvent","press","toHaveBeenCalledTimes","_render5","avoidKeyboard","customStyle","backgroundColor","_render6","style","customContentContainerStyle","padding","_render7","contentContainerStyle"],"sources":["FormLayout.test.tsx"],"sourcesContent":["// tests/layouts/FormLayout.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { Text, Button, View } from 'react-native';\r\nimport FormLayout from '../../src/layouts/FormLayout';\r\n\r\n// useTheme 모킹\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#ffffff',\r\n      },\r\n      dark: false,\r\n    },\r\n  }),\r\n}));\r\n\r\n// LoadingIndicator 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => {\r\n  const React = require('react');\r\n  const ReactNative = require('react-native');\r\n  return {\r\n    __esModule: true,\r\n    default: () => React.createElement(ReactNative.View, { testID: 'loading-indicator' }),\r\n  };\r\n});\r\n\r\n// Button 컴포넌트를 모킹하여 테스트 가능하게 만듦\r\njest.mock('react-native', () => {\r\n  const RN = jest.requireActual('react-native');\r\n  \r\n  return {\r\n    ...RN,\r\n    Button: ({ onPress, title, testID }) => (\r\n      <RN.View testID={testID || 'button'}>\r\n        <RN.Text onPress={onPress}>{title}</RN.Text>\r\n      </RN.View>\r\n    ),\r\n  };\r\n});\r\n\r\ndescribe('FormLayout', () => {\r\n  it('renders children correctly', () => {\r\n    const { getByText } = render(\r\n      <FormLayout>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('shows loading indicator when loading is true', () => {\r\n    const { getByTestId, queryByText } = render(\r\n      <FormLayout loading={true}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByTestId('loading-indicator')).toBeTruthy();\r\n    expect(queryByText('폼 내용')).toBeNull();\r\n  });\r\n  \r\n  it('renders header and footer when provided', () => {\r\n    const { getByText } = render(\r\n      <FormLayout\r\n        header={<Text>폼 헤더</Text>}\r\n        footer={<Text>폼 푸터</Text>}\r\n      >\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 헤더')).toBeTruthy();\r\n    expect(getByText('폼 푸터')).toBeTruthy();\r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('calls onSubmit when form is submitted via footer button', () => {\r\n    const onSubmitMock = jest.fn();\r\n    \r\n    // testID를 추가하여 버튼을 찾기 쉽게 함\r\n    const { getByText, getByTestId } = render(\r\n      <FormLayout\r\n        onSubmit={onSubmitMock}\r\n        footer={<Button testID=\"submit-button\" title=\"제출\" onPress={onSubmitMock} />}\r\n      >\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    // 텍스트로 버튼을 찾아 클릭\r\n    fireEvent.press(getByText('제출'));\r\n    expect(onSubmitMock).toHaveBeenCalledTimes(1);\r\n    \r\n    // 또는 testID로 버튼을 찾을 수도 있음\r\n    // const submitButton = getByTestId('submit-button');\r\n    // fireEvent.press(submitButton);\r\n    // expect(onSubmitMock).toHaveBeenCalledTimes(2);\r\n  });\r\n  \r\n  it('renders without KeyboardAvoidingView when avoidKeyboard is false', () => {\r\n    const { getByText } = render(\r\n      <FormLayout avoidKeyboard={false}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('applies custom style when provided', () => {\r\n    const customStyle = { backgroundColor: 'red' };\r\n    const { getByText } = render(\r\n      <FormLayout style={customStyle}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('applies custom contentContainerStyle when provided', () => {\r\n    const customContentContainerStyle = { padding: 20 };\r\n    const { getByText } = render(\r\n      <FormLayout contentContainerStyle={customContentContainerStyle}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}