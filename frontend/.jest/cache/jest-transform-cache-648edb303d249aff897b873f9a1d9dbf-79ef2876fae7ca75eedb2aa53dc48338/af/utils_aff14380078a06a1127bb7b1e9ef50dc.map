{"version":3,"names":["_reactNative","require","_handlersRegistry","_utils","_RNGestureHandlerModule","_interopRequireDefault","_ghQueueMicrotask","isConfigParam","param","name","undefined","Object","filterConfig","props","validProps","defaults","arguments","length","filteredConfig","assign","key","value","transformIntoHandlerTags","top","left","bottom","right","handlerIDs","toArray","Platform","OS","map","_ref","current","filter","handle","handlerID","_handlerID$current","handlerIDToTag","handlerTag","findNodeHandle","node","flushOperationsScheduled","scheduleFlushOperations","ghQueueMicrotask","default","flushOperations"],"sources":["utils.ts"],"sourcesContent":["import * as React from 'react';\nimport { Platform, findNodeHandle as findNodeHandleRN } from 'react-native';\nimport { handlerIDToTag } from './handlersRegistry';\nimport { toArray } from '../utils';\nimport RNGestureHandlerModule from '../RNGestureHandlerModule';\nimport { ghQueueMicrotask } from '../ghQueueMicrotask';\n\nfunction isConfigParam(param: unknown, name: string) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) ||\n      !('__isNative' in (param as Record<string, unknown>))) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nexport function filterConfig(\n  props: Record<string, unknown>,\n  validProps: string[],\n  defaults: Record<string, unknown> = {}\n) {\n  const filteredConfig = { ...defaults };\n  for (const key of validProps) {\n    let value = props[key];\n    if (isConfigParam(value, key)) {\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop' && typeof value !== 'object') {\n        value = { top: value, left: value, bottom: value, right: value };\n      }\n      filteredConfig[key] = value;\n    }\n  }\n  return filteredConfig;\n}\n\nexport function transformIntoHandlerTags(handlerIDs: any) {\n  handlerIDs = toArray(handlerIDs);\n\n  if (Platform.OS === 'web') {\n    return handlerIDs\n      .map(({ current }: { current: any }) => current)\n      .filter((handle: any) => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      (handlerID: any) =>\n        handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1\n    )\n    .filter((handlerTag: number) => handlerTag > 0);\n}\n\nexport function findNodeHandle(\n  node: null | number | React.Component<any, any> | React.ComponentClass<any>\n): null | number | React.Component<any, any> | React.ComponentClass<any> {\n  if (Platform.OS === 'web') {\n    return node;\n  }\n  return findNodeHandleRN(node);\n}\nlet flushOperationsScheduled = false;\n\nexport function scheduleFlushOperations() {\n  if (!flushOperationsScheduled) {\n    flushOperationsScheduled = true;\n    ghQueueMicrotask(() => {\n      RNGestureHandlerModule.flushOperations();\n\n      flushOperationsScheduled = false;\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}