f1dfa3afff48947ea622c2ed90071170
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _useTheme = require("../hooks/useTheme");
var _LoadingIndicator = _interopRequireDefault(require("../components/LoadingIndicator"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1xy2nv3p9x() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\layouts\\FormLayout.tsx";
  var hash = "c1245369485e7df2bca538448c8ba7a15a4ed28e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\layouts\\FormLayout.tsx",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 46
        },
        end: {
          line: 103,
          column: 1
        }
      },
      "1": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "2": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 58,
          column: 7
        }
      },
      "3": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "4": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 83,
          column: 6
        }
      },
      "5": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 102,
          column: 4
        }
      },
      "6": {
        start: {
          line: 105,
          column: 15
        },
        end: {
          line: 126,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 46
          },
          end: {
            line: 30,
            column: 47
          }
        },
        loc: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 17
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 2
          },
          end: {
            line: 38,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 38,
            column: 22
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 7
          },
          end: {
            line: 45,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 7
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 69
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 49,
            column: 39
          }
        }, {
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 49,
            column: 50
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 7
          },
          end: {
            line: 57,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 7
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 15
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 18
          },
          end: {
            line: 70,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 42
          },
          end: {
            line: 70,
            column: 51
          }
        }, {
          start: {
            line: 70,
            column: 54
          },
          end: {
            line: 70,
            column: 62
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 56
          },
          end: {
            line: 71,
            column: 58
          }
        }, {
          start: {
            line: 71,
            column: 61
          },
          end: {
            line: 71,
            column: 62
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 124,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 43
          },
          end: {
            line: 124,
            column: 45
          }
        }, {
          start: {
            line: 124,
            column: 48
          },
          end: {
            line: 124,
            column: 50
          }
        }],
        line: 124
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c1245369485e7df2bca538448c8ba7a15a4ed28e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1xy2nv3p9x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xy2nv3p9x();
cov_1xy2nv3p9x().s[0]++;
var FormLayout = function FormLayout(_ref) {
  var children = _ref.children,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? (cov_1xy2nv3p9x().b[0][0]++, false) : _ref$loading,
    style = _ref.style,
    contentContainerStyle = _ref.contentContainerStyle,
    header = _ref.header,
    footer = _ref.footer,
    onSubmit = _ref.onSubmit,
    _ref$avoidKeyboard = _ref.avoidKeyboard,
    avoidKeyboard = _ref$avoidKeyboard === void 0 ? (cov_1xy2nv3p9x().b[1][0]++, true) : _ref$avoidKeyboard;
  cov_1xy2nv3p9x().f[0]++;
  var _ref2 = (cov_1xy2nv3p9x().s[1]++, (0, _useTheme.useTheme)()),
    theme = _ref2.theme;
  var content = (cov_1xy2nv3p9x().s[2]++, (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [(cov_1xy2nv3p9x().b[2][0]++, header) && (cov_1xy2nv3p9x().b[2][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.headerContainer,
      children: header
    })), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: [styles.formContainer, contentContainerStyle],
      children: loading ? (cov_1xy2nv3p9x().b[3][0]++, (0, _jsxRuntime.jsx)(_LoadingIndicator.default, {})) : (cov_1xy2nv3p9x().b[3][1]++, children)
    }), (cov_1xy2nv3p9x().b[4][0]++, footer) && (cov_1xy2nv3p9x().b[4][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.footerContainer,
      children: footer
    }))]
  }));
  cov_1xy2nv3p9x().s[3]++;
  if (avoidKeyboard) {
    cov_1xy2nv3p9x().b[5][0]++;
    cov_1xy2nv3p9x().s[4]++;
    return (0, _jsxRuntime.jsx)(_reactNative.KeyboardAvoidingView, {
      style: [styles.container, {
        backgroundColor: theme.colors.background
      }, style],
      behavior: _reactNative.Platform.OS === 'ios' ? (cov_1xy2nv3p9x().b[6][0]++, 'padding') : (cov_1xy2nv3p9x().b[6][1]++, 'height'),
      keyboardVerticalOffset: _reactNative.Platform.OS === 'ios' ? (cov_1xy2nv3p9x().b[7][0]++, 64) : (cov_1xy2nv3p9x().b[7][1]++, 0),
      children: (0, _jsxRuntime.jsx)(_reactNative.TouchableWithoutFeedback, {
        onPress: _reactNative.Keyboard.dismiss,
        children: (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
          contentContainerStyle: styles.scrollViewContent,
          keyboardShouldPersistTaps: "handled",
          showsVerticalScrollIndicator: false,
          children: content
        })
      })
    });
  } else {
    cov_1xy2nv3p9x().b[5][1]++;
  }
  cov_1xy2nv3p9x().s[5]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: [styles.container, {
      backgroundColor: theme.colors.background
    }, style],
    children: (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
      contentContainerStyle: styles.scrollViewContent,
      keyboardShouldPersistTaps: "handled",
      showsVerticalScrollIndicator: false,
      children: content
    })
  });
};
var styles = (cov_1xy2nv3p9x().s[6]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  scrollViewContent: {
    flexGrow: 1,
    paddingBottom: 20
  },
  headerContainer: {
    width: '100%',
    marginBottom: 20
  },
  formContainer: {
    flex: 1,
    padding: 16
  },
  footerContainer: {
    width: '100%',
    padding: 16,
    paddingBottom: _reactNative.Platform.OS === 'ios' ? (cov_1xy2nv3p9x().b[8][0]++, 20) : (cov_1xy2nv3p9x().b[8][1]++, 16)
  }
}));
var _default = exports.default = FormLayout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,