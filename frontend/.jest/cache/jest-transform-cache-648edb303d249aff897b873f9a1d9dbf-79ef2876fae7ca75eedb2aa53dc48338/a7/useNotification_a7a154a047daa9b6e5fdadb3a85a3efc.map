{"version":3,"names":["_react","require","_NotificationContext","_notificationService","_interopRequireDefault","cov_2hi76zudlv","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","useNotificationManager","exports","_ref","useState","_ref2","_slicedToArray2","default","loading","setLoading","_ref3","_ref4","error","setError","_ref5","useNotificationContext","notifications","unreadCount","contextFetchNotifications","fetchNotifications","useCallback","_ref6","_asyncToGenerator2","page","limit","response","notificationService","getNotifications","data","err","errorMsg","Error","message","_x","_x2","apply","arguments","markAsRead","markAllAsRead","deleteNotification","_default"],"sources":["useNotification.ts"],"sourcesContent":["// hooks/useNotification.ts\r\n// 알림 관리를 위한 커스텀 훅\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { useNotification as useNotificationContext } from '../contexts/NotificationContext';\r\nimport notificationService from '../services/api/notificationService';\r\n\r\n// 이 훅은 기존 useNotification과 구분하기 위해 다른 이름으로 export\r\nexport const useNotificationManager = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // 컨텍스트에서 제공하는 기존 useNotification 훅을 사용\r\n  const {\r\n    notifications,\r\n    unreadCount,\r\n    fetchNotifications: contextFetchNotifications\r\n  } = useNotificationContext();\r\n  \r\n  // 페이지네이션이 필요한 경우의 확장된 fetchNotifications\r\n  const fetchNotifications = useCallback(async (page?: number, limit?: number) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // 옵셔널 파라미터로 변경하여 notificationService가 기본값을 처리하도록 함\r\n      const response = await notificationService.getNotifications({ page, limit });\r\n      await contextFetchNotifications(); // 컨텍스트의 알림 업데이트\r\n      \r\n      setLoading(false);\r\n      return response.data;\r\n    } catch (err) {\r\n      setLoading(false);\r\n      const errorMsg = err instanceof Error ? err.message : '알림을 불러오는 중 오류가 발생했습니다.';\r\n      setError(errorMsg);\r\n      throw err;\r\n    }\r\n  }, [contextFetchNotifications]);\r\n  \r\n  // 컨텍스트의 기능과 로컬 상태를 함께 반환\r\n  return {\r\n    notifications,\r\n    unreadCount,\r\n    loading,\r\n    error,\r\n    fetchNotifications,\r\n    // 컨텍스트에서 제공하는 기능들\r\n    markAsRead: useNotificationContext().markAsRead,\r\n    markAllAsRead: useNotificationContext().markAllAsRead,\r\n    deleteNotification: useNotificationContext().deleteNotification\r\n  };\r\n};\r\n\r\n// 기존 useNotification은 컨텍스트에서 export된 것을 그대로 재export\r\nexport { useNotification } from '../contexts/NotificationContext';\r\n\r\n// 기본 export는 확장된 버전\r\nexport default useNotificationManager;"],"mappings":"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","ignoreList":[]}