9595d163bf2a9065880fead99c000265
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTheme = exports.ThemeProvider = exports.ThemeContext = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _asyncStorage = _interopRequireDefault(require("@react-native-async-storage/async-storage"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var ThemeContext = exports.ThemeContext = (0, _react.createContext)(undefined);
var useTheme = exports.useTheme = function useTheme() {
  var context = (0, _react.useContext)(ThemeContext);
  if (context === undefined) {
    throw new Error('useTheme는 ThemeProvider 내에서 사용해야 합니다');
  }
  return context;
};
var THEME_STORAGE_KEY = 'app_theme_preference';
var ThemeProvider = exports.ThemeProvider = function ThemeProvider(_ref) {
  var children = _ref.children;
  var systemColorScheme = (0, _reactNative.useColorScheme)();
  var _useState = (0, _react.useState)('system'),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    theme = _useState2[0],
    setThemeState = _useState2[1];
  var _useState3 = (0, _react.useState)(systemColorScheme === 'dark'),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    isDarkMode = _useState4[0],
    setIsDarkMode = _useState4[1];
  var _useState5 = (0, _react.useState)(false),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    isThemeLoaded = _useState6[0],
    setIsThemeLoaded = _useState6[1];
  (0, _react.useEffect)(function () {
    var loadTheme = function () {
      var _ref2 = (0, _asyncToGenerator2.default)(function* () {
        try {
          var savedTheme = yield _asyncStorage.default.getItem(THEME_STORAGE_KEY);
          var validTheme = savedTheme && ['light', 'dark', 'system'].includes(savedTheme) ? savedTheme : 'system';
          setThemeState(validTheme);
          if (validTheme === 'dark') {
            setIsDarkMode(true);
          } else if (validTheme === 'light') {
            setIsDarkMode(false);
          } else {
            setIsDarkMode(systemColorScheme === 'dark');
          }
          setIsThemeLoaded(true);
        } catch (error) {
          console.error('테마 설정을 불러오는데 실패했습니다:', error);
          setThemeState('system');
          setIsDarkMode(systemColorScheme === 'dark');
          setIsThemeLoaded(true);
        }
      });
      return function loadTheme() {
        return _ref2.apply(this, arguments);
      };
    }();
    loadTheme();
  }, [systemColorScheme]);
  var setTheme = function () {
    var _ref3 = (0, _asyncToGenerator2.default)(function* (newTheme) {
      setThemeState(newTheme);
      if (newTheme === 'dark') {
        setIsDarkMode(true);
      } else if (newTheme === 'light') {
        setIsDarkMode(false);
      } else {
        setIsDarkMode(systemColorScheme === 'dark');
      }
      try {
        yield _asyncStorage.default.setItem(THEME_STORAGE_KEY, newTheme);
      } catch (error) {
        console.error('테마 설정 저장에 실패했습니다:', error);
      }
    });
    return function setTheme(_x) {
      return _ref3.apply(this, arguments);
    };
  }();
  var toggleTheme = function toggleTheme() {
    var newTheme = isDarkMode ? 'light' : 'dark';
    setTheme(newTheme);
  };
  if (!isThemeLoaded) {
    return null;
  }
  return (0, _jsxRuntime.jsx)(ThemeContext.Provider, {
    value: {
      theme: theme,
      isDarkMode: isDarkMode,
      setTheme: setTheme,
      toggleTheme: toggleTheme
    },
    children: children
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,