309459b66379fa3d4ba5dbefd8b63cc0
_getJestObj().mock('react-native', function () {
  return {
    Platform: {
      OS: 'ios',
      select: jest.fn()
    },
    StyleSheet: {
      create: jest.fn().mockImplementation(function (styles) {
        return styles;
      })
    },
    View: 'View',
    Text: 'Text',
    Dimensions: {
      get: jest.fn().mockReturnValue({
        width: 375,
        height: 667
      })
    }
  };
});
_getJestObj().mock("../../src/contexts/NotificationContext", function () {
  return {
    useNotification: jest.fn()
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _NotificationBadge = _interopRequireDefault(require("../../src/components/NotificationBadge"));
var _NotificationContext = require("../../src/contexts/NotificationContext");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('NotificationBadge 컴포넌트', function () {
  beforeEach(function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 0
    });
  });
  it('unreadCount가 0이고 showZero가 false이면 배지가 표시되지 않아야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 0
    });
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {
        showZero: false
      })),
      queryByText = _render.queryByText;
    expect(queryByText('0')).toBeNull();
  });
  it('unreadCount가 0이지만 showZero가 true이면 배지가 표시되어야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 0
    });
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {
        showZero: true
      })),
      getByText = _render2.getByText;
    expect(getByText('0')).toBeTruthy();
  });
  it('unreadCount가 있으면 배지에 카운트가 표시되어야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 5
    });
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {})),
      getByText = _render3.getByText;
    expect(getByText('5')).toBeTruthy();
  });
  it('maxCount보다 큰 unreadCount는 maxCount+로 표시되어야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 120
    });
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {
        maxCount: 99
      })),
      getByText = _render4.getByText;
    expect(getByText('99+')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJQbGF0Zm9ybSIsIk9TIiwic2VsZWN0IiwiamVzdCIsImZuIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsIm1vY2tJbXBsZW1lbnRhdGlvbiIsInN0eWxlcyIsIlZpZXciLCJUZXh0IiwiRGltZW5zaW9ucyIsImdldCIsIm1vY2tSZXR1cm5WYWx1ZSIsIndpZHRoIiwiaGVpZ2h0IiwidXNlTm90aWZpY2F0aW9uIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJfcmVhY3ROYXRpdmUiLCJfTm90aWZpY2F0aW9uQmFkZ2UiLCJfTm90aWZpY2F0aW9uQ29udGV4dCIsIl9qc3hSdW50aW1lIiwiX3JlcXVpcmUiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJ1bnJlYWRDb3VudCIsIml0IiwiX3JlbmRlciIsInJlbmRlciIsImpzeCIsImRlZmF1bHQiLCJzaG93WmVybyIsInF1ZXJ5QnlUZXh0IiwiZXhwZWN0IiwidG9CZU51bGwiLCJfcmVuZGVyMiIsImdldEJ5VGV4dCIsInRvQmVUcnV0aHkiLCJfcmVuZGVyMyIsIl9yZW5kZXI0IiwibWF4Q291bnQiXSwic291cmNlcyI6WyJOb3RpZmljYXRpb25CYWRnZS50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBfX1RFU1RTX18vY29tcG9uZW50cy9Ob3RpZmljYXRpb25CYWRnZS50ZXN0LnRzeFxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCBOb3RpZmljYXRpb25CYWRnZSBmcm9tICcuLi8uLi9zcmMvY29tcG9uZW50cy9Ob3RpZmljYXRpb25CYWRnZSc7XHJcbmltcG9ydCB7IHVzZU5vdGlmaWNhdGlvbiB9IGZyb20gJy4uLy4uL3NyYy9jb250ZXh0cy9Ob3RpZmljYXRpb25Db250ZXh0JztcclxuXHJcbi8vIHJlYWN0LW5hdGl2ZSDrqqjtgrlcclxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUnLCAoKSA9PiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIFBsYXRmb3JtOiB7XHJcbiAgICAgIE9TOiAnaW9zJyxcclxuICAgICAgc2VsZWN0OiBqZXN0LmZuKCksXHJcbiAgICB9LFxyXG4gICAgU3R5bGVTaGVldDoge1xyXG4gICAgICBjcmVhdGU6IGplc3QuZm4oKS5tb2NrSW1wbGVtZW50YXRpb24oKHN0eWxlcykgPT4gc3R5bGVzKSxcclxuICAgIH0sXHJcbiAgICBWaWV3OiAnVmlldycsXHJcbiAgICBUZXh0OiAnVGV4dCcsXHJcbiAgICBEaW1lbnNpb25zOiB7XHJcbiAgICAgIGdldDogamVzdC5mbigpLm1vY2tSZXR1cm5WYWx1ZSh7IHdpZHRoOiAzNzUsIGhlaWdodDogNjY3IH0pLFxyXG4gICAgfSxcclxuICB9O1xyXG59KTtcclxuXHJcbi8vIE5vdGlmaWNhdGlvbkNvbnRleHQg66qo7J2YKE1vY2spXHJcbmplc3QubW9jaygnLi4vLi4vc3JjL2NvbnRleHRzL05vdGlmaWNhdGlvbkNvbnRleHQnLCAoKSA9PiAoe1xyXG4gIHVzZU5vdGlmaWNhdGlvbjogamVzdC5mbigpXHJcbn0pKTtcclxuXHJcbmRlc2NyaWJlKCdOb3RpZmljYXRpb25CYWRnZSDsu7Ttj6zrhIztirgnLCAoKSA9PiB7XHJcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAvLyDquLDrs7gg66qo7J2YIOyEpOyglVxyXG4gICAgKHVzZU5vdGlmaWNhdGlvbiBhcyBqZXN0Lk1vY2spLm1vY2tSZXR1cm5WYWx1ZSh7XHJcbiAgICAgIHVucmVhZENvdW50OiAwXHJcbiAgICB9KTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3VucmVhZENvdW506rCAIDDsnbTqs6Agc2hvd1plcm/qsIAgZmFsc2XsnbTrqbQg67Cw7KeA6rCAIO2RnOyLnOuQmOyngCDslYrslYTslbwg7ZWp64uI64ukJywgKCkgPT4ge1xyXG4gICAgKHVzZU5vdGlmaWNhdGlvbiBhcyBqZXN0Lk1vY2spLm1vY2tSZXR1cm5WYWx1ZSh7XHJcbiAgICAgIHVucmVhZENvdW50OiAwXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgY29uc3QgeyBxdWVyeUJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8Tm90aWZpY2F0aW9uQmFkZ2Ugc2hvd1plcm89e2ZhbHNlfSAvPlxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgZXhwZWN0KHF1ZXJ5QnlUZXh0KCcwJykpLnRvQmVOdWxsKCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCd1bnJlYWRDb3VudOqwgCAw7J207KeA66eMIHNob3daZXJv6rCAIHRydWXsnbTrqbQg67Cw7KeA6rCAIO2RnOyLnOuQmOyWtOyVvCDtlanri4jri6QnLCAoKSA9PiB7XHJcbiAgICAodXNlTm90aWZpY2F0aW9uIGFzIGplc3QuTW9jaykubW9ja1JldHVyblZhbHVlKHtcclxuICAgICAgdW5yZWFkQ291bnQ6IDBcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8Tm90aWZpY2F0aW9uQmFkZ2Ugc2hvd1plcm89e3RydWV9IC8+XHJcbiAgICApO1xyXG4gICAgXHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCcwJykpLnRvQmVUcnV0aHkoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3VucmVhZENvdW506rCAIOyeiOycvOuptCDrsLDsp4Dsl5Ag7Lm07Jq07Yq46rCAIO2RnOyLnOuQmOyWtOyVvCDtlanri4jri6QnLCAoKSA9PiB7XHJcbiAgICAodXNlTm90aWZpY2F0aW9uIGFzIGplc3QuTW9jaykubW9ja1JldHVyblZhbHVlKHtcclxuICAgICAgdW5yZWFkQ291bnQ6IDVcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8Tm90aWZpY2F0aW9uQmFkZ2UgLz5cclxuICAgICk7XHJcbiAgICBcclxuICAgIGV4cGVjdChnZXRCeVRleHQoJzUnKSkudG9CZVRydXRoeSgpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnbWF4Q291bnTrs7Tri6Qg7YGwIHVucmVhZENvdW5064qUIG1heENvdW50K+uhnCDtkZzsi5zrkJjslrTslbwg7ZWp64uI64ukJywgKCkgPT4ge1xyXG4gICAgKHVzZU5vdGlmaWNhdGlvbiBhcyBqZXN0Lk1vY2spLm1vY2tSZXR1cm5WYWx1ZSh7XHJcbiAgICAgIHVucmVhZENvdW50OiAxMjBcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8Tm90aWZpY2F0aW9uQmFkZ2UgbWF4Q291bnQ9ezk5fSAvPlxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgnOTkrJykpLnRvQmVUcnV0aHkoKTtcclxuICB9KTtcclxufSk7Il0sIm1hcHBpbmdzIjoiQUFPQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsY0FBYyxFQUFFLFlBQU07RUFDOUIsT0FBTztJQUNMQyxRQUFRLEVBQUU7TUFDUkMsRUFBRSxFQUFFLEtBQUs7TUFDVEMsTUFBTSxFQUFFQyxJQUFJLENBQUNDLEVBQUUsQ0FBQztJQUNsQixDQUFDO0lBQ0RDLFVBQVUsRUFBRTtNQUNWQyxNQUFNLEVBQUVILElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUMsQ0FBQ0csa0JBQWtCLENBQUMsVUFBQ0MsTUFBTTtRQUFBLE9BQUtBLE1BQU07TUFBQTtJQUN6RCxDQUFDO0lBQ0RDLElBQUksRUFBRSxNQUFNO0lBQ1pDLElBQUksRUFBRSxNQUFNO0lBQ1pDLFVBQVUsRUFBRTtNQUNWQyxHQUFHLEVBQUVULElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUMsQ0FBQ1MsZUFBZSxDQUFDO1FBQUVDLEtBQUssRUFBRSxHQUFHO1FBQUVDLE1BQU0sRUFBRTtNQUFJLENBQUM7SUFDNUQ7RUFDRixDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBR0ZqQixXQUFBLEdBQUtDLElBQUksMkNBQTJDO0VBQUEsT0FBTztJ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