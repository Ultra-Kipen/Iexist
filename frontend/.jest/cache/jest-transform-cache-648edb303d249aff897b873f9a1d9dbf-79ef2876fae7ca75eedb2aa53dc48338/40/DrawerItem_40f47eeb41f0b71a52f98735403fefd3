34c1f12ef61bcb271537dbb3ceb273d4
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["icon", "label", "active", "disabled", "theme", "rippleColor", "style", "onPress", "background", "accessibilityLabel", "right", "labelMaxFontSizeMultiplier"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _theming = require("../../core/theming");
var _Icon = _interopRequireDefault(require("../Icon"));
var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));
var _Text = _interopRequireDefault(require("../Typography/Text"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var DrawerItem = function DrawerItem(_ref) {
  var icon = _ref.icon,
    label = _ref.label,
    active = _ref.active,
    disabled = _ref.disabled,
    themeOverrides = _ref.theme,
    customRippleColor = _ref.rippleColor,
    style = _ref.style,
    onPress = _ref.onPress,
    background = _ref.background,
    accessibilityLabel = _ref.accessibilityLabel,
    right = _ref.right,
    labelMaxFontSizeMultiplier = _ref.labelMaxFontSizeMultiplier,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var roundness = theme.roundness,
    isV3 = theme.isV3;
  var backgroundColor = active ? isV3 ? theme.colors.secondaryContainer : (0, _color.default)(theme.colors.primary).alpha(0.12).rgb().string() : undefined;
  var contentColor = active ? isV3 ? theme.colors.onSecondaryContainer : theme.colors.primary : isV3 ? theme.colors.onSurfaceVariant : (0, _color.default)(theme.colors.text).alpha(0.68).rgb().string();
  var labelMargin = icon ? isV3 ? 12 : 32 : 0;
  var borderRadius = (isV3 ? 7 : 1) * roundness;
  var rippleColor = isV3 ? (0, _color.default)(contentColor).alpha(0.12).rgb().string() : undefined;
  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;
  return React.createElement(_reactNative.View, rest, React.createElement(_TouchableRipple.default, {
    borderless: true,
    disabled: disabled,
    background: background,
    onPress: onPress,
    style: [styles.container, {
      backgroundColor: backgroundColor,
      borderRadius: borderRadius
    }, isV3 && styles.v3Container, style],
    accessibilityRole: "button",
    accessibilityState: {
      selected: active
    },
    accessibilityLabel: accessibilityLabel,
    rippleColor: customRippleColor || rippleColor,
    theme: theme
  }, React.createElement(_reactNative.View, {
    style: [styles.wrapper, isV3 && styles.v3Wrapper]
  }, React.createElement(_reactNative.View, {
    style: styles.content
  }, icon ? React.createElement(_Icon.default, {
    source: icon,
    size: 24,
    color: contentColor
  }) : null, React.createElement(_Text.default, {
    variant: "labelLarge",
    selectable: false,
    numberOfLines: 1,
    style: [styles.label, Object.assign({
      color: contentColor,
      marginLeft: labelMargin
    }, font)],
    maxFontSizeMultiplier: labelMaxFontSizeMultiplier
  }, label)), right === null || right === void 0 ? void 0 : right({
    color: contentColor
  }))));
};
DrawerItem.displayName = 'Drawer.Item';
var styles = _reactNative.StyleSheet.create({
  container: {
    marginHorizontal: 10,
    marginVertical: 4
  },
  v3Container: {
    justifyContent: 'center',
    height: 56,
    marginLeft: 12,
    marginRight: 12,
    marginVertical: 0
  },
  wrapper: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 8
  },
  v3Wrapper: {
    marginLeft: 16,
    marginRight: 24,
    padding: 0
  },
  content: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center'
  },
  label: {
    marginRight: 32
  }
});
var _default = DrawerItem;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb2xvciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfdGhlbWluZyIsIl9JY29uIiwiX1RvdWNoYWJsZVJpcHBsZSIsIl9UZXh0Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIkRyYXdlckl0ZW0iLCJfcmVmIiwiaWNvbiIsImxhYmVsIiwiYWN0aXZlIiwiZGlzYWJsZWQiLCJ0aGVtZU92ZXJyaWRlcyIsInRoZW1lIiwiY3VzdG9tUmlwcGxlQ29sb3IiLCJyaXBwbGVDb2xvciIsInN0eWxlIiwib25QcmVzcyIsImJhY2tncm91bmQiLCJhY2Nlc3NpYmlsaXR5TGFiZWwiLCJyaWdodCIsImxhYmVsTWF4Rm9udFNpemVNdWx0aXBsaWVyIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXhjbHVkZWQiLCJ1c2VJbnRlcm5hbFRoZW1lIiwicm91bmRuZXNzIiwiaXNWMyIsImJhY2tncm91bmRDb2xvciIsImNvbG9ycyIsInNlY29uZGFyeUNvbnRhaW5lciIsInByaW1hcnkiLCJhbHBoYSIsInJnYiIsInN0cmluZyIsInVuZGVmaW5lZCIsImNvbnRlbnRDb2xvciIsIm9uU2Vjb25kYXJ5Q29udGFpbmVyIiwib25TdXJmYWNlVmFyaWFudCIsInRleHQiLCJsYWJlbE1hcmdpbiIsImJvcmRlclJhZGl1cyIsImZvbnQiLCJmb250cyIsImxhYmVsTGFyZ2UiLCJtZWRpdW0iLCJjcmVhdGVFbGVtZW50IiwiVmlldyIsImJvcmRlcmxlc3MiLCJzdHlsZXMiLCJjb250YWluZXIiLCJ2M0NvbnRhaW5lciIsImFjY2Vzc2liaWxpdHlSb2xlIiwiYWNjZXNzaWJpbGl0eVN0YXRlIiwic2VsZWN0ZWQiLCJ3cmFwcGVyIiwidjNXcmFwcGVyIiwiY29udGVudCIsInNvdXJjZSIsInNpemUiLCJjb2xvciIsInZhcmlhbnQiLCJzZWxlY3RhYmxlIiwibnVtYmVyT2ZMaW5lcyIsImFzc2lnbiIsIm1hcmdpbkxlZnQiLCJtYXhGb250U2l6ZU11bHRpcGxpZXIiLCJkaXNwbGF5TmFtZSIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJtYXJnaW5Ib3Jpem9udGFsIiwibWFyZ2luVmVydGljYWwiLCJqdXN0aWZ5Q29udGVudCIsImhlaWdodCIsIm1hcmdpblJpZ2h0IiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJwYWRkaW5nIiwiZmxleCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0RyYXdlci9EcmF3ZXJJdGVtLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBVUEsSUFBQUUsTUFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBRUEsSUFBQUksUUFBQSxHQUFBSixPQUFBO0FBRUEsSUFBQUssS0FBQSxHQUFBRixzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQU0sZ0JBQUEsR0FBQUgsc0JBQUEsQ0FBQUgsT0FBQTtBQUNBLElBQUFPLEtBQUEsR0FBQUosc0JBQUEsQ0FBQUgsT0FBQTtBQUFzQyxTQUFBRyx1QkFBQUssR0FBQTtFQUFBLE9BQUFBLEdBQUEsSUFBQUEs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