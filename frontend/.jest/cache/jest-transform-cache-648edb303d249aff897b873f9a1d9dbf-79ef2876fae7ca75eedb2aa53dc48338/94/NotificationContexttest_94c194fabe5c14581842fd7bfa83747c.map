{"version":3,"names":["_getJestObj","mock","getNotifications","jest","fn","markAsRead","markAllAsRead","deleteNotification","_interopRequireDefault","require","_asyncToGenerator2","_react","_react2","_NotificationContext","_notificationService","_jsxRuntime","_require","TestComponent","_useNotification","useNotification","notifications","unreadCount","isLoading","error","jsxs","children","jsx","toString","length","onClick","describe","mockNotifications","id","user_id","content","notification_type","is_read","created_at","beforeEach","useFakeTimers","clearAllMocks","notificationService","mockResolvedValue","data","success","afterEach","runAllTimers","useRealTimers","checkLoadingAndGetTexts","_ref","default","renderResult","waitFor","loadingElement","getByTestId","expect","textContent","toBe","timeout","notificationsCountElement","unreadCountElement","errorElement","loadingText","notificationsCountText","unreadCountText","errorText","_x","apply","arguments","it","setTimeout","render","NotificationProvider","_yield$checkLoadingAn","markReadButton","act","fireEvent","click","toHaveBeenCalledWith","toHaveBeenCalledTimes","markAllReadButton","press","toHaveBeenCalled","deleteButton"],"sources":["NotificationContext.test.tsx"],"sourcesContent":["// __tests__/contexts/NotificationContext.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent, act, waitFor } from '@testing-library/react';\r\nimport { NotificationProvider, useNotification } from '../../src/contexts/NotificationContext';\r\nimport notificationService from '../../src/services/api/notificationService';\r\n\r\n// 모의 알림 서비스\r\njest.mock('../../src/services/api/notificationService', () => ({\r\n  getNotifications: jest.fn(),\r\n  markAsRead: jest.fn(),\r\n  markAllAsRead: jest.fn(),\r\n  deleteNotification: jest.fn(),\r\n}));\r\n\r\nconst TestComponent = () => {\r\n  const { \r\n    notifications, \r\n    unreadCount, \r\n    isLoading, \r\n    error,\r\n    markAsRead,\r\n    markAllAsRead,\r\n    deleteNotification\r\n  } = useNotification();\r\n\r\n  return (\r\n    <div>\r\n      <div data-testid=\"loading\">\r\n        {isLoading ? 'loading' : 'not-loading'}\r\n      </div>\r\n      <div data-testid=\"error\">\r\n        {error || 'no-error'}\r\n      </div>\r\n      <div data-testid=\"unread-count\">\r\n        {unreadCount.toString()}\r\n      </div>\r\n      <div data-testid=\"notifications-count\">\r\n        {notifications.length.toString()}\r\n      </div>\r\n      <button data-testid=\"mark-read\" onClick={() => markAsRead(1)}>Mark Read</button>\r\n      <button data-testid=\"mark-all-read\" onClick={() => markAllAsRead()}>Mark All Read</button>\r\n      <button data-testid=\"delete-notification\" onClick={() => deleteNotification(1)}>Delete</button>\r\n    </div>\r\n  );\r\n};\r\ndescribe('NotificationContext', () => {\r\n  const mockNotifications = [\r\n    {\r\n      id: 1,\r\n      user_id: 1,\r\n      content: 'Test notification 1',\r\n      notification_type: 'like',\r\n      is_read: false,\r\n      created_at: '2024-01-01T00:00:00Z'\r\n    },\r\n    {\r\n      id: 2,\r\n      user_id: 1,\r\n      content: 'Test notification 2',\r\n      notification_type: 'comment',\r\n      is_read: true,\r\n      created_at: '2024-01-02T00:00:00Z'\r\n    }\r\n  ];\r\n\r\n  beforeEach(() => {\r\n    jest.useFakeTimers();\r\n    jest.clearAllMocks();\r\n    \r\n    // getNotifications 모킹\r\n    (notificationService.getNotifications as jest.Mock).mockResolvedValue({\r\n      data: mockNotifications\r\n    });\r\n    \r\n    // markAsRead 모킹\r\n    (notificationService.markAsRead as jest.Mock).mockResolvedValue({\r\n      success: true\r\n    });\r\n    \r\n    // markAllAsRead 모킹\r\n    (notificationService.markAllAsRead as jest.Mock).mockResolvedValue({\r\n      success: true\r\n    });\r\n    \r\n    // deleteNotification 모킹\r\n    (notificationService.deleteNotification as jest.Mock).mockResolvedValue({\r\n      success: true\r\n    });\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.runAllTimers();\r\n    jest.useRealTimers();\r\n  });\r\n\r\n  const checkLoadingAndGetTexts = async (renderResult: ReturnType<typeof render>) => {\r\n    await waitFor(() => {\r\n      const loadingElement = renderResult.getByTestId('loading');\r\n      expect(loadingElement.textContent).toBe('not-loading');\r\n    }, { timeout: 10000 });\r\n  \r\n    const loadingElement = renderResult.getByTestId('loading');\r\n    const notificationsCountElement = renderResult.getByTestId('notifications-count');\r\n    const unreadCountElement = renderResult.getByTestId('unread-count');\r\n    const errorElement = renderResult.getByTestId('error');\r\n  \r\n    return {\r\n      loadingText: loadingElement.textContent || '',\r\n      notificationsCountText: notificationsCountElement.textContent || '',\r\n      unreadCountText: unreadCountElement.textContent || '',\r\n      errorText: errorElement.textContent || ''\r\n    };\r\n  };\r\n  it('초기 상태가 올바르게 설정된다', async () => {\r\n    jest.setTimeout(30000);\r\n\r\n    const renderResult = render(\r\n      <NotificationProvider>\r\n        <TestComponent />\r\n      </NotificationProvider>\r\n    );\r\n\r\n    const { \r\n      loadingText, \r\n      notificationsCountText, \r\n      unreadCountText, \r\n      errorText \r\n    } = await checkLoadingAndGetTexts(renderResult);\r\n\r\n    expect(notificationsCountText).toBe('2');\r\n    expect(unreadCountText).toBe('1');\r\n    expect(errorText).toBe('no-error');\r\n  });\r\n\r\n  it('알림을 읽음 처리할 수 있다', async () => {\r\n    jest.setTimeout(30000);\r\n\r\n    const renderResult = render(\r\n      <NotificationProvider>\r\n        <TestComponent />\r\n      </NotificationProvider>\r\n    );\r\n\r\n    await checkLoadingAndGetTexts(renderResult);\r\n\r\n    const markReadButton = renderResult.getByTestId('mark-read');\r\n    \r\n    await act(async () => {\r\n      fireEvent.click(markReadButton);\r\n    });\r\n\r\n    expect(notificationService.markAsRead).toHaveBeenCalledWith(1);\r\n    expect(notificationService.getNotifications).toHaveBeenCalledTimes(2);\r\n  });\r\n\r\n  it('모든 알림을 읽음 처리할 수 있다', async () => {\r\n    jest.setTimeout(30000);\r\n\r\n    const renderResult = render(\r\n      <NotificationProvider>\r\n        <TestComponent />\r\n      </NotificationProvider>\r\n    );\r\n\r\n    await checkLoadingAndGetTexts(renderResult);\r\n\r\n    const markAllReadButton = renderResult.getByTestId('mark-all-read');\r\n    \r\n    await act(async () => {\r\n      fireEvent.press(markAllReadButton);\r\n    });\r\n\r\n    expect(notificationService.markAllAsRead).toHaveBeenCalled();\r\n    expect(notificationService.getNotifications).toHaveBeenCalledTimes(2);\r\n  });\r\n\r\n  it('알림을 삭제할 수 있다', async () => {\r\n    jest.setTimeout(30000);\r\n\r\n    const renderResult = render(\r\n      <NotificationProvider>\r\n        <TestComponent />\r\n      </NotificationProvider>\r\n    );\r\n\r\n    await checkLoadingAndGetTexts(renderResult);\r\n\r\n    const deleteButton = renderResult.getByTestId('delete-notification');\r\n    \r\n    await act(async () => {\r\n      fireEvent.press(deleteButton);\r\n    });\r\n\r\n    expect(notificationService.deleteNotification).toHaveBeenCalledWith(1);\r\n    expect(notificationService.getNotifications).toHaveBeenCalledTimes(2);\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}