55bd511b0aedf35d00a38556c4804c3f
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SkipEnteringContext = exports.LayoutAnimationConfig = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireWildcard(require("react"));
var _core = require("../core.js");
var _PlatformChecker = require("../PlatformChecker.js");
var _findNodeHandle = require("../platformFunctions/findNodeHandle");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var IS_REACT_19 = (0, _PlatformChecker.isReact19)();
var SkipEnteringContext = exports.SkipEnteringContext = (0, _react.createContext)(null);
function SkipEntering(props) {
  var skipValueRef = (0, _react.useRef)(props.shouldSkip);
  (0, _react.useEffect)(function () {
    skipValueRef.current = false;
  }, [skipValueRef]);
  var Provider = IS_REACT_19 ? SkipEnteringContext : SkipEnteringContext.Provider;
  return (0, _jsxRuntime.jsx)(Provider, {
    value: skipValueRef,
    children: props.children
  });
}
var LayoutAnimationConfig = exports.LayoutAnimationConfig = function (_Component) {
  function LayoutAnimationConfig() {
    (0, _classCallCheck2.default)(this, LayoutAnimationConfig);
    return _callSuper(this, LayoutAnimationConfig, arguments);
  }
  (0, _inherits2.default)(LayoutAnimationConfig, _Component);
  return (0, _createClass2.default)(LayoutAnimationConfig, [{
    key: "getMaybeWrappedChildren",
    value: function getMaybeWrappedChildren() {
      return _react.Children.count(this.props.children) > 1 && this.props.skipExiting ? _react.Children.map(this.props.children, function (child) {
        return (0, _jsxRuntime.jsx)(LayoutAnimationConfig, {
          skipExiting: true,
          children: child
        });
      }) : this.props.children;
    }
  }, {
    key: "setShouldAnimateExiting",
    value: function setShouldAnimateExiting() {
      if (_react.Children.count(this.props.children) === 1) {
        var tag = (0, _findNodeHandle.findNodeHandle)(this);
        if (tag) {
          (0, _core.setShouldAnimateExitingForTag)(tag, !this.props.skipExiting);
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.props.skipExiting !== undefined) {
        this.setShouldAnimateExiting();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.getMaybeWrappedChildren();
      if (this.props.skipEntering === undefined) {
        return children;
      }
      return (0, _jsxRuntime.jsx)(SkipEntering, {
        shouldSkip: this.props.skipEntering,
        children: children
      });
    }
  }]);
}(_react.Component);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU2tpcEVudGVyaW5nQ29udGV4dCIsIkxheW91dEFuaW1hdGlvbkNvbmZpZyIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2dldFByb3RvdHlwZU9mMiIsIl9pbmhlcml0czIiLCJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIl9jb3JlIiwiX1BsYXRmb3JtQ2hlY2tlciIsIl9maW5kTm9kZUhhbmRsZSIsIl9qc3hSdW50aW1lIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsIl9jYWxsU3VwZXIiLCJvIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJJU19SRUFDVF8xOSIsImlzUmVhY3QxOSIsImNyZWF0ZUNvbnRleHQiLCJTa2lwRW50ZXJpbmciLCJwcm9wcyIsInNraXBWYWx1ZVJlZiIsInVzZVJlZiIsInNob3VsZFNraXAiLCJ1c2VFZmZlY3QiLCJjdXJyZW50IiwiUHJvdmlkZXIiLCJqc3giLCJjaGlsZHJlbiIsIl9Db21wb25lbnQiLCJhcmd1bWVudHMiLCJrZXkiLCJnZXRNYXliZVdyYXBwZWRDaGlsZHJlbiIsIkNoaWxkcmVuIiwiY291bnQiLCJza2lwRXhpdGluZyIsIm1hcCIsImNoaWxkIiwic2V0U2hvdWxkQW5pbWF0ZUV4aXRpbmciLCJ0YWciLCJmaW5kTm9kZUhhbmRsZSIsInNldFNob3VsZEFuaW1hdGVFeGl0aW5nRm9yVGFnIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJ1bmRlZmluZWQiLCJyZW5kZXIiLCJza2lwRW50ZXJpbmciLCJDb21wb25lbnQiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50L0xheW91dEFuaW1hdGlvbkNvbmZpZy50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQUEsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBQyxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxLQUFBO0FBQUE7QUFBQUQsT0FBQSxDQUFBRSxtQkFBQSxHQUFBRixPQUFBLENBQUFHLHFCQUFBO0FBQUEsSUFBQUMsZ0JBQUEsR0FBQVIsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFRLGFBQUEsR0FBQVQsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFTLDJCQUFBLEdBQUFWLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBVSxnQkFBQSxHQUFBWCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQVcsVUFBQSxHQUFBWixzQkFBQSxDQUFBQyxPQUFBO0FBRVosSUFBQVksTUFBQSxHQUFBQyx1QkFBQSxDQUFBYixPQUFBO0FBUUEsSUFBQWMsS0FBQSxHQUFBZCxPQUFBO0FBQ0EsSUFBQWUsZ0JBQUEsR0FBQWYsT0FBQTtBQUNBLElBQUFnQixlQUFBLEdBQUFoQixPQUFBO0FBQW9FLElBQUFpQixXQUFBLEdBQUFqQixPQUFBO0FBQUEsU0FBQWtCLHlCQUFBQyxDQUFBLDZCQUFBQyxPQUFBLG1CQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxDQUFBLFdBQUFBLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLEtBQUFGLENBQUE7QUFBQSxTQUFBTix3QkFBQU0sQ0FBQSxFQUFBRSxDQUFBLFNBQUFBLENBQUEsSUFBQUYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJLFVBQUEsU0FBQUosQ0FBQSxlQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFdBQUFLLE9BQUEsRUFBQUwsQ0FBQSxRQUFBRyxDQUFBLEdBQUFKLHdCQUFBLENBQUFHLENBQUEsT0FBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQSxPQUFBUSxDQUFBLEtBQUFDLFNBQUEsVUFBQUMsQ0FBQSxHQUFBNUIsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQTZCLHdCQUFBLFdBQUFDLENBQUEsSUFBQVosQ0FBQSxvQkFBQVksQ0FBQSxPQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWQsQ0FBQSxFQUFBWSxDQUFBLFNBQUFHLENBQUEsR0FBQUwsQ0FBQSxHQUFBNUIsTUFBQSxDQUFBNkIsd0JBQUEsQ0FBQVgsQ0FBQSxFQUFBWSxDQUFBLFVBQUFHLENBQUEsS0FBQUEsQ0FBQSxDQUFBUixHQUFBLElBQUFRLENBQUEsQ0FBQUMsR0FBQSxJQUFBbEMsTUFBQSxDQUFBQyxjQUFBLENBQUF5QixDQUFBLEVBQUFJLENBQUEsRUFBQUcsQ0FBQSxJQUFBUCxDQUFBLENBQUFJLENBQUEsSUFBQVosQ0FBQSxDQUFBWSxDQUFBLFlBQUFKLENBQUEsQ0FBQUgsT0FBQSxHQUFBTCxDQUFBLEVBQUFHLENBQUEsSUFBQUEsQ0FBQSxDQUFBYSxHQUFBLENBQUFoQixDQUFBLEVBQUFRLENBQUEsR0FBQUEsQ0FBQTtBQUFBLFNBQUFTLFdBQUFkLENBQUEsRUFBQWUsQ0FBQSxFQUFBbEIsQ0FBQSxXQUFBa0IsQ0FBQSxPQUFBM0IsZ0JBQUEsQ0FBQWMsT0FBQSxFQUFBYSxDQUFBLE9BQUE1QiwyQkFBQSxDQUFBZSxPQUFBLEVBQUFGLENBQUEsRUFBQWdCLHlCQUFBLEtBQUFDLE9BQUEsQ0FBQUMsU0FBQSxDQUFBSCxDQUFBLEVBQUFsQixDQUFBLFlBQUFULGdCQUFBLENBQUFjLE9BQUEsRUFBQUYsQ0FBQSxFQUFBbUIsV0FBQSxJQUFBSixDQUFBLENBQUFLLEtBQUEsQ0FBQXBCLENBQUEsRUFBQUgsQ0FBQTtBQUFBLFNBQUFtQiwwQkFBQSxjQUFBaEIsQ0FBQSxJQUFBcUIsT0FBQSxDQUFBQyxTQUFBLENBQUFDLE9BQUEsQ0FBQVosSUFBQSxDQUFBTSxPQUFBLENBQUFDLFNBQUEsQ0FBQUcsT0FBQSxpQ0FBQXJCLENBQUEsYUFBQWdCLHlCQUFBLFlBQUFBLDBCQUFBLGFBQUFoQixDQUFBO0FBRXBFLElBQU13QixXQUFXLEdBQUcsSUFBQUMsMEJBQVMsRUFBQyxDQUFDO0FBRXhCLElBQU0xQyxtQkFBbUIsR0FBQUYsT0FBQSxDQUFBRSxtQkFBQSxHQUM5QixJQUFBMkMsb0JBQWEsRUFBeUMsSUFBSSxDQUFDO0FBVTdELFNBQVNDLFlBQVlBLENBQUNDLEtBQW1ELEVBQUU7RUFDekUsSUFBTUMsWUFBWSxHQUFHLElBQUFDLGFBQU0sRUFBQ0YsS0FBSyxDQUFDRyxVQUFVLENBQUM7RUFFN0MsSUFBQUMsZ0JBQVMsRUFBQyxZQUFNO0lBQ2RILFlBQVksQ0FBQ0ksT0FBTyxHQUFHLEtBQUs7RUFDOUIsQ0FBQyxFQUFFLENBQUNKLFlBQVksQ0FBQyxDQUFDO0VBRWxCLElBQU1LLFFBQVEsR0FBR1YsV0FBVyxHQUN4QnpDLG1CQUFtQixHQUNuQkEsbUJBQW1CLENBQUNtRCxRQUFRO0VBRWhDLE9BQU8sSUFBQXZDLFdBQUEsQ0FBQXdDLEdBQUEsRUFBQ0QsUUFBUTtJQUFDcEQsS0FBSyxFQUFFK0MsWUFBYTtJQUFBTyxRQUFBLEVBQUVSLEtBQUssQ0FBQ1E7RUFBUSxDQUFXLENBQUM7QUFDbkU7QUFBQSxJQWtCYXBELHFCQUFxQixHQUFBSCxPQUFBLENBQUFHLHFCQUFBLGFBQUFxRCxVQUFBO0VBQUEsU0FBQXJELHNCQUFBO0lBQUEsSUFBQUMsZ0JBQUEsQ0FBQWlCLE9BQUEsUUFBQWxCLHFCQUFBO0lBQUEsT0FBQThCLFVBQUEsT0FBQTlCLHFCQUFBLEVBQUFzRCxTQUFBO0VBQUE7RUFBQSxJQUFBakQsVUFBQSxDQUFBYSxPQUFBLEVBQUFsQixxQkFBQSxFQUFBcUQsVUFBQTtFQUFBLFdBQUFuRCxhQUFBLENBQUFnQixPQUFBLEVBQUFsQixxQkFBQTtJQUFBdUQsR0FBQTtJQUFBekQsS0FBQSxFQUNoQyxTQUFBMEQsdUJBQXVCQSxDQUFBLEVBQUc7TUFDeEIsT0FBT0MsZUFBUSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDZCxLQUFLLENBQUNRLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUNSLEtBQUssQ0FBQ2UsV0FBVyxHQUNwRUYsZUFBUSxDQUFDRyxHQUFHLENBQUMsSUFBSSxDQUFDaEIsS0FBSyxDQUFDUSxRQUFRLEVBQUcsVUFBQVMsS0FBSztRQUFBLE9BQ3RDLElBQUFsRCxXQUFBLENBQUF3QyxHQUFBLEVBQUNuRCxxQkFBcUI7VUFBQzJELFdBQVc7VUFBQVAsUUFBQSxFQUFFUztRQUFLLENBQXdCLENBQ2xFO01BQUEsRUFBQyxHQUNGLElBQUksQ0FBQ2pCLEtBQUssQ0FBQ1EsUUFBUTtJQUN6QjtFQUFBO0lBQUFHLEdBQUE7SUFBQXpELEtBQUEsRUFFQSxTQUFBZ0UsdUJBQXVCQSxDQUFBLEVBQUc7TUFDeEIsSUFBSUwsZUFBUSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDZCxLQUFLLENBQUNRLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUM3QyxJQUFNVyxHQUFHLEdBQUcsSUFBQUMsOEJBQWMsRUFBQyxJQUFJLENBQUM7UUFDaEMsSUFBSUQsR0FBRyxFQUFFO1VBQ1AsSUFBQUUsbUNBQTZCLEVBQUNGLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQ25CLEtBQUssQ0FBQ2UsV0FBVyxDQUFDO1FBQzdEO01BQ0Y7SUFDRjtFQUFBO0lBQUFKLEdBQUE7SUFBQXpELEtBQUEsRUFFQSxTQUFBb0Usb0JBQW9CQSxDQUFBLEVBQVM7TUFDM0IsSUFBSSxJQUFJLENBQUN0QixLQUFLLENBQUNlLFdBQVcsS0FBS1EsU0FBUyxFQUFFO1FBQ3hDLElBQUksQ0FBQ0wsdUJBQXVCLENBQUMsQ0FBQztNQUNoQztJQUNGO0VBQUE7SUFBQVAsR0FBQTtJQUFBekQsS0FBQSxFQUVBLFNBQUFzRSxNQUFNQSxDQUFBLEVBQWM7TUFDbEIsSUFBTWhCLFFBQVEsR0FBRyxJQUFJLENBQUNJLHVCQUF1QixDQUFDLENBQUM7TUFFL0MsSUFBSSxJQUFJLENBQUNaLEtBQUssQ0FBQ3lCLFlBQVksS0FBS0YsU0FBUyxFQUFFO1FBQ3pDLE9BQU9mLFFBQVE7TUFDakI7TUFFQSxPQUNFLElBQUF6QyxXQUFBLENBQUF3QyxHQUFBLEVBQUNSLFlBQVk7UUFBQ0ksVUFBVSxFQUFFLElBQUksQ0FBQ0gsS0FBSyxDQUFDeUIsWUFBYTtRQUFBakIsUUFBQSxFQUMvQ0E7TUFBUSxDQUNHLENBQUM7SUFFbkI7RUFBQTtBQUFBLEVBcEN5Q2tCLGdCQUFTIiwiaWdub3JlTGlzdCI6W119