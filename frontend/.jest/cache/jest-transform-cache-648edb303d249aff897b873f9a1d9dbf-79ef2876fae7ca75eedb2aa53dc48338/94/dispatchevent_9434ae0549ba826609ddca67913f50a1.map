{"version":3,"names":["_act","_interopRequireDefault","require","_eventHandler","_componentTree","e","__esModule","default","dispatchEvent","element","eventName","_len","arguments","length","event","Array","_key","isElementMounted","handler","getEventHandler","apply"],"sources":["../../../src/user-event/utils/dispatch-event.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport act from '../../act';\nimport { getEventHandler } from '../../event-handler';\nimport { isElementMounted } from '../../helpers/component-tree';\n\n/**\n * Basic dispatch event function used by User Event module.\n *\n * @param element element trigger event on\n * @param eventName name of the event\n * @param event event payload(s)\n */\nexport function dispatchEvent(element: ReactTestInstance, eventName: string, ...event: unknown[]) {\n  if (!isElementMounted(element)) {\n    return;\n  }\n\n  const handler = getEventHandler(element, eventName);\n  if (!handler) {\n    return;\n  }\n\n  // This will be called synchronously.\n  void act(() => {\n    handler(...event);\n  });\n}\n"],"mappings":";;;;;;AAEA,IAAAA,IAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AAAgE,SAAAD,uBAAAI,CAAA;EAAA,OAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AASzD,SAASG,aAAaA,CAACC,OAA0B,EAAEC,SAAiB,EAAuB;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAlBC,KAAgB,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAhBF,KAAgB,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC9F,IAAI,CAAC,IAAAZ,cAAA,CAAAa,gBAAgB,EAACR,OAAO,CAAC,EAAE;IAC9B;EACF;EAEA,IAAMS,OAAO,GAAG,IAAAf,aAAA,CAAAgB,eAAe,EAACV,OAAO,EAAEC,SAAS,CAAC;EACnD,IAAI,CAACQ,OAAO,EAAE;IACZ;EACF;EAGA,KAAK,IAAAlB,IAAA,CAAAO,OAAG,EAAC,YAAM;IACbW,OAAO,CAAAE,KAAA,SAAIN,KAAK,CAAC;EACnB,CAAC,CAAC;AACJ","ignoreList":[]}