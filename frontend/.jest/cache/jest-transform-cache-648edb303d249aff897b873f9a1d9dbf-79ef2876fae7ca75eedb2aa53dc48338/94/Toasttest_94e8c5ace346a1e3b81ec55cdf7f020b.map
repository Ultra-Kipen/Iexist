{"version":3,"names":["_getJestObj","mock","StyleSheet","create","jest","fn","styles","View","Text","TouchableOpacity","Animated","timing","start","callback","Value","setValue","interpolate","Platform","OS","render","fireEvent","press","act","cb","_interopRequireDefault","require","_react","_reactNative","_Toast","_interopRequireWildcard","_reactNative2","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_require","useFakeTimers","TestIcon","jsx","testID","children","mockImplementation","ui","props","visible","message","getByTestId","id","Error","getByText","text","queryByTestId","rerender","element","onPress","describe","afterEach","clearAllMocks","clearAllTimers","test","renderResult","expect","toBeTruthy","toBeNull","types","forEach","type","position","icon","onClose","runAllTimers","toHaveBeenCalled","duration","advanceTimersByTime","mockToast","show","hide","ToastController","setRef","toHaveBeenCalledWith","not","toThrow"],"sources":["Toast.test.tsx"],"sourcesContent":["// __tests__/components/Toast.test.tsx\r\n// 모킹을 먼저 설정\r\njest.mock('react-native', () => ({\r\n  StyleSheet: {\r\n    create: jest.fn(styles => styles),\r\n  },\r\n  View: 'View',\r\n  Text: 'Text',\r\n  TouchableOpacity: 'TouchableOpacity',\r\n  Animated: {\r\n    View: 'Animated.View',\r\n    timing: jest.fn(() => ({\r\n      start: jest.fn(callback => callback && callback()),\r\n    })),\r\n    Value: jest.fn(() => ({\r\n      setValue: jest.fn(),\r\n      interpolate: jest.fn(() => ({})),\r\n    })),\r\n  },\r\n  Platform: { OS: 'android' },\r\n}));\r\n\r\njest.mock('@testing-library/react-native', () => ({\r\n  render: jest.fn(),\r\n  fireEvent: {\r\n    press: jest.fn(),\r\n  },\r\n  act: jest.fn(cb => cb()),\r\n}));\r\n\r\nimport React from 'react';\r\nimport { render, act, fireEvent } from '@testing-library/react-native';\r\nimport Toast, { ToastController } from '../../src/components/Toast';\r\nimport { Text } from 'react-native';\r\n\r\n// 타이머 모킹\r\njest.useFakeTimers();\r\n\r\n// 간단한 아이콘 컴포넌트 정의\r\nconst TestIcon = () => <Text testID=\"test-icon\">아이콘</Text>;\r\n\r\n// render 함수 모킹 구현\r\n(render as jest.Mock).mockImplementation((ui) => {\r\n  const props = ui.props;\r\n  const visible = props?.visible;\r\n  const testID = props?.testID;\r\n  const message = props?.message;\r\n  \r\n  return {\r\n    getByTestId: jest.fn((id) => {\r\n      if (id === testID) return { props };\r\n      if (id === 'test-icon') return { props: { children: '아이콘' } };\r\n      if (id === 'toast-touchable') return { props };\r\n      throw new Error(`TestID not found: ${id}`);\r\n    }),\r\n    getByText: jest.fn((text) => {\r\n      if (text === message) return { props: { children: message } };\r\n      throw new Error(`Text not found: ${text}`);\r\n    }),\r\n    queryByTestId: jest.fn((id) => {\r\n      if (id === testID && visible) return { props };\r\n      return null;\r\n    }),\r\n    rerender: jest.fn(),\r\n  };\r\n});\r\n\r\n// fireEvent.press 모킹 구현\r\n(fireEvent.press as jest.Mock).mockImplementation((element) => {\r\n  if (element.props && element.props.onPress) {\r\n    element.props.onPress();\r\n    return true;\r\n  }\r\n  return false;\r\n});\r\n\r\ndescribe('Toast', () => {\r\n  afterEach(() => {\r\n    jest.clearAllMocks();\r\n    jest.clearAllTimers();\r\n  });\r\n\r\n  test('renders correctly with default props', () => {\r\n    const renderResult = render(\r\n      <Toast visible={true} message=\"테스트 메시지\" testID=\"toast\" />\r\n    );\r\n    \r\n    expect(renderResult.getByTestId('toast')).toBeTruthy();\r\n    expect(renderResult.getByText('테스트 메시지')).toBeTruthy();\r\n  });\r\n\r\n  test('does not render when visible is false', () => {\r\n    const renderResult = render(\r\n      <Toast visible={false} message=\"테스트 메시지\" testID=\"toast\" />\r\n    );\r\n    \r\n    expect(renderResult.queryByTestId('toast')).toBeNull();\r\n  });\r\n\r\n  test('renders with different types', () => {\r\n    const types = ['success', 'error', 'info', 'warning'];\r\n    \r\n    types.forEach(type => {\r\n      const renderResult = render(\r\n        <Toast visible={true} message=\"테스트 메시지\" type={type as any} testID=\"toast\" />\r\n      );\r\n      expect(renderResult.getByTestId('toast')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  test('renders with top position', () => {\r\n    const renderResult = render(\r\n      <Toast visible={true} message=\"테스트 메시지\" position=\"top\" testID=\"toast\" />\r\n    );\r\n    \r\n    expect(renderResult.getByTestId('toast')).toBeTruthy();\r\n  });\r\n\r\n  test('icon renders correctly', () => {\r\n    const renderResult = render(\r\n      <Toast \r\n        visible={true} \r\n        message=\"테스트 메시지\" \r\n        icon={<TestIcon />} \r\n        testID=\"toast\"\r\n      />\r\n    );\r\n    \r\n    expect(renderResult.getByTestId('test-icon')).toBeTruthy();\r\n  });\r\n\r\n  test('closes when pressed', () => {\r\n    const onClose = jest.fn();\r\n    \r\n    const renderResult = render(\r\n      <Toast \r\n        visible={true} \r\n        message=\"테스트 메시지\" \r\n        onClose={onClose} \r\n        testID=\"toast\"\r\n      />\r\n    );\r\n    \r\n    fireEvent.press(renderResult.getByTestId('toast-touchable'));\r\n    \r\n    // 애니메이션 실행 후 onClose 호출\r\n    act(() => {\r\n      jest.runAllTimers();\r\n    });\r\n    \r\n    expect(onClose).toHaveBeenCalled();\r\n  });\r\n\r\n  test('onClose is called after duration', () => {\r\n    const onClose = jest.fn();\r\n    \r\n    render(\r\n      <Toast \r\n        visible={true} \r\n        message=\"테스트 메시지\" \r\n        duration={1000} \r\n        onClose={onClose} \r\n        testID=\"toast\"\r\n      />\r\n    );\r\n    \r\n    // 타이머 진행\r\n    act(() => {\r\n      jest.advanceTimersByTime(1000);\r\n    });\r\n    \r\n    // 애니메이션 실행 후 onClose 호출\r\n    act(() => {\r\n      jest.runAllTimers();\r\n    });\r\n    \r\n    expect(onClose).toHaveBeenCalled();\r\n  });\r\n\r\n  test('ToastController should handle show and hide', () => {\r\n    const mockToast = {\r\n      show: jest.fn(),\r\n      hide: jest.fn()\r\n    };\r\n    \r\n    ToastController.setRef(mockToast);\r\n    \r\n    ToastController.show({ message: '테스트 메시지' });\r\n    expect(mockToast.show).toHaveBeenCalledWith({ message: '테스트 메시지' });\r\n    \r\n    ToastController.hide();\r\n    expect(mockToast.hide).toHaveBeenCalled();\r\n  });\r\n\r\n  test('ToastController handles missing instance', () => {\r\n    ToastController.setRef(null);\r\n    \r\n    expect(() => {\r\n      ToastController.show({ message: '테스트 메시지' });\r\n      ToastController.hide();\r\n    }).not.toThrow();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}