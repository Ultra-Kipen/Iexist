{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_ErrorBoundary","_jsxRuntime","ProblemChild","_ref","_ref$shouldThrow","shouldThrow","Error","jsx","Text","children","originalConsoleError","console","error","beforeAll","jest","fn","afterAll","describe","it","_render","render","default","getByText","expect","toBeTruthy","_render2","_render3","errorBoundaryInstance","fireEvent","press","mockOnError","onError","toHaveBeenCalledTimes","mock","calls","toBeInstanceOf","message","toBe","CustomFallback","_render4","fallback","queryByText","toBeNull"],"sources":["ErrorBoundary.test.tsx"],"sourcesContent":["// tests/components/ErrorBoundary.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { Text } from 'react-native';\r\nimport ErrorBoundary from '../../src/components/ErrorBoundary';\r\n\r\n// 에러를 발생시키는 컴포넌트\r\nconst ProblemChild = ({ shouldThrow = false }) => {\r\n  if (shouldThrow) {\r\n    throw new Error('테스트 에러');\r\n  }\r\n  return <Text>정상 컴포넌트</Text>;\r\n};\r\n\r\n// console.error를 잠시 억제 (ErrorBoundary 테스트 중 발생하는 예상된 오류 메시지)\r\nconst originalConsoleError = console.error;\r\nbeforeAll(() => {\r\n  console.error = jest.fn();\r\n});\r\n\r\nafterAll(() => {\r\n  console.error = originalConsoleError;\r\n});\r\n\r\ndescribe('ErrorBoundary', () => {\r\n  it('renders children when there is no error', () => {\r\n    const { getByText } = render(\r\n      <ErrorBoundary>\r\n        <Text>테스트 컨텐츠</Text>\r\n      </ErrorBoundary>\r\n    );\r\n    expect(getByText('테스트 컨텐츠')).toBeTruthy();\r\n  });\r\n\r\n  it('renders error UI when a child component throws', () => {\r\n    const { getByText } = render(\r\n      <ErrorBoundary>\r\n        <ProblemChild shouldThrow={true} />\r\n      </ErrorBoundary>\r\n    );\r\n    expect(getByText('문제가 발생했습니다')).toBeTruthy();\r\n    expect(getByText(/앱에서 오류가 발생했습니다/)).toBeTruthy();\r\n    expect(getByText(/Error: 테스트 에러/)).toBeTruthy();\r\n  });\r\n\r\n  it('resets error state when the \"다시 시도\" button is pressed', () => {\r\n    const { getByText } = render(\r\n      <ErrorBoundary>\r\n        <ProblemChild shouldThrow={false} />\r\n      </ErrorBoundary>\r\n    );\r\n    \r\n    // 초기에는 정상 컴포넌트가 표시됨\r\n    expect(getByText('정상 컴포넌트')).toBeTruthy();\r\n    \r\n    // 컴포넌트를 에러 상태로 강제로 변경\r\n    const errorBoundaryInstance = render(\r\n      <ErrorBoundary>\r\n        <ProblemChild shouldThrow={true} />\r\n      </ErrorBoundary>\r\n    );\r\n    \r\n    // 에러 UI가 표시됨\r\n    expect(errorBoundaryInstance.getByText('문제가 발생했습니다')).toBeTruthy();\r\n    \r\n    // \"다시 시도\" 버튼 클릭\r\n    fireEvent.press(errorBoundaryInstance.getByText('다시 시도'));\r\n    \r\n    // 이제 ErrorBoundary가 children을 다시 렌더링하므로 정상 컴포넌트가 표시되어야 함\r\n    expect(errorBoundaryInstance.getByText('다시 시도')).toBeTruthy();\r\n  });\r\n\r\n  it('calls onError handler when a child throws', () => {\r\n    const mockOnError = jest.fn();\r\n    render(\r\n      <ErrorBoundary onError={mockOnError}>\r\n        <ProblemChild shouldThrow={true} />\r\n      </ErrorBoundary>\r\n    );\r\n    \r\n    expect(mockOnError).toHaveBeenCalledTimes(1);\r\n    expect(mockOnError.mock.calls[0][0]).toBeInstanceOf(Error);\r\n    expect(mockOnError.mock.calls[0][0].message).toBe('테스트 에러');\r\n  });\r\n\r\n  it('renders custom fallback UI when provided', () => {\r\n    const CustomFallback = () => <Text>커스텀 에러 UI</Text>;\r\n    \r\n    const { getByText, queryByText } = render(\r\n      <ErrorBoundary fallback={<CustomFallback />}>\r\n        <ProblemChild shouldThrow={true} />\r\n      </ErrorBoundary>\r\n    );\r\n    \r\n    expect(getByText('커스텀 에러 UI')).toBeTruthy();\r\n    expect(queryByText('문제가 발생했습니다')).toBeNull();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}