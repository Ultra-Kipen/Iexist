58aa2a054610cb098383240b8b6f5cc5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _ProfileAvatar = _interopRequireDefault(require("../../src/components/ProfileAvatar"));
var _jsxRuntime = require("react/jsx-runtime");
describe('ProfileAvatar 컴포넌트', function () {
  it('이미지가 없을 때 이니셜이 표시되어야 합니다', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ProfileAvatar.default, {
        name: "\uD64D\uAE38\uB3D9"
      })),
      getByText = _render.getByText;
    expect(getByText('홍')).toBeTruthy();
  });
  it('이름이 없을 때 기본 이니셜이 표시되어야 합니다', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ProfileAvatar.default, {})),
      getByText = _render2.getByText;
    expect(getByText('?')).toBeTruthy();
  });
  it('isAnonymous가 true일 때 익명 이니셜이 표시되어야 합니다', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ProfileAvatar.default, {
        isAnonymous: true,
        name: "\uD64D\uAE38\uB3D9"
      })),
      getByText = _render3.getByText;
    expect(getByText('익')).toBeTruthy();
  });
  it('showName이 true일 때 이름이 표시되어야 합니다', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ProfileAvatar.default, {
        name: "\uD64D\uAE38\uB3D9",
        showName: true
      })),
      getByText = _render4.getByText;
    expect(getByText('홍길동')).toBeTruthy();
  });
  it('isAnonymous가 true이고 showName이 true일 때 "익명"이 표시되어야 합니다', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ProfileAvatar.default, {
        isAnonymous: true,
        name: "\uD64D\uAE38\uB3D9",
        showName: true
      })),
      getByText = _render5.getByText;
    expect(getByText('익명')).toBeTruthy();
  });
  it('onPress 콜백이 제공되면 아바타를 클릭할 때 호출되어야 합니다', function () {
    var mockOnPress = jest.fn();
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ProfileAvatar.default, {
        name: "\uD64D\uAE38\uB3D9",
        onPress: mockOnPress
      })),
      getByText = _render6.getByText;
    _reactNative.fireEvent.press(getByText('홍'));
    expect(mockOnPress).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9Qcm9maWxlQXZhdGFyIiwiX2pzeFJ1bnRpbWUiLCJkZXNjcmliZSIsIml0IiwiX3JlbmRlciIsInJlbmRlciIsImpzeCIsImRlZmF1bHQiLCJuYW1lIiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIl9yZW5kZXIyIiwiX3JlbmRlcjMiLCJpc0Fub255bW91cyIsIl9yZW5kZXI0Iiwic2hvd05hbWUiLCJfcmVuZGVyNSIsIm1vY2tPblByZXNzIiwiamVzdCIsImZuIiwiX3JlbmRlcjYiLCJvblByZXNzIiwiZmlyZUV2ZW50IiwicHJlc3MiLCJ0b0hhdmVCZWVuQ2FsbGVkIl0sInNvdXJjZXMiOlsiUHJvZmlsZUF2YXRhci50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBfX1RFU1RTX18vY29tcG9uZW50cy9Qcm9maWxlQXZhdGFyLnRlc3QudHN4XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHJlbmRlciwgZmlyZUV2ZW50IH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgUHJvZmlsZUF2YXRhciBmcm9tICcuLi8uLi9zcmMvY29tcG9uZW50cy9Qcm9maWxlQXZhdGFyJztcclxuXHJcbmRlc2NyaWJlKCdQcm9maWxlQXZhdGFyIOy7tO2PrOuEjO2KuCcsICgpID0+IHtcclxuICBpdCgn7J2066+47KeA6rCAIOyXhuydhCDrlYwg7J2064uI7IWc7J20IO2RnOyLnOuQmOyWtOyVvCDtlanri4jri6QnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8UHJvZmlsZUF2YXRhciBuYW1lPVwi7ZmN6ri464+ZXCIgLz5cclxuICAgICk7XHJcbiAgICBcclxuICAgIGV4cGVjdChnZXRCeVRleHQoJ+2ZjScpKS50b0JlVHJ1dGh5KCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCfsnbTrpoTsnbQg7JeG7J2EIOuVjCDquLDrs7gg7J2064uI7IWc7J20IO2RnOyLnOuQmOyWtOyVvCDtlanri4jri6QnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8UHJvZmlsZUF2YXRhciAvPlxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgnPycpKS50b0JlVHJ1dGh5KCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCdpc0Fub255bW91c+qwgCB0cnVl7J28IOuVjCDsnbXrqoUg7J2064uI7IWc7J20IO2RnOyLnOuQmOyWtOyVvCDtlanri4jri6QnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8UHJvZmlsZUF2YXRhciBpc0Fub255bW91cz17dHJ1ZX0gbmFtZT1cIu2Zjeq4uOuPmVwiIC8+XHJcbiAgICApO1xyXG4gICAgXHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCfsnbUnKSkudG9CZVRydXRoeSgpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvd05hbWXsnbQgdHJ1ZeydvCDrlYwg7J2066aE7J20IO2RnOyLnOuQmOyWtOyVvCDtlanri4jri6QnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8UHJvZmlsZUF2YXRhciBuYW1lPVwi7ZmN6ri464+ZXCIgc2hvd05hbWU9e3RydWV9IC8+XHJcbiAgICApO1xyXG4gICAgXHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCftmY3quLjrj5knKSkudG9CZVRydXRoeSgpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnaXNBbm9ueW1vdXPqsIAgdHJ1ZeydtOqzoCBzaG93TmFtZeydtCB0cnVl7J28IOuVjCBcIuydteuqhVwi7J20IO2RnOyLnOuQmOyWtOyVvCDtlanri4jri6QnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8UHJvZmlsZUF2YXRhciBpc0Fub255bW91cz17dHJ1ZX0gbmFtZT1cIu2Zjeq4uOuPmVwiIHNob3dOYW1lPXt0cnVlfSAvPlxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgn7J2166qFJykpLnRvQmVUcnV0aHkoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ29uUHJlc3Mg7L2c67Cx7J20IOygnOqzteuQmOuptCDslYTrsJTtg4Drpbwg7YG066at7ZWgIOuVjCDtmLjstpzrkJjslrTslbwg7ZWp64uI64ukJywgKCkgPT4ge1xyXG4gICAgY29uc3QgbW9ja09uUHJlc3MgPSBqZXN0LmZuKCk7XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8UHJvZmlsZUF2YXRhciBuYW1lPVwi7ZmN6ri464+ZXCIgb25QcmVzcz17bW9ja09uUHJlc3N9IC8+XHJcbiAgICApO1xyXG4gICAgXHJcbiAgICBmaXJlRXZlbnQucHJlc3MoZ2V0QnlUZXh0KCftmY0nKSk7XHJcbiAgICBleHBlY3QobW9ja09uUHJlc3MpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcclxuICB9KTtcclxufSk7Il0sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsY0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQStELElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQUUvREksUUFBUSxDQUFDLG9CQUFvQixFQUFFLFlBQU07RUFDbkNDLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSxZQUFNO0lBQ25DLElBQUFDLE9BQUEsR0FBc0IsSUFBQUMsbUJBQU0sRUFDMUIsSUFBQUosV0FBQSxDQUFBSyxHQUFBLEVBQUNOLGNBQUEsQ0FBQU8sT0FBYTtRQUFDQyxJQUFJLEVBQUM7TUFBSyxDQUFFLENBQzdCLENBQUM7TUFG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