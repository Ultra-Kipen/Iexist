{"version":3,"names":["_getJestObj","mock","reactNativeMock","StyleSheet","create","styles","flatten","style","Array","isArray","Object","assign","apply","concat","_toConsumableArray2","default","map","s","Platform","OS","select","obj","ios","Keyboard","dismiss","jest","fn","View","_ref","testID","children","_jsxRuntime","jsx","Text","_ref2","TextInput","_ref3","value","onChangeText","placeholder","onChange","e","target","TouchableOpacity","_ref4","onPress","onClick","TouchableWithoutFeedback","_ref5","ScrollView","_ref6","contentContainerStyle","keyboardShouldPersistTaps","showsVerticalScrollIndicator","String","KeyboardAvoidingView","_ref7","behavior","keyboardVerticalOffset","useTheme","theme","colors","background","primary","text","surface","dark","roundness","fonts","regular","fontFamily","fontWeight","MockLoadingIndicator","_interopRequireDefault","require","_react","_reactNative","_reactNative2","_FormLayout","_require","TestFormInput","_ref8","label","jsxs","TestSubmitButton","_ref9","title","describe","it","_render","render","getByTestId","expect","toBeTruthy","_render2","loading","onSubmitMock","_render3","onSubmit","footer","submitButton","fireEvent","click","toHaveBeenCalledTimes","_render4","avoidKeyboard","queryByTestId","toBeNull"],"sources":["FormLayout.test.tsx"],"sourcesContent":["// tests/layouts/FormLayout.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport FormLayout from '../../src/layouts/FormLayout';\r\n\r\n// 실제 컴포넌트처럼 동작하는 모킹 구현\r\njest.mock('react-native', () => {\r\n  const reactNativeMock = {\r\n    StyleSheet: {\r\n      create: (styles) => styles,\r\n      // flatten 메서드 추가\r\n      flatten: (style) => {\r\n        if (Array.isArray(style)) {\r\n          return Object.assign({}, ...style.map(s => typeof s === 'object' ? s : {}));\r\n        }\r\n        return style || {};\r\n      }\r\n    },\r\n    Platform: {\r\n      OS: 'ios',\r\n      select: (obj) => obj.ios,\r\n    },\r\n    Keyboard: {\r\n      dismiss: jest.fn(),\r\n    },\r\n    View: ({ style, testID, children }) => (\r\n      <div data-testid={testID || 'view'} style={style}>\r\n        {children}\r\n      </div>\r\n    ),\r\n    Text: ({ style, testID, children }) => (\r\n      <div data-testid={testID || 'text'} style={style}>\r\n        {children}\r\n      </div>\r\n    ),\r\n    TextInput: ({ style, testID, value, onChangeText, placeholder }) => (\r\n      <input\r\n        data-testid={testID || 'input'}\r\n        style={style}\r\n        value={value}\r\n        onChange={(e) => onChangeText && onChangeText(e.target.value)}\r\n        placeholder={placeholder}\r\n      />\r\n    ),\r\n    TouchableOpacity: ({ style, testID, onPress, children }) => (\r\n      <button\r\n        data-testid={testID || 'button'}\r\n        style={style}\r\n        onClick={onPress}\r\n      >\r\n        {children}\r\n      </button>\r\n    ),\r\n    TouchableWithoutFeedback: ({ onPress, children }) => (\r\n      <div onClick={onPress}>\r\n        {children}\r\n      </div>\r\n    ),\r\n    ScrollView: ({ contentContainerStyle, children, keyboardShouldPersistTaps, showsVerticalScrollIndicator }) => (\r\n      <div\r\n        data-testid=\"scroll-view\"\r\n        data-keyboard-persist={keyboardShouldPersistTaps}\r\n        data-shows-indicator={String(showsVerticalScrollIndicator)}\r\n        style={contentContainerStyle}\r\n      >\r\n        {children}\r\n      </div>\r\n    ),\r\n    KeyboardAvoidingView: ({ style, behavior, keyboardVerticalOffset, children }) => (\r\n      <div\r\n        data-testid=\"keyboard-avoiding-view\"\r\n        data-behavior={behavior}\r\n        data-offset={keyboardVerticalOffset}\r\n        style={style}\r\n      >\r\n        {children}\r\n      </div>\r\n    ),\r\n  };\r\n  \r\n  return reactNativeMock;\r\n});\r\n\r\n// useTheme 모킹 - 실제 테마 값 사용\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#f5f5f5',\r\n        primary: '#007bff',\r\n        text: '#333333',\r\n        surface: '#ffffff',\r\n      },\r\n      dark: false,\r\n      roundness: 4,\r\n      fonts: {\r\n        regular: {\r\n          fontFamily: 'System',\r\n          fontWeight: '400',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n}));\r\n\r\n// 실제 로딩 인디케이터와 유사하게 동작하는 컴포넌트로 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => {\r\n  return function MockLoadingIndicator() {\r\n    return (\r\n      <div data-testid=\"loading-indicator\">\r\n        <span>로딩 중...</span>\r\n      </div>\r\n    );\r\n  };\r\n});\r\n\r\n// 테스트 폼 항목 컴포넌트\r\nconst TestFormInput = ({ label, value, onChangeText, testID }) => (\r\n  <View testID=\"form-field-container\">\r\n    <Text>{label}</Text>\r\n    <TextInput\r\n      testID={testID}\r\n      value={value}\r\n      onChangeText={onChangeText}\r\n    />\r\n  </View>\r\n);\r\n\r\n// 테스트 버튼 컴포넌트\r\nconst TestSubmitButton = ({ onPress, title }) => (\r\n  <TouchableOpacity testID=\"submit-button\" onPress={onPress}>\r\n    <Text>{title}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\ndescribe('FormLayout - 실제 환경 검증', () => {\r\n  // 기본 렌더링 테스트\r\n  it('기본 컴포넌트 렌더링 검증', () => {\r\n    const { getByTestId } = render(\r\n      <FormLayout>\r\n        <Text>기본 콘텐츠</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    // 기본 구조만 확인\r\n    expect(getByTestId('keyboard-avoiding-view')).toBeTruthy();\r\n  });\r\n  \r\n  // 로딩 상태 테스트\r\n  it('loading이 true일 때 로딩 인디케이터가 표시되어야 함', () => {\r\n    const { getByTestId } = render(\r\n      <FormLayout loading={true}>\r\n        <Text>콘텐츠</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByTestId('loading-indicator')).toBeTruthy();\r\n  });\r\n  \r\n  // 간단한 제출 기능 테스트\r\n  it('footer의 제출 버튼이 클릭되면 onSubmit이 호출되어야 함', () => {\r\n    const onSubmitMock = jest.fn();\r\n    \r\n    const { getByTestId } = render(\r\n      <FormLayout\r\n        onSubmit={onSubmitMock}\r\n        footer={<TestSubmitButton onPress={onSubmitMock} title=\"제출\" />}\r\n      >\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    const submitButton = getByTestId('submit-button');\r\n    fireEvent.click(submitButton);\r\n    \r\n    expect(onSubmitMock).toHaveBeenCalledTimes(1);\r\n  });\r\n  \r\n  // 키보드 회피 옵션 테스트\r\n  it('avoidKeyboard가 false일 때 View를 사용해야 함', () => {\r\n    const { queryByTestId } = render(\r\n      <FormLayout avoidKeyboard={false}>\r\n        <Text>테스트</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    // KeyboardAvoidingView가 렌더링되지 않아야 함\r\n    expect(queryByTestId('keyboard-avoiding-view')).toBeNull();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}