{"version":3,"names":["_getJestObj","mock","useTheme","theme","colors","background","dark","React","require","__esModule","default","createElement","testID","virtual","_interopRequireDefault","_react","_reactNative","_reactNative2","_AuthLayout","_jsxRuntime","_require","jest","describe","it","_render","render","jsx","children","Text","getByText","expect","toBeTruthy","_render2","loading","getByTestId","queryByText","toBeNull","_render3","title","footer","_render4","imageBackground","_render5","logoVisible","queryByTestId","_render6"],"sources":["AuthLayout.test.tsx"],"sourcesContent":["// tests/layouts/AuthLayout.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Text } from 'react-native';\r\nimport AuthLayout from '../../src/layouts/AuthLayout';\r\n\r\n// useTheme 모킹\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#ffffff',\r\n      },\r\n      dark: false,\r\n    },\r\n  }),\r\n}));\r\n\r\n// LoadingIndicator 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => {\r\n  const React = require('react');\r\n  return {\r\n    __esModule: true,\r\n    default: () => React.createElement('View', { testID: 'loading-indicator' }, null),\r\n  };\r\n});\r\n\r\n// 이미지 경로 모킹\r\njest.mock('../../src/assets/images/logo.png', () => 'mocked-logo-path', { virtual: true });\r\njest.mock('../../src/assets/images/auth-background.jpg', () => 'mocked-bg-path', { virtual: true });\r\n\r\ndescribe('AuthLayout', () => {\r\n  it('renders children correctly', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('shows loading indicator when loading is true', () => {\r\n    const { getByTestId, queryByText } = render(\r\n      <AuthLayout loading={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('loading-indicator')).toBeTruthy();\r\n    // 로딩 중에는 children이 렌더링되지 않음\r\n    expect(queryByText('인증 내용')).toBeNull();\r\n  });\r\n  \r\n  it('renders title and footer when provided', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout\r\n        title={<Text>인증 제목</Text>}\r\n        footer={<Text>인증 푸터</Text>}\r\n      >\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 제목')).toBeTruthy();\r\n    expect(getByText('인증 푸터')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('renders with background image when imageBackground is true', () => {\r\n    const { getByTestId, getByText } = render(\r\n      <AuthLayout imageBackground={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('image-background')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('does not render logo when logoVisible is false', () => {\r\n    const { queryByTestId, getByText } = render(\r\n      <AuthLayout logoVisible={false}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(queryByTestId('logo-image')).toBeNull();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('renders with default background when imageBackground is false', () => {\r\n    const { queryByTestId, getByText } = render(\r\n      <AuthLayout imageBackground={false}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(queryByTestId('image-background')).toBeNull();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}