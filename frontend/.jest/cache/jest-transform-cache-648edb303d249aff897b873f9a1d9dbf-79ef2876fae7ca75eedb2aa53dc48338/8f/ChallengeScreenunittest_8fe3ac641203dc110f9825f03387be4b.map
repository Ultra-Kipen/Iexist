{"version":3,"names":["_getJestObj","mock","React","require","_require","Text","View","createMockComponent","displayName","MockComponent","_ref","children","title","rest","_objectWithoutProperties2","default","_excluded","createElement","testID","Card","Content","Actions","Title","Paragraph","Button","_ref2","onPress","ProgressBar","List","Item","_ref3","left","Icon","_ref4","icon","useTheme","colors","primary","background","Provider","_ref5","_interopRequireDefault","_react","_reactNative","_ChallengeScreen","_jsxRuntime","_require2","jest","createTestProps","props","arguments","length","undefined","Object","assign","navigation","navigate","fn","mockConsoleLog","console","log","describe","component","beforeEach","render","jsx","mockClear","it","expect","toBeTruthy","_component","queryAllByText","toBeGreaterThan","_component2","_component3","_component4","_component5","_component6","joinButtons","toBe","fireEvent","press","toHaveBeenCalledWith","_component7"],"sources":["ChallengeScreen.unit.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { Text, View } from 'react-native';\r\n\r\n// 테스트용 팩토리\r\nconst createTestProps = (props: any = {}) => ({\r\n  navigation: {\r\n    navigate: jest.fn(),\r\n  },\r\n  ...props,\r\n});\r\n\r\n// TypeScript 인터페이스 정의 (중요)\r\ninterface MockComponentType extends React.FC<any> {\r\n  Content?: React.FC<any>;\r\n  Actions?: React.FC<any>;\r\n  Item?: React.FC<any>;\r\n  Icon?: React.FC<any>;\r\n}\r\n\r\n// React Native Paper 모킹\r\njest.mock('react-native-paper', () => {\r\n  const React = require('react');\r\n  const { Text, View } = require('react-native');\r\n  \r\n  // 모킹 컴포넌트 팩토리 함수\r\n  const createMockComponent = (displayName: string): MockComponentType => {\r\n    const MockComponent: MockComponentType = ({ children, title, ...rest }) => {\r\n      if (title) {\r\n        return React.createElement(Text, { testID: `${displayName}-title` }, title);\r\n      }\r\n      return React.createElement(Text, { testID: displayName }, children);\r\n    };\r\n    \r\n    MockComponent.displayName = displayName;\r\n    return MockComponent;\r\n  };\r\n  \r\n  // 중첩 컴포넌트 생성\r\n  const Card: MockComponentType = createMockComponent('Card');\r\n  Card.Content = createMockComponent('Card.Content');\r\n  Card.Actions = createMockComponent('Card.Actions');\r\n  \r\n  // 기본 컴포넌트\r\n  const Title = createMockComponent('Title');\r\n  const Paragraph = createMockComponent('Paragraph');\r\n  const Button: MockComponentType = ({ children, onPress }) => \r\n    React.createElement(Text, { testID: 'Button', onPress }, children);\r\n  const ProgressBar = () => React.createElement(View, { testID: 'ProgressBar' });\r\n  \r\n  // 복합 컴포넌트\r\n  const List: { [key: string]: MockComponentType } = {\r\n    Item: ({ title, left }) => React.createElement(Text, { testID: 'List.Item' }, title),\r\n    Icon: ({ icon }) => React.createElement(Text, { testID: 'List.Icon' }, icon),\r\n  };\r\n  \r\n  return {\r\n    Card,\r\n    Title,\r\n    Paragraph,\r\n    Button,\r\n    ProgressBar,\r\n    useTheme: () => ({\r\n      colors: {\r\n        primary: '#6200ee',\r\n        background: '#ffffff',\r\n      },\r\n    }),\r\n    Provider: ({ children }) => React.createElement(View, { testID: 'Provider' }, children),\r\n    List,\r\n  };\r\n});\r\n\r\n// ChallengeScreen 컴포넌트 임포트\r\nimport ChallengeScreen from '../../../src/screens/ChallengeScreen';\r\n\r\n// 콘솔 로그 모킹\r\nconst mockConsoleLog = jest.fn();\r\nconsole.log = mockConsoleLog;\r\n\r\n// 테스트 시작\r\ndescribe('ChallengeScreen', () => {\r\n  let props: any;\r\n  let component: any;\r\n  \r\n  beforeEach(() => {\r\n    props = createTestProps();\r\n    component = render(<ChallengeScreen {...props} />);\r\n    mockConsoleLog.mockClear();\r\n  });\r\n  \r\n  it('renders correctly', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('displays challenge titles', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 제목 확인\r\n    expect(queryAllByText('7일간의 감사 일기').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('30일 긍정 에너지 나누기').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('21일 명상 습관 만들기').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('displays challenge descriptions', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 설명 확인\r\n    expect(queryAllByText('매일 감사한 일 3가지를 기록해보세요.').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('displays participant counts correctly', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 참여자 수 확인\r\n    expect(queryAllByText('참여자: 128명').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('참여자: 56명').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('참여자: 89명').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('displays challenge durations correctly', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 기간 확인\r\n    expect(queryAllByText('기간: 7일').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('기간: 30일').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('기간: 21일').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('displays progress percentages correctly', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 진행률 확인\r\n    expect(queryAllByText('40% 완료').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('20% 완료').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('60% 완료').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('calls handleJoinChallenge with correct ID when button is pressed', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 참여하기 버튼 가져오기\r\n    const joinButtons = queryAllByText('참여하기');\r\n    expect(joinButtons.length).toBe(3);\r\n    \r\n    // 버튼 클릭 테스트\r\n    fireEvent.press(joinButtons[0]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 1);\r\n    \r\n    fireEvent.press(joinButtons[1]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 2);\r\n    \r\n    fireEvent.press(joinButtons[2]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 3);\r\n  });\r\n  \r\n  it('displays the header text correctly', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 헤더 텍스트 확인\r\n    expect(queryAllByText('현재 진행 중인 챌린지').length).toBeGreaterThan(0);\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}