{"version":3,"names":["_getJestObj","mock","Appearance","getColorScheme","jest","fn","mockImplementation","addChangeListener","remove","THEMES","light","colors","background","dark","DEFAULT_THEME","__esModule","default","mockStoredTheme","theme","Promise","resolve","mockResolvedValue","undefined","actualReact","requireActual","Object","assign","useContext","mockContextValue","createElement","ThemeContext","Provider","_reactHooks","require","_useTheme","_theme","_require","MOCK_THEMES","MOCK_DEFAULT_THEME","mockGetColorScheme","mockReturnValue","mockRemove","mockAddChangeListener","setTheme","isDarkMode","toggleTheme","describe","beforeEach","clearAllMocks","mockClear","it","_renderHook","renderHook","useTheme","result","expect","current","toHaveProperty","_renderHook2","act","changeTheme","toBe","_renderHook3","themeType","_renderHook4","getSystemTheme","_renderHook5","themeSetting","_renderHook6","resultLight","_renderHook7","resultDark"],"sources":["useTheme.test.ts"],"sourcesContent":["// __tests__/hooks/useTheme.test.ts\r\nimport { renderHook, act } from '@testing-library/react-hooks';\r\nimport * as React from 'react';\r\n\r\n// 테스트용 상수 정의\r\nconst MOCK_THEMES = {\r\n  light: { colors: { background: '#FFFFFF' } },\r\n  dark: { colors: { background: '#121212' } }\r\n};\r\n\r\nconst MOCK_DEFAULT_THEME = 'system';\r\n\r\n// 먼저 모킹 함수들 정의\r\nconst mockGetColorScheme = jest.fn().mockReturnValue('light');\r\nconst mockRemove = jest.fn();\r\nconst mockAddChangeListener = jest.fn().mockReturnValue({\r\n  remove: mockRemove\r\n});\r\n\r\n// react-native의 Appearance 모킹\r\njest.mock('react-native', () => ({\r\n  Appearance: {\r\n    getColorScheme: jest.fn().mockImplementation(() => 'light'),\r\n    addChangeListener: jest.fn().mockImplementation(() => ({ remove: jest.fn() }))\r\n  }\r\n}));\r\n\r\n// constants/theme.ts 모킹\r\njest.mock('../../src/constants/theme', () => ({\r\n  THEMES: {\r\n    light: { colors: { background: '#FFFFFF' } },\r\n    dark: { colors: { background: '#121212' } }\r\n  },\r\n  DEFAULT_THEME: 'system'\r\n}));\r\n\r\n// useLocalStorage 모킹\r\nlet mockStoredTheme = 'system';\r\njest.mock('../../src/hooks/useLocalStorage', () => ({\r\n  __esModule: true,\r\n  default: jest.fn().mockImplementation(() => [\r\n    mockStoredTheme, \r\n    jest.fn().mockImplementation(theme => { mockStoredTheme = theme; return Promise.resolve(); }),\r\n    jest.fn().mockResolvedValue(undefined)\r\n  ])\r\n}));\r\n\r\n// Context 모킹 - useContext가 null을 반환하도록 설정 가능\r\nlet mockContextValue = {\r\n  theme: 'light',\r\n  setTheme: jest.fn(),\r\n  isDarkMode: false,\r\n  toggleTheme: jest.fn()\r\n};\r\n\r\njest.mock('react', () => {\r\n  const actualReact = jest.requireActual('react');\r\n  return {\r\n    ...actualReact,\r\n    useContext: jest.fn(() => mockContextValue),\r\n    createElement: actualReact.createElement\r\n  };\r\n});\r\n\r\n// ThemeContext 모킹\r\njest.mock('../../src/contexts/ThemeContext', () => ({\r\n  ThemeContext: {\r\n    Provider: jest.fn()\r\n  }\r\n}));\r\n\r\n// 실제 테스트할 모듈 가져오기\r\nimport { useTheme } from '../../src/hooks/useTheme';\r\nimport { THEMES, DEFAULT_THEME } from '../../src/constants/theme';\r\n\r\ndescribe('useTheme', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    // 기본값 재설정\r\n    mockStoredTheme = DEFAULT_THEME;\r\n    mockContextValue = {\r\n      theme: 'light',\r\n      setTheme: jest.fn(),\r\n      isDarkMode: false,\r\n      toggleTheme: jest.fn()\r\n    };\r\n    mockGetColorScheme.mockClear();\r\n    mockGetColorScheme.mockReturnValue('light');\r\n  });\r\n  \r\n  it('should return theme object with expected properties', () => {\r\n    const { result } = renderHook(() => useTheme());\r\n    \r\n    expect(result.current).toHaveProperty('theme');\r\n    expect(result.current).toHaveProperty('themeType');\r\n    expect(result.current).toHaveProperty('themeSetting');\r\n    expect(result.current).toHaveProperty('isDarkMode');\r\n    expect(result.current).toHaveProperty('changeTheme');\r\n    expect(result.current).toHaveProperty('getSystemTheme');\r\n  });\r\n  \r\n  it('should call setStoredTheme when changeTheme is called', () => {\r\n    const { result } = renderHook(() => useTheme());\r\n    \r\n    act(() => {\r\n      result.current.changeTheme('dark');\r\n    });\r\n    \r\n    expect(mockStoredTheme).toBe('dark');\r\n  });\r\n  \r\n  it('should return correct theme object based on themeType', () => {\r\n    // 다크 테마 설정\r\n    mockContextValue.theme = 'dark';\r\n    mockContextValue.isDarkMode = true;\r\n    \r\n    const { result } = renderHook(() => useTheme());\r\n    \r\n    expect(result.current.themeType).toBe('dark');\r\n    expect(result.current.isDarkMode).toBe(true);\r\n  });\r\n  \r\n  it('should get system theme from Appearance API', () => {\r\n    const { result } = renderHook(() => useTheme());\r\n    \r\n    // 원래 구현이 Appearance.getColorScheme를 호출하는지 테스트하기는 어려우므로\r\n    // 단순히 함수가 존재하는지 확인\r\n    expect(typeof result.current.getSystemTheme).toBe('function');\r\n  });\r\n  \r\n  it('should use stored theme for themeSetting', () => {\r\n    mockStoredTheme = 'dark';\r\n    \r\n    const { result } = renderHook(() => useTheme());\r\n    \r\n    expect(result.current.themeSetting).toBe('dark');\r\n  });\r\n  \r\n  it('should support different themes', () => {\r\n    // light 테마\r\n    mockContextValue.theme = 'light';\r\n    mockContextValue.isDarkMode = false;\r\n    const { result: resultLight } = renderHook(() => useTheme());\r\n    expect(resultLight.current.isDarkMode).toBe(false);\r\n    \r\n    // dark 테마\r\n    mockContextValue.theme = 'dark';\r\n    mockContextValue.isDarkMode = true;\r\n    const { result: resultDark } = renderHook(() => useTheme());\r\n    expect(resultDark.current.isDarkMode).toBe(true);\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}