{"version":3,"names":["_react","_interopRequireDefault","require","_asyncStorage","_authService","_jsxRuntime","createContext","React","useState","useContext","useEffect","defaultAuthContextValue","user","isLoading","isAuthenticated","login","Promise","resolve","register","logout","updateUser","AuthContext","exports","useAuth","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray2","default","setUser","_useState3","_useState4","setIsLoading","loadUser","_ref2","_asyncToGenerator2","userJson","AsyncStorage","getItem","JSON","parse","error","console","apply","arguments","_ref3","credentials","response","authService","_response$data$data","data","token","setItem","stringify","_x","_ref4","_response$data$data2","_x2","_ref5","removeItem","updatedUser","jsx","Provider","value"],"sources":["AuthContext.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nconst { createContext, useState, useContext, useEffect } = React;\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport authService from '../services/api/authService';\r\nimport { LoginCredentials, RegisterData, User } from '../services/api/types';\r\n\r\n// 타입 정의를 export하여 테스트 파일에서 사용 가능하도록 수정\r\nexport interface AuthContextType {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  login: (credentials: LoginCredentials) => Promise<void>;\r\n  register: (data: RegisterData) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  updateUser: (user: User) => void;\r\n}\r\n\r\n// 기본값에 대한 타입 명시적 지정\r\nconst defaultAuthContextValue: AuthContextType = {\r\n  user: null,\r\n  isLoading: true,\r\n  isAuthenticated: false,\r\n  login: () => Promise.resolve(),\r\n  register: () => Promise.resolve(),\r\n  logout: () => Promise.resolve(),\r\n  updateUser: () => {},\r\n};\r\n\r\n// createContext에 명시적 타입 지정\r\nexport const AuthContext = createContext<AuthContextType>(defaultAuthContextValue);\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 앱 시작 시 저장된 사용자 정보 불러오기\r\n    const loadUser = async () => {\r\n      try {\r\n        const userJson = await AsyncStorage.getItem('user');\r\n        if (userJson) {\r\n          setUser(JSON.parse(userJson));\r\n          setIsLoading(false);\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('사용자 정보 로드 실패:', error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginCredentials) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await authService.login(credentials);\r\n      const { token, user } = response.data.data;\r\n      \r\n      await AsyncStorage.setItem('auth_token', token);\r\n      await AsyncStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      setUser(user);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (data: RegisterData) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await authService.register(data);\r\n      const { token, user } = response.data.data;\r\n      \r\n      await AsyncStorage.setItem('auth_token', token);\r\n      await AsyncStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      setUser(user);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      await authService.logout();\r\n    } catch (error) {\r\n      console.error('로그아웃 API 오류:', error);\r\n      // 오류가 발생해도 로컬에서는 로그아웃 처리\r\n    } finally {\r\n      await AsyncStorage.removeItem('auth_token');\r\n      await AsyncStorage.removeItem('user');\r\n      setUser(null);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    AsyncStorage.setItem('user', JSON.stringify(updatedUser));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        isLoading,\r\n        isAuthenticated: !!user,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]}