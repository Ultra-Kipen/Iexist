{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","useLocalStorage","key","initialValue","_useState","useState","_useState2","_slicedToArray2","default","storedValue","setStoredValue","useEffect","loadStoredValue","_ref","_asyncToGenerator2","item","AsyncStorage","getItem","JSON","parse","e","error","console","apply","arguments","setValue","useCallback","_ref2","value","valueToStore","Function","undefined","removeItem","saveValue","stringify","setItem","_x","removeValue","_default","exports"],"sources":["useLocalStorage.ts"],"sourcesContent":["// hooks/useLocalStorage.ts\r\n// 로컬 스토리지 데이터 관리를 위한 커스텀 훅\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport function useLocalStorage<T>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, (value: T | ((val: T) => T)) => Promise<void>, () => Promise<void>] {\r\n  // 상태 초기화\r\n  const [storedValue, setStoredValue] = useState<T>(initialValue);\r\n  \r\n  // AsyncStorage에서 데이터 초기 로드\r\n  useEffect(() => {\r\n    const loadStoredValue = async () => {\r\n      try {\r\n        const item = await AsyncStorage.getItem(key);\r\n        // 저장된 값이 없으면 초기값 사용\r\n        if (item === null) {\r\n          setStoredValue(initialValue);\r\n        } else {\r\n          try {\r\n            // JSON 파싱 시도\r\n            setStoredValue(JSON.parse(item));\r\n          } catch (e) {\r\n            // JSON이 아니면 문자열 그대로 저장\r\n            setStoredValue(item as unknown as T);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error loading ${key} from AsyncStorage:`, error);\r\n        setStoredValue(initialValue);\r\n      }\r\n    };\r\n    \r\n    loadStoredValue();\r\n  }, [key, initialValue]);\r\n  \r\n  // 값 설정 함수\r\n  const setValue = useCallback(async (value: T | ((val: T) => T)) => {\r\n    try {\r\n      // 함수인 경우 이전 값을 인자로 전달\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      \r\n      // 상태 업데이트\r\n      setStoredValue(valueToStore);\r\n      \r\n      // AsyncStorage에 저장\r\n      if (valueToStore === undefined) {\r\n        await AsyncStorage.removeItem(key);\r\n      } else {\r\n        const saveValue = typeof valueToStore === 'string' \r\n          ? valueToStore \r\n          : JSON.stringify(valueToStore);\r\n        await AsyncStorage.setItem(key, saveValue);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error setting ${key} in AsyncStorage:`, error);\r\n    }\r\n  }, [key, storedValue]);\r\n  \r\n  // 항목 제거 함수\r\n  const removeValue = useCallback(async () => {\r\n    try {\r\n      await AsyncStorage.removeItem(key);\r\n      setStoredValue(initialValue);\r\n    } catch (error) {\r\n      console.error(`Error removing ${key} from AsyncStorage:`, error);\r\n    }\r\n  }, [key, initialValue]);\r\n  \r\n  return [storedValue, setValue, removeValue];\r\n}\r\n\r\nexport default useLocalStorage;"],"mappings":"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","ignoreList":[]}