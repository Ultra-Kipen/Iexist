4b074eb53c0ab1adfbceedc7678801da
_getJestObj().mock('@react-native-async-storage/async-storage', function () {
  return {
    getItem: jest.fn().mockResolvedValue(null),
    setItem: jest.fn().mockResolvedValue(undefined),
    removeItem: jest.fn().mockResolvedValue(undefined)
  };
});
_getJestObj().mock("../../src/services/api/authService", function () {
  return {
    login: jest.fn(),
    register: jest.fn(),
    logout: jest.fn()
  };
});
_getJestObj().mock("../../src/services/api/emotionService", function () {
  return {
    getAllEmotions: jest.fn().mockResolvedValue({
      data: []
    }),
    getDailyEmotionCheck: jest.fn().mockResolvedValue({
      data: []
    }),
    recordEmotions: jest.fn().mockResolvedValue(undefined)
  };
});
_getJestObj().mock('react-native-paper', function () {
  return {
    Text: 'MockedPaperText',
    Button: 'MockedButton',
    Card: 'MockedCard',
    TextInput: 'MockedTextInput',
    ActivityIndicator: 'MockedActivityIndicator',
    IconButton: 'MockedIconButton',
    Surface: 'MockedSurface',
    Dialog: 'MockedDialog',
    Portal: 'MockedPortal',
    useTheme: function useTheme() {
      return {
        colors: {
          primary: '#6200ee',
          surface: '#ffffff'
        }
      };
    }
  };
});
_getJestObj().mock('react-native-vector-icons/MaterialCommunityIcons', function () {
  return 'MockedIcon';
});
_getJestObj().mock("../../src/screens/HomeScreen", function () {
  return 'MockedHomeScreen';
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _reactNative2 = require("react-native");
var _HomeScreen = _interopRequireDefault(require("../../src/screens/HomeScreen"));
var _AuthContext = require("../../src/contexts/AuthContext");
var _EmotionContext = require("../../src/contexts/EmotionContext");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('Responsive Rendering Tests', function () {
  var originalDimensionsGet = _reactNative2.Dimensions.get;
  afterEach(function () {
    _reactNative2.Dimensions.get = originalDimensionsGet;
  });
  test('화면 크기를 모킹할 수 있어야 함', function () {
    _reactNative2.Dimensions.get = jest.fn(function (dim) {
      if (dim === 'window' || dim === 'screen') {
        return {
          width: 375,
          height: 812,
          scale: 1,
          fontScale: 1
        };
      }
      return originalDimensionsGet(dim);
    });
    var dimensions = _reactNative2.Dimensions.get('window');
    expect(dimensions.width).toBe(375);
    expect(dimensions.height).toBe(812);
  });
  test('작은 화면에서 렌더링 성공', function () {
    _reactNative2.Dimensions.get = jest.fn(function (dim) {
      if (dim === 'window' || dim === 'screen') {
        return {
          width: 320,
          height: 568,
          scale: 1,
          fontScale: 1
        };
      }
      return originalDimensionsGet(dim);
    });
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthContext.AuthProvider, {
        children: (0, _jsxRuntime.jsx)(_EmotionContext.EmotionProvider, {
          children: (0, _jsxRuntime.jsx)(_HomeScreen.default, {})
        })
      })),
      getByText = _render.getByText;
    expect(_reactNative2.Dimensions.get).toHaveBeenCalled();
  });
  test('중간 화면에서 렌더링 성공', function () {
    _reactNative2.Dimensions.get = jest.fn(function (dim) {
      if (dim === 'window' || dim === 'screen') {
        return {
          width: 375,
          height: 812,
          scale: 1,
          fontScale: 1
        };
      }
      return originalDimensionsGet(dim);
    });
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthContext.AuthProvider, {
        children: (0, _jsxRuntime.jsx)(_EmotionContext.EmotionProvider, {
          children: (0, _jsxRuntime.jsx)(_HomeScreen.default, {})
        })
      })),
      toJSON = _render2.toJSON;
    expect(_reactNative2.Dimensions.get).toHaveBeenCalled();
  });
  test('큰 화면에서 렌더링 성공', function () {
    _reactNative2.Dimensions.get = jest.fn(function (dim) {
      if (dim === 'window' || dim === 'screen') {
        return {
          width: 768,
          height: 1024,
          scale: 1,
          fontScale: 1
        };
      }
      return originalDimensionsGet(dim);
    });
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthContext.AuthProvider, {
        children: (0, _jsxRuntime.jsx)(_EmotionContext.EmotionProvider, {
          children: (0, _jsxRuntime.jsx)(_HomeScreen.default, {})
        })
      })),
      toJSON = _render3.toJSON;
    expect(_reactNative2.Dimensions.get).toHaveBeenCalled();
  });
  test('가로 모드에서 렌더링 성공', function () {
    _reactNative2.Dimensions.get = jest.fn(function (dim) {
      if (dim === 'window' || dim === 'screen') {
        return {
          width: 812,
          height: 375,
          scale: 1,
          fontScale: 1
        };
      }
      return originalDimensionsGet(dim);
    });
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthContext.AuthProvider, {
        children: (0, _jsxRuntime.jsx)(_EmotionContext.EmotionProvider, {
          children: (0, _jsxRuntime.jsx)(_HomeScreen.default, {})
        })
      })),
      toJSON = _render4.toJSON;
    expect(_reactNative2.Dimensions.get).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,