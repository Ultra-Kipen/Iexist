4a8bc04417cd9316dcb5a0a4a34abaca
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDescriptors = useDescriptors;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var React = _interopRequireWildcard(require("react"));
var _NavigationBuilderContext = require("./NavigationBuilderContext.js");
var _NavigationContext = require("./NavigationContext.js");
var _NavigationRouteContext = require("./NavigationRouteContext.js");
var _SceneView = require("./SceneView.js");
var _ThemeContext = require("./theming/ThemeContext.js");
var _useNavigationCache2 = require("./useNavigationCache.js");
var _useRouteCache = require("./useRouteCache.js");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function useDescriptors(_ref) {
  var state = _ref.state,
    screens = _ref.screens,
    navigation = _ref.navigation,
    screenOptions = _ref.screenOptions,
    screenLayout = _ref.screenLayout,
    onAction = _ref.onAction,
    getState = _ref.getState,
    setState = _ref.setState,
    addListener = _ref.addListener,
    addKeyedListener = _ref.addKeyedListener,
    onRouteFocus = _ref.onRouteFocus,
    router = _ref.router,
    emitter = _ref.emitter;
  var theme = React.useContext(_ThemeContext.ThemeContext);
  var _React$useState = React.useState({}),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    options = _React$useState2[0],
    setOptions = _React$useState2[1];
  var _React$useContext = React.useContext(_NavigationBuilderContext.NavigationBuilderContext),
    onDispatchAction = _React$useContext.onDispatchAction,
    onOptionsChange = _React$useContext.onOptionsChange,
    scheduleUpdate = _React$useContext.scheduleUpdate,
    flushUpdates = _React$useContext.flushUpdates,
    stackRef = _React$useContext.stackRef;
  var context = React.useMemo(function () {
    return {
      navigation: navigation,
      onAction: onAction,
      addListener: addListener,
      addKeyedListener: addKeyedListener,
      onRouteFocus: onRouteFocus,
      onDispatchAction: onDispatchAction,
      onOptionsChange: onOptionsChange,
      scheduleUpdate: scheduleUpdate,
      flushUpdates: flushUpdates,
      stackRef: stackRef
    };
  }, [navigation, onAction, addListener, addKeyedListener, onRouteFocus, onDispatchAction, onOptionsChange, scheduleUpdate, flushUpdates, stackRef]);
  var _useNavigationCache = (0, _useNavigationCache2.useNavigationCache)({
      state: state,
      getState: getState,
      navigation: navigation,
      setOptions: setOptions,
      router: router,
      emitter: emitter
    }),
    base = _useNavigationCache.base,
    navigations = _useNavigationCache.navigations;
  var routes = (0, _useRouteCache.useRouteCache)(state.routes);
  var getOptions = function getOptions(route, navigation, overrides) {
    var config = screens[route.name];
    var screen = config.props;
    var optionsList = [screenOptions].concat((0, _toConsumableArray2.default)(config.options ? config.options.filter(Boolean) : []), [screen.options, overrides]);
    return optionsList.reduce(function (acc, curr) {
      return Object.assign(acc, typeof curr !== 'function' ? curr : curr({
        route: route,
        navigation: navigation,
        theme: theme
      }));
    }, {});
  };
  var render = function render(route, navigation, customOptions, routeState) {
    var _ref2, _screen$layout;
    var config = screens[route.name];
    var screen = config.props;
    var clearOptions = function clearOptions() {
      return setOptions(function (o) {
        if (route.key in o) {
          var _route$key = route.key,
            _ = o[_route$key],
            rest = (0, _objectWithoutProperties2.default)(o, [_route$key].map(_toPropertyKey));
          return rest;
        }
        return o;
      });
    };
    var layout = (_ref2 = (_screen$layout = screen.layout) != null ? _screen$layout : config.layout) != null ? _ref2 : screenLayout;
    var element = (0, _jsxRuntime.jsx)(_SceneView.SceneView, {
      navigation: navigation,
      route: route,
      screen: screen,
      routeState: routeState,
      getState: getState,
      setState: setState,
      options: customOptions,
      clearOptions: clearOptions
    });
    if (layout != null) {
      element = layout({
        route: route,
        navigation: navigation,
        theme: theme,
        children: element
      });
    }
    return (0, _jsxRuntime.jsx)(_NavigationBuilderContext.NavigationBuilderContext.Provider, {
      value: context,
      children: (0, _jsxRuntime.jsx)(_NavigationContext.NavigationContext.Provider, {
        value: navigation,
        children: (0, _jsxRuntime.jsx)(_NavigationRouteContext.NavigationRouteContext.Provider, {
          value: route,
          children: element
        })
      })
    }, route.key);
  };
  var descriptors = routes.reduce(function (acc, route, i) {
    var navigation = navigations[route.key];
    var customOptions = getOptions(route, navigation, options[route.key]);
    var element = render(route, navigation, customOptions, state.routes[i].state);
    acc[route.key] = {
      route: route,
      navigation: navigation,
      render: function render() {
        return element;
      },
      options: customOptions
    };
    return acc;
  }, {});
  var describe = function describe(route, placeholder) {
    if (!placeholder) {
      if (!(route.key in descriptors)) {
        throw new Error(`Couldn't find a route with the key ${route.key}.`);
      }
      return descriptors[route.key];
    }
    var navigation = base;
    var customOptions = getOptions(route, navigation, {});
    var element = render(route, navigation, customOptions, undefined);
    return {
      route: route,
      navigation: navigation,
      render: function render() {
        return element;
      },
      options: customOptions
    };
  };
  return {
    describe: describe,
    descriptors: descriptors
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,