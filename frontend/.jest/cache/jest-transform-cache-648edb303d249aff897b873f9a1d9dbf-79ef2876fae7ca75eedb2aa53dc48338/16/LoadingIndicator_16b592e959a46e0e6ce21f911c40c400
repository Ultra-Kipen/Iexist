37e3c44ca72f93ae72e9b15de6110cb3
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function cov_esku3f6zw() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\components\\LoadingIndicator.tsx";
  var hash = "21c70d937ea70f3c75541d58c4773b1718d3866f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\components\\LoadingIndicator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 58
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "1": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 26,
          column: 4
        }
      },
      "2": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 41,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 58
          },
          end: {
            line: 12,
            column: 59
          }
        },
        loc: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 16
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 10
          },
          end: {
            line: 14,
            column: 19
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 15,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 18
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 30
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 7
          },
          end: {
            line: 24,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 7
          },
          end: {
            line: 24,
            column: 11
          }
        }, {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 54
          }
        }],
        line: 24
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "21c70d937ea70f3c75541d58c4773b1718d3866f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_esku3f6zw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_esku3f6zw();
cov_esku3f6zw().s[0]++;
var LoadingIndicator = function LoadingIndicator(_ref) {
  var _ref$size = _ref.size,
    size = _ref$size === void 0 ? (cov_esku3f6zw().b[0][0]++, 'large') : _ref$size,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? (cov_esku3f6zw().b[1][0]++, '#4A90E2') : _ref$color,
    _ref$text = _ref.text,
    text = _ref$text === void 0 ? (cov_esku3f6zw().b[2][0]++, '로딩 중...') : _ref$text,
    _ref$testID = _ref.testID,
    testID = _ref$testID === void 0 ? (cov_esku3f6zw().b[3][0]++, 'loading-indicator') : _ref$testID;
  cov_esku3f6zw().f[0]++;
  cov_esku3f6zw().s[1]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    testID: testID,
    children: [(0, _jsxRuntime.jsx)(_reactNative.ActivityIndicator, {
      size: size,
      color: color
    }), (cov_esku3f6zw().b[4][0]++, text) && (cov_esku3f6zw().b[4][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.text,
      children: text
    }))]
  });
};
var styles = (cov_esku3f6zw().s[2]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20
  },
  text: {
    marginTop: 10,
    fontSize: 16,
    color: '#555'
  }
}));
var _default = exports.default = LoadingIndicator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9qc3hSdW50aW1lIiwiY292X2Vza3UzZjZ6dyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJMb2FkaW5nSW5kaWNhdG9yIiwiX3JlZiIsIl9yZWYkc2l6ZSIsInNpemUiLCJfcmVmJGNvbG9yIiwiY29sb3IiLCJfcmVmJHRleHQiLCJ0ZXh0IiwiX3JlZiR0ZXN0SUQiLCJ0ZXN0SUQiLCJqc3hzIiwiVmlldyIsInN0eWxlIiwic3R5bGVzIiwiY29udGFpbmVyIiwiY2hpbGRyZW4iLCJqc3giLCJBY3Rpdml0eUluZGljYXRvciIsIlRleHQiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZmxleCIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsInBhZGRpbmciLCJtYXJnaW5Ub3AiLCJmb250U2l6ZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJMb2FkaW5nSW5kaWNhdG9yLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy9Mb2FkaW5nSW5kaWNhdG9yLnRzeFxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBBY3Rpdml0eUluZGljYXRvciwgU3R5bGVTaGVldCwgVmlldywgVGV4dCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcblxyXG5pbnRlcmZhY2UgTG9hZGluZ0luZGljYXRvclByb3BzIHtcclxuICBzaXplPzogJ3NtYWxsJyB8ICdsYXJnZSc7XHJcbiAgY29sb3I/OiBzdHJpbmc7XHJcbiAgdGV4dD86IHN0cmluZztcclxuICB0ZXN0SUQ/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmNvbnN0IExvYWRpbmdJbmRpY2F0b3I6IFJlYWN0LkZDPExvYWRpbmdJbmRpY2F0b3JQcm9wcz4gPSAoe1xyXG4gIHNpemUgPSAnbGFyZ2UnLFxyXG4gIGNvbG9yID0gJyM0QTkwRTInLFxyXG4gIHRleHQgPSAn66Gc65SpIOykkS4uLicsXHJcbiAgdGVzdElEID0gJ2xvYWRpbmctaW5kaWNhdG9yJyAvLyDrqoXsi5zsoIEgdGVzdElEIOy2lOqwgFxyXG59KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxWaWV3IFxyXG4gICAgICBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn1cclxuICAgICAgdGVzdElEPXt0ZXN0SUR9IC8vIHRlc3RJRCDsoIHsmqlcclxuICAgID5cclxuICAgICAgPEFjdGl2aXR5SW5kaWNhdG9yIHNpemU9e3NpemV9IGNvbG9yPXtjb2xvcn0gLz5cclxuICAgICAge3RleHQgJiYgPFRleHQgc3R5bGU9e3N0eWxlcy50ZXh0fT57dGV4dH08L1RleHQ+fVxyXG4gICAgPC9WaWV3PlxyXG4gICk7XHJcbn07XHJcblxyXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgY29udGFpbmVyOiB7XHJcbiAgICBmbGV4OiAxLFxyXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxyXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICBwYWRkaW5nOiAyMCxcclxuICB9LFxyXG4gIHRleHQ6IHtcclxuICAgIG1hcmdpblRvcDogMTAsXHJcbiAgICBmb250U2l6ZTogMTYsXHJcbiAgICBjb2xvcjogJyM1NTUnLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTG9hZGluZ0luZGljYXRvcjsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQXlFLElBQUFFLFdBQUEsR0FBQUYsT0FBQTtBQUFBLFNBQUFHLGNBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1B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