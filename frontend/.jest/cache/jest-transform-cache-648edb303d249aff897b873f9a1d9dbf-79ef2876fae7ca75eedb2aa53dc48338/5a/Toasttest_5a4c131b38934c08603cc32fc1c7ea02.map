{"version":3,"names":["_getJestObj","mock","animationCallback","current","StyleSheet","create","jest","fn","styles","View","Text","TouchableOpacity","_ref","onPress","children","testID","type","props","Animated","_ref2","style","timing","start","callback","Value","setValue","interpolate","Platform","OS","__animationCallback","_interopRequireDefault","require","_react","_reactNative","_Toast","_interopRequireWildcard","_reactNative2","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_require","useFakeTimers","TestIcon","jsx","describe","beforeEach","clearAllMocks","clearAllTimers","test","_render","render","visible","message","getByTestId","getByText","expect","toBeTruthy","_render2","queryByTestId","toBeNull","types","forEach","_render3","_render4","position","_render5","icon","onClose","_render6","touchable","fireEvent","press","toHaveBeenCalled","duration","advanceTimersByTime","mockToast","show","hide","ToastController","setRef","toHaveBeenCalledWith","not","toThrow"],"sources":["Toast.test.tsx"],"sourcesContent":["// __tests__/components/Toast.test.tsx\r\n// 모킹을 먼저 설정\r\njest.mock('react-native', () => {\r\n  const animationCallback = { current: null };\r\n  \r\n  return {\r\n    StyleSheet: {\r\n      create: jest.fn(styles => styles),\r\n    },\r\n    View: 'View',\r\n    Text: 'Text',\r\n    TouchableOpacity: ({ onPress, children, testID }) => ({\r\n      type: 'TouchableOpacity',\r\n      props: { onPress, children, testID },\r\n    }),\r\n    Animated: {\r\n      View: ({ children, style, testID }) => ({\r\n        type: 'Animated.View',\r\n        props: { children, style, testID },\r\n      }),\r\n      timing: jest.fn(() => ({\r\n        start: jest.fn(callback => {\r\n          // 콜백 저장 및 즉시 실행\r\n          animationCallback.current = callback;\r\n          if (callback) callback();\r\n        }),\r\n      })),\r\n      Value: jest.fn(() => ({\r\n        setValue: jest.fn(),\r\n        interpolate: jest.fn(() => ({})),\r\n      })),\r\n    },\r\n    Platform: { OS: 'android' },\r\n    // animationCallback을 노출해서 테스트에서 접근할 수 있게 함\r\n    __animationCallback: animationCallback,\r\n  };\r\n});\r\n\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport Toast, { ToastController } from '../../src/components/Toast';\r\nimport { Text } from 'react-native';\r\n\r\n// 타이머 모킹\r\njest.useFakeTimers();\r\n\r\n// 간단한 아이콘 컴포넌트 정의\r\nconst TestIcon = () => <Text testID=\"test-icon\">아이콘</Text>;\r\n\r\ndescribe('Toast', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    jest.clearAllTimers();\r\n  });\r\n\r\n  test('renders correctly with default props', () => {\r\n    const { getByTestId, getByText } = render(\r\n      <Toast visible={true} message=\"테스트 메시지\" testID=\"toast\" />\r\n    );\r\n    \r\n    expect(getByTestId('toast')).toBeTruthy();\r\n    expect(getByText('테스트 메시지')).toBeTruthy();\r\n  });\r\n\r\n  test('does not render when visible is false', () => {\r\n    const { queryByTestId } = render(\r\n      <Toast visible={false} message=\"테스트 메시지\" testID=\"toast\" />\r\n    );\r\n    \r\n    expect(queryByTestId('toast')).toBeNull();\r\n  });\r\n\r\n  test('renders with different types', () => {\r\n    const types = ['success', 'error', 'info', 'warning'];\r\n    \r\n    types.forEach(type => {\r\n      const { getByTestId } = render(\r\n        <Toast visible={true} message=\"테스트 메시지\" type={type as any} testID=\"toast\" />\r\n      );\r\n      expect(getByTestId('toast')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  test('renders with top position', () => {\r\n    const { getByTestId } = render(\r\n      <Toast visible={true} message=\"테스트 메시지\" position=\"top\" testID=\"toast\" />\r\n    );\r\n    \r\n    expect(getByTestId('toast')).toBeTruthy();\r\n  });\r\n\r\n  test('icon renders correctly', () => {\r\n    const { getByTestId } = render(\r\n      <Toast \r\n        visible={true} \r\n        message=\"테스트 메시지\" \r\n        icon={<TestIcon />} \r\n        testID=\"toast\"\r\n      />\r\n    );\r\n    \r\n    expect(getByTestId('test-icon')).toBeTruthy();\r\n  });\r\n\r\n  test('closes when pressed', () => {\r\n    const onClose = jest.fn();\r\n    \r\n    const { getByTestId } = render(\r\n      <Toast \r\n        visible={true} \r\n        message=\"테스트 메시지\" \r\n        onClose={onClose} \r\n        testID=\"toast\"\r\n      />\r\n    );\r\n    \r\n    // 직접 hideToast 함수 호출 (TouchableOpacity의 onPress 실행)\r\n    const touchable = getByTestId('toast-touchable');\r\n    fireEvent.press(touchable);\r\n    \r\n    // onClose가 호출되었는지 확인\r\n    expect(onClose).toHaveBeenCalled();\r\n  });\r\n\r\n  test('onClose is called after duration', () => {\r\n    const onClose = jest.fn();\r\n    \r\n    render(\r\n      <Toast \r\n        visible={true} \r\n        message=\"테스트 메시지\" \r\n        duration={1000} \r\n        onClose={onClose} \r\n        testID=\"toast\"\r\n      />\r\n    );\r\n    \r\n    // 타이머 진행\r\n    jest.advanceTimersByTime(1000);\r\n    \r\n    // onClose가 호출되었는지 확인\r\n    expect(onClose).toHaveBeenCalled();\r\n  });\r\n\r\n  test('ToastController should handle show and hide', () => {\r\n    const mockToast = {\r\n      show: jest.fn(),\r\n      hide: jest.fn()\r\n    };\r\n    \r\n    ToastController.setRef(mockToast);\r\n    \r\n    ToastController.show({ message: '테스트 메시지' });\r\n    expect(mockToast.show).toHaveBeenCalledWith({ message: '테스트 메시지' });\r\n    \r\n    ToastController.hide();\r\n    expect(mockToast.hide).toHaveBeenCalled();\r\n  });\r\n\r\n  test('ToastController handles missing instance', () => {\r\n    ToastController.setRef(null);\r\n    \r\n    expect(() => {\r\n      ToastController.show({ message: '테스트 메시지' });\r\n      ToastController.hide();\r\n    }).not.toThrow();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}