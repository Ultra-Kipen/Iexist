{"version":3,"names":["_getJestObj","mock","mockComponents","mockAPI","StyleSheet","create","jest","fn","styles","Platform","OS","Dimensions","get","width","height","Alert","alert","TurboModuleRegistry","getEnforcing","show","debugRemotely","mockedRN","reduce","acc","comp","props","children","Object","assign","virtual","_require","require","global","expect","jestExpect","__DEV__","window","PR_SHOULD_USE_CONTINUATION","useFakeTimers","extend","toBeDisabled","received","pass","disabled","message","toBeEnabled","toBeEmpty","toHaveProp","property","value","ReactTestInstance","defineProperty","prototype","String","toString"],"sources":["setup-testing-library.ts"],"sourcesContent":["// __tests__/setup-testing-library.ts\r\n// @ts-nocheck\r\n\r\n// Jest 설정을 먼저 확인하고 필요한 글로벌 변수 설정\r\nif (typeof global.expect === 'undefined') {\r\n  const jestExpect = require('@jest/expect');\r\n  global.expect = jestExpect;\r\n}\r\n\r\n// 전역 변수 설정\r\nglobal.__DEV__ = true;\r\nglobal.window = global.window || {};\r\nglobal.window.PR_SHOULD_USE_CONTINUATION = true;\r\n\r\n// 타이머 모킹\r\njest.useFakeTimers();\r\n\r\n// React Native 모킹 - 간단하게 유지\r\njest.mock('react-native', () => {\r\n  const mockComponents = ['View', 'Text', 'TouchableOpacity', 'Image', 'ScrollView', 'TextInput'];\r\n  const mockAPI = {\r\n    StyleSheet: { create: jest.fn(styles => styles) },\r\n    Platform: { OS: 'android' },\r\n    Dimensions: { get: jest.fn(() => ({ width: 375, height: 667 })) },\r\n    Alert: { alert: jest.fn() },\r\n    TurboModuleRegistry: {\r\n      getEnforcing: jest.fn(() => ({\r\n        show: jest.fn(),\r\n        debugRemotely: jest.fn()\r\n      }))\r\n    }\r\n  };\r\n\r\n  // 모든 컴포넌트를 간단한 함수로 모킹\r\n  const mockedRN = mockComponents.reduce((acc, comp) => {\r\n    acc[comp] = props => props.children || null;\r\n    return acc;\r\n  }, {});\r\n\r\n  return { ...mockedRN, ...mockAPI };\r\n}, { virtual: true });\r\n\r\n// jest-native/extend-expect 직접 가져오는 대신 필요한 matcher만 설정\r\n// 이렇게 하면 extend-expect.js의 외부 의존성 문제를 우회합니다\r\nexpect.extend({\r\n  toBeDisabled(received) {\r\n    return {\r\n      pass: received.props.disabled === true,\r\n      message: () => `expected ${received} to be disabled`,\r\n    };\r\n  },\r\n  toBeEnabled(received) {\r\n    return {\r\n      pass: received.props.disabled !== true,\r\n      message: () => `expected ${received} to be enabled`,\r\n    };\r\n  },\r\n  toBeEmpty(received) {\r\n    return {\r\n      pass: !received.props.children,\r\n      message: () => `expected ${received} to be empty`,\r\n    };\r\n  },\r\n  toHaveProp(received, property, value) {\r\n    return {\r\n      pass: received.props[property] === value,\r\n      message: () => `expected ${received} to have prop ${property}`,\r\n    };\r\n  },\r\n  // 필요한 다른 matcher들 추가...\r\n});\r\n\r\n// ReactTestInstance 확장 (있는 경우에만)\r\nif (typeof global.ReactTestInstance !== 'undefined') {\r\n  Object.defineProperty(global.ReactTestInstance.prototype, 'textContent', {\r\n    get: function() {\r\n      return String(this.toString());\r\n    }\r\n  });\r\n}"],"mappings":"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","ignoreList":[]}