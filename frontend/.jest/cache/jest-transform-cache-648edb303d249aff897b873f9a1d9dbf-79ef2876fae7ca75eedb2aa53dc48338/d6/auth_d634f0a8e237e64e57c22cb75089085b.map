{"version":3,"names":["_index","require","_storage","cov_2kbp6x52qq","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","login","exports","_ref","_asyncToGenerator2","default","dispatch","email","password","ActionType","SET_LOADING","payload","CLEAR_ERROR","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","setAuthToken","token","setUserData","user","SET_AUTHENTICATED","SET_USER","error","errorMessage","message","SET_ERROR","_x","_x2","_x3","apply","arguments","logout","_ref2","removeAuthToken","RESET_STATE","_x4","register","_ref3","userData","_x5","_x6","getCurrentUser","_ref4","_x7"],"sources":["auth.ts"],"sourcesContent":["import { Dispatch } from 'react';\r\nimport { Action, ActionType } from './index';\r\nimport { setAuthToken, setUserData, removeAuthToken } from '../utils/storage';\r\nimport { handleApiError } from '../utils/error';\r\n\r\n// 로그인 함수\r\nexport const login = async (\r\n  dispatch: Dispatch<Action>,\r\n  email: string,\r\n  password: string\r\n) => {\r\n  try {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: true });\r\n    dispatch({ type: ActionType.CLEAR_ERROR });\r\n\r\n    // API 호출을 위한 실제 코드로 대체해야 합니다\r\n    const response = await fetch('/api/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('로그인에 실패했습니다.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // 토큰과 사용자 데이터 저장\r\n    await setAuthToken(data.token);\r\n    await setUserData(data.user);\r\n    \r\n    // 상태 업데이트\r\n    dispatch({ type: ActionType.SET_AUTHENTICATED, payload: true });\r\n    dispatch({ type: ActionType.SET_USER, payload: data.user });\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    const errorMessage = error instanceof Error ? error.message : '로그인에 실패했습니다.';\r\n    dispatch({ type: ActionType.SET_ERROR, payload: errorMessage });\r\n    throw error;\r\n  } finally {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: false });\r\n  }\r\n};\r\n\r\n// 로그아웃 함수\r\nexport const logout = async (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: true });\r\n    \r\n    // 토큰 제거\r\n    await removeAuthToken();\r\n    \r\n    // 상태 초기화\r\n    dispatch({ type: ActionType.RESET_STATE });\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: ActionType.SET_ERROR,\r\n      payload: '로그아웃 중 오류가 발생했습니다.',\r\n    });\r\n  } finally {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: false });\r\n  }\r\n};\r\n\r\n// 회원가입 함수\r\nexport const register = async (\r\n  dispatch: Dispatch<Action>,\r\n  userData: {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    nickname?: string;\r\n  }\r\n) => {\r\n  try {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: true });\r\n    dispatch({ type: ActionType.CLEAR_ERROR });\r\n    \r\n    // API 호출을 위한 실제 코드로 대체해야 합니다\r\n    const response = await fetch('/api/auth/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('회원가입에 실패했습니다.');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // 자동 로그인이 필요하면 아래 코드 활성화\r\n     await setAuthToken(data.token);\r\n     await setUserData(data.user);\r\n     dispatch({ type: ActionType.SET_AUTHENTICATED, payload: true });\r\n    dispatch({ type: ActionType.SET_USER, payload: data.user });\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    const errorMessage = error instanceof Error ? error.message : '회원가입에 실패했습니다.';\r\n    dispatch({ type: ActionType.SET_ERROR, payload: errorMessage });\r\n    throw error;\r\n  } finally {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: false });\r\n  }\r\n};\r\n\r\n// 사용자 정보 가져오기\r\nexport const getCurrentUser = async (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: true });\r\n    \r\n    // API 호출을 위한 실제 코드로 대체해야 합니다\r\n    const response = await fetch('/api/users/me', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 토큰 추가\r\n      },\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('사용자 정보를 가져오는데 실패했습니다.');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // 상태 업데이트\r\n    dispatch({ type: ActionType.SET_USER, payload: data });\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    const errorMessage = error instanceof Error ? error.message : '사용자 정보를 가져오는데 실패했습니다.';\r\n    dispatch({ type: ActionType.SET_ERROR, payload: errorMessage });\r\n    throw error;\r\n  } finally {\r\n    dispatch({ type: ActionType.SET_LOADING, payload: false });\r\n  }\r\n};"],"mappings":";;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAA8E,SAAAE,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAA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","ignoreList":[]}