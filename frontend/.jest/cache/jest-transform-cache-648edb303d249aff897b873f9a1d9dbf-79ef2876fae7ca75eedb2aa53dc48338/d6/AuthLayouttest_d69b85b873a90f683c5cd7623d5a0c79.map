{"version":3,"names":["_getJestObj","mock","React","require","_ref","children","loading","title","footer","createElement","_interopRequireDefault","_react","_reactNative","_reactNative2","_AuthLayout","_jsxRuntime","_require","jest","describe","it","expect","toBe","_render","render","jsx","default","Text","getByText","toBeTruthy","_render2","getByTestId","queryByText","toBeNull"],"sources":["AuthLayout.test.tsx"],"sourcesContent":["// tests/layouts/AuthLayout.test.tsx (업데이트)\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Text } from 'react-native';\r\n\r\n// 상대 경로 확인 (필요하면 수정)\r\nimport AuthLayout from '../../src/layouts/AuthLayout';\r\n\r\n// 모킹 추가\r\njest.mock('@layouts/AuthLayout', () => {\r\n  const React = require('react');\r\n  return ({ children, loading, title, footer }) => {\r\n    return React.createElement('div', { 'data-testid': 'auth-layout' }, \r\n      loading ? \r\n        React.createElement('div', { 'data-testid': 'loading-indicator' }) : \r\n        children\r\n    );\r\n  };\r\n});\r\n\r\ndescribe('AuthLayout', () => {\r\n  // 기본 테스트\r\n  it('should pass', () => {\r\n    expect(true).toBe(true);\r\n  });\r\n\r\n  // 컴포넌트 렌더링 테스트\r\n  it('renders children correctly', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n\r\n  // 로딩 테스트\r\n  it('shows loading indicator when loading is true', () => {\r\n    const { getByTestId, queryByText } = render(\r\n      <AuthLayout loading={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('loading-indicator')).toBeTruthy();\r\n    expect(queryByText('인증 내용')).toBeNull();\r\n  });\r\n});"],"mappings":"AASAA,WAAA,GAAKC,IAAI,CAAC,qBAAqB,EAAE,YAAM;EACrC,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;EAC9B,OAAO,UAAAC,IAAA,EAA0C;IAAA,IAAvCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;MAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;MAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;MAAEC,MAAM,GAAAJ,IAAA,CAANI,MAAM;IACxC,OAAON,KAAK,CAACO,aAAa,CAAC,KAAK,EAAE;MAAE,aAAa,EAAE;IAAc,CAAC,EAChEH,OAAO,GACLJ,KAAK,CAACO,aAAa,CAAC,KAAK,EAAE;MAAE,aAAa,EAAE;IAAoB,CAAC,CAAC,GAClEJ,QACJ,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAAC,IAAAK,sBAAA,GAAAP,OAAA;AAjBH,IAAAQ,MAAA,GAAAD,sBAAA,CAAAP,OAAA;AACA,IAAAS,YAAA,GAAAT,OAAA;AACA,IAAAU,aAAA,GAAAV,OAAA;AAGA,IAAAW,WAAA,GAAAJ,sBAAA,CAAAP,OAAA;AAAsD,IAAAY,WAAA,GAAAZ,OAAA;AAAA,SAAAH,YAAA;EAAA,IAAAgB,QAAA,GAAAb,OAAA;IAAAc,IAAA,GAAAD,QAAA,CAAAC,IAAA;EAAAjB,WAAA,YAAAA,YAAA;IAAA,OAAAiB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AActDC,QAAQ,CAAC,YAAY,EAAE,YAAM;EAE3BC,EAAE,CAAC,aAAa,EAAE,YAAM;IACtBC,MAAM,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EACzB,CAAC,CAAC;EAGFF,EAAE,CAAC,4BAA4B,EAAE,YAAM;IACrC,IAAAG,OAAA,GAAsB,IAAAC,mBAAM,EAC1B,IAAAR,WAAA,CAAAS,GAAA,EAACV,WAAA,CAAAW,OAAU;QAAApB,QAAA,EACT,IAAAU,WAAA,CAAAS,GAAA,EAACX,aAAA,CAAAa,IAAI;UAAArB,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAJOsB,SAAS,GAAAL,OAAA,CAATK,SAAS;IAMjBP,MAAM,CAACO,SAAS,CAAC,OAAO,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;EACzC,CAAC,CAAC;EAGFT,EAAE,CAAC,8CAA8C,EAAE,YAAM;IACvD,IAAAU,QAAA,GAAqC,IAAAN,mBAAM,EACzC,IAAAR,WAAA,CAAAS,GAAA,EAACV,WAAA,CAAAW,OAAU;QAACnB,OAAO,EAAE,IAAK;QAAAD,QAAA,EACxB,IAAAU,WAAA,CAAAS,GAAA,EAACX,aAAA,CAAAa,IAAI;UAAArB,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAJOyB,WAAW,GAAAD,QAAA,CAAXC,WAAW;MAAEC,WAAW,GAAAF,QAAA,CAAXE,WAAW;IAMhCX,MAAM,CAACU,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAACF,UAAU,CAAC,CAAC;IACrDR,MAAM,CAACW,WAAW,CAAC,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}