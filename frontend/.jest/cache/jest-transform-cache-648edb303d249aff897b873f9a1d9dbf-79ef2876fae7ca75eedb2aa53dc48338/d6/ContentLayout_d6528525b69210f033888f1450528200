e8da5de7bad617ec1622e193176e040a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _useTheme = require("../hooks/useTheme");
var _LoadingIndicator = _interopRequireDefault(require("../components/LoadingIndicator"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_2q9atnlrtg() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\layouts\\ContentLayout.tsx";
  var hash = "09dbfa1210a3ad4c6ed1222933d33ff74e259543";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\layouts\\ContentLayout.tsx",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 52
        },
        end: {
          line: 109,
          column: 1
        }
      },
      "1": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "2": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "3": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "4": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 69,
          column: 3
        }
      },
      "5": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "6": {
        start: {
          line: 72,
          column: 2
        },
        end: {
          line: 96,
          column: 3
        }
      },
      "7": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "8": {
        start: {
          line: 98,
          column: 2
        },
        end: {
          line: 108,
          column: 4
        }
      },
      "9": {
        start: {
          line: 111,
          column: 15
        },
        end: {
          line: 135,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 52
          },
          end: {
            line: 29,
            column: 53
          }
        },
        loc: {
          start: {
            line: 40,
            column: 6
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 40
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 25
          }
        },
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 68,
            column: 7
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 31,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 17
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 20
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 34,
            column: 15
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 15
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 37,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 18
          },
          end: {
            line: 37,
            column: 22
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 7
          },
          end: {
            line: 55,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 7
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 69
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 14
          }
        }, {
          start: {
            line: 60,
            column: 18
          },
          end: {
            line: 60,
            column: 38
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 7
          },
          end: {
            line: 67,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 7
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 69
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 2
          },
          end: {
            line: 96,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 2
          },
          end: {
            line: 96,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 83,
            column: 10
          },
          end: {
            line: 90,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 89,
            column: 14
          }
        }, {
          start: {
            line: 90,
            column: 14
          },
          end: {
            line: 90,
            column: 23
          }
        }],
        line: 83
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "09dbfa1210a3ad4c6ed1222933d33ff74e259543"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2q9atnlrtg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2q9atnlrtg();
cov_2q9atnlrtg().s[0]++;
var ContentLayout = function ContentLayout(_ref) {
  var children = _ref.children,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? (cov_2q9atnlrtg().b[0][0]++, false) : _ref$loading,
    _ref$refreshing = _ref.refreshing,
    refreshing = _ref$refreshing === void 0 ? (cov_2q9atnlrtg().b[1][0]++, false) : _ref$refreshing,
    onRefresh = _ref.onRefresh,
    _ref$padded = _ref.padded,
    padded = _ref$padded === void 0 ? (cov_2q9atnlrtg().b[2][0]++, true) : _ref$padded,
    style = _ref.style,
    contentContainerStyle = _ref.contentContainerStyle,
    _ref$scrollEnabled = _ref.scrollEnabled,
    scrollEnabled = _ref$scrollEnabled === void 0 ? (cov_2q9atnlrtg().b[3][0]++, true) : _ref$scrollEnabled,
    header = _ref.header,
    footer = _ref.footer;
  cov_2q9atnlrtg().f[0]++;
  var _ref2 = (cov_2q9atnlrtg().s[1]++, (0, _useTheme.useTheme)()),
    theme = _ref2.theme;
  cov_2q9atnlrtg().s[2]++;
  if (loading) {
    cov_2q9atnlrtg().b[4][0]++;
    cov_2q9atnlrtg().s[3]++;
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: [styles.loadingContainer, {
        backgroundColor: theme.colors.background
      }],
      children: (0, _jsxRuntime.jsx)(_LoadingIndicator.default, {})
    });
  } else {
    cov_2q9atnlrtg().b[4][1]++;
  }
  cov_2q9atnlrtg().s[4]++;
  var renderContent = function renderContent() {
    cov_2q9atnlrtg().f[1]++;
    cov_2q9atnlrtg().s[5]++;
    return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [(cov_2q9atnlrtg().b[5][0]++, header) && (cov_2q9atnlrtg().b[5][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.headerContainer,
        children: header
      })), (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: [styles.contentInner, (cov_2q9atnlrtg().b[6][0]++, padded) && (cov_2q9atnlrtg().b[6][1]++, styles.paddedContent), contentContainerStyle],
        children: children
      }), (cov_2q9atnlrtg().b[7][0]++, footer) && (cov_2q9atnlrtg().b[7][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: styles.footerContainer,
        children: footer
      }))]
    });
  };
  cov_2q9atnlrtg().s[6]++;
  if (scrollEnabled) {
    cov_2q9atnlrtg().b[8][0]++;
    cov_2q9atnlrtg().s[7]++;
    return (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
      style: [styles.container, {
        backgroundColor: theme.colors.background
      }, style],
      contentContainerStyle: styles.scrollViewContent,
      showsVerticalScrollIndicator: false,
      refreshControl: onRefresh ? (cov_2q9atnlrtg().b[9][0]++, (0, _jsxRuntime.jsx)(_reactNative.RefreshControl, {
        refreshing: refreshing,
        onRefresh: onRefresh,
        colors: [theme.colors.primary],
        tintColor: theme.colors.primary
      })) : (cov_2q9atnlrtg().b[9][1]++, undefined),
      children: renderContent()
    });
  } else {
    cov_2q9atnlrtg().b[8][1]++;
  }
  cov_2q9atnlrtg().s[8]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: [styles.container, {
      backgroundColor: theme.colors.background
    }, style],
    children: renderContent()
  });
};
var styles = (cov_2q9atnlrtg().s[9]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  scrollViewContent: {
    flexGrow: 1
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  headerContainer: {
    width: '100%'
  },
  contentInner: {
    flex: 1
  },
  paddedContent: {
    padding: 16
  },
  footerContainer: {
    width: '100%'
  }
}));
var _default = exports.default = ContentLayout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,