c8efd2895973d1f5c2a54fff76f8ea44
_getJestObj().mock('react-native-paper', function () {
  var mockComponent = function mockComponent(name) {
    var component = function component(props) {
      if (props.children) {
        return props.children;
      }
      if (props.title || props.children) {
        return props.title || props.children;
      }
      return null;
    };
    return component;
  };
  var Card = mockComponent('Card');
  Card.Content = mockComponent('Card.Content');
  Card.Actions = mockComponent('Card.Actions');
  var List = {
    Item: mockComponent('List.Item'),
    Icon: mockComponent('List.Icon')
  };
  return {
    Card: Card,
    Title: mockComponent('Title'),
    Paragraph: mockComponent('Paragraph'),
    Button: function Button(props) {
      return props.children;
    },
    ProgressBar: mockComponent('ProgressBar'),
    useTheme: function useTheme() {
      return {
        colors: {
          primary: '#6200ee',
          background: '#ffffff'
        }
      };
    },
    Provider: function Provider(props) {
      return props.children;
    },
    List: List
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _ChallengeScreen = _interopRequireDefault(require("../../../src/screens/ChallengeScreen"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockConsoleLog = jest.fn();
console.log = mockConsoleLog;
describe('ChallengeScreen 단위 테스트', function () {
  beforeEach(function () {
    mockConsoleLog.mockClear();
  });
  test('각 챌린지의 제목이 올바르게 표시되는지 확인', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _render.getByText;
    expect(getByText('7일간의 감사 일기')).toBeTruthy();
    expect(getByText('30일 긍정 에너지 나누기')).toBeTruthy();
    expect(getByText('21일 명상 습관 만들기')).toBeTruthy();
  });
  test('각 챌린지의 설명이 올바르게 표시되는지 확인', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _render2.getByText;
    expect(getByText('매일 감사한 일 3가지를 기록해보세요.')).toBeTruthy();
    expect(getByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.')).toBeTruthy();
    expect(getByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.')).toBeTruthy();
  });
  test('각 챌린지의 참여자 수가 올바르게 표시되는지 확인', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _render3.getByText;
    expect(getByText('참여자: 128명')).toBeTruthy();
    expect(getByText('참여자: 56명')).toBeTruthy();
    expect(getByText('참여자: 89명')).toBeTruthy();
  });
  test('각 챌린지의 기간이 올바르게 표시되는지 확인', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _render4.getByText;
    expect(getByText('기간: 7일')).toBeTruthy();
    expect(getByText('기간: 30일')).toBeTruthy();
    expect(getByText('기간: 21일')).toBeTruthy();
  });
  test('각 챌린지의 진행률이 올바르게 표시되는지 확인', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _render5.getByText;
    expect(getByText('40% 완료')).toBeTruthy();
    expect(getByText('20% 완료')).toBeTruthy();
    expect(getByText('60% 완료')).toBeTruthy();
  });
  test('참여하기 버튼이 올바르게 동작하는지 확인', function () {
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getAllByText = _render6.getAllByText;
    var joinButtons = getAllByText('참여하기');
    expect(joinButtons).toHaveLength(3);
    _reactNative.fireEvent.press(joinButtons[0]);
    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 1);
    _reactNative.fireEvent.press(joinButtons[1]);
    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 2);
    _reactNative.fireEvent.press(joinButtons[2]);
    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 3);
    expect(mockConsoleLog).toHaveBeenCalledTimes(3);
  });
  test('진행률이 올바르게 표시되는지 확인', function () {
    var _render7 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getAllByText = _render7.getAllByText;
    var progressTexts = [getAllByText('40% 완료')[0], getAllByText('20% 완료')[0], getAllByText('60% 완료')[0]];
    expect(progressTexts.length).toBe(3);
  });
  test('핸들러 함수가 올바른 챌린지 ID를 전달받는지 확인', function () {
    var _render8 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getAllByText = _render8.getAllByText;
    var joinButtons = getAllByText('참여하기');
    _reactNative.fireEvent.press(joinButtons[0]);
    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 1);
    _reactNative.fireEvent.press(joinButtons[1]);
    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 2);
    _reactNative.fireEvent.press(joinButtons[2]);
    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 3);
  });
  test('컴포넌트 렌더링 시 헤더 텍스트가 표시되는지 확인', function () {
    var _render9 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _render9.getByText;
    expect(getByText('현재 진행 중인 챌린지')).toBeTruthy();
  });
  test('모든 챌린지 카드의 정보가 한 번에 표시되는지 확인', function () {
    var _render10 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _render10.getByText;
    expect(getByText('7일간의 감사 일기')).toBeTruthy();
    expect(getByText('매일 감사한 일 3가지를 기록해보세요.')).toBeTruthy();
    expect(getByText('40% 완료')).toBeTruthy();
    expect(getByText('참여자: 128명')).toBeTruthy();
    expect(getByText('기간: 7일')).toBeTruthy();
    expect(getByText('30일 긍정 에너지 나누기')).toBeTruthy();
    expect(getByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.')).toBeTruthy();
    expect(getByText('20% 완료')).toBeTruthy();
    expect(getByText('참여자: 56명')).toBeTruthy();
    expect(getByText('기간: 30일')).toBeTruthy();
    expect(getByText('21일 명상 습관 만들기')).toBeTruthy();
    expect(getByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.')).toBeTruthy();
    expect(getByText('60% 완료')).toBeTruthy();
    expect(getByText('참여자: 89명')).toBeTruthy();
    expect(getByText('기간: 21일')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,