{"version":3,"names":["_getJestObj","mock","React","require","_require","Text","View","createMockComponent","displayName","MockComponent","_ref","children","title","rest","_objectWithoutProperties2","default","_excluded","_jsxRuntime","jsx","testID","Card","Content","Actions","Title","_ref2","Paragraph","_ref3","Button","_ref4","onPress","ProgressBar","List","Item","_ref5","left","Icon","_ref6","icon","useTheme","colors","primary","background","Provider","_ref7","_interopRequireDefault","_react","_reactNative","_ChallengeScreen","_require2","jest","createTestProps","props","Object","assign","navigation","navigate","fn","mockConsoleLog","console","log","describe","component","beforeEach","render","mockClear","it","expect","toBeTruthy","_component","queryAllByText","length","toBeGreaterThan","_component2","_component3","_component4","_component5","_component6","joinButtons","toBe","fireEvent","press","toHaveBeenCalledWith","_component7"],"sources":["ChallengeScreen.unit.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { Text } from 'react-native';\r\n\r\n// 테스트용 팩토리\r\nconst createTestProps = (props) => ({\r\n  navigation: {\r\n    navigate: jest.fn(),\r\n  },\r\n  ...props,\r\n});\r\n\r\n// React Native Paper 모킹\r\njest.mock('react-native-paper', () => {\r\n  const React = require('react');\r\n  const { Text, View } = require('react-native');\r\n  \r\n  const createMockComponent = (displayName) => {\r\n    const MockComponent = ({ children, title, ...rest }) => {\r\n      if (title) {\r\n        return <Text testID={`${displayName}-title`}>{title}</Text>;\r\n      }\r\n      return <Text testID={displayName}>{children}</Text>;\r\n    };\r\n    \r\n    MockComponent.displayName = displayName;\r\n    return MockComponent;\r\n  };\r\n  \r\n  const Card = createMockComponent('Card');\r\n  Card.Content = createMockComponent('Card.Content');\r\n  Card.Actions = createMockComponent('Card.Actions');\r\n  \r\n  const Title = ({ children }) => <Text testID=\"Title\">{children}</Text>;\r\n  const Paragraph = ({ children }) => <Text testID=\"Paragraph\">{children}</Text>;\r\n  const Button = ({ children, onPress }) => <Text testID=\"Button\" onPress={onPress}>{children}</Text>;\r\n  const ProgressBar = () => <View testID=\"ProgressBar\" />;\r\n  \r\n  const List = {\r\n    Item: ({ title, left }) => <Text testID=\"List.Item\">{title}</Text>,\r\n    Icon: ({ icon }) => <Text testID=\"List.Icon\">{icon}</Text>,\r\n  };\r\n  \r\n  return {\r\n    Card,\r\n    Title,\r\n    Paragraph,\r\n    Button,\r\n    ProgressBar,\r\n    useTheme: () => ({\r\n      colors: {\r\n        primary: '#6200ee',\r\n        background: '#ffffff',\r\n      },\r\n    }),\r\n    Provider: ({ children }) => <View testID=\"Provider\">{children}</View>,\r\n    List,\r\n  };\r\n});\r\n\r\n// ChallengeScreen 컴포넌트 임포트\r\n// 모킹 다음에 임포트해야 합니다\r\nimport ChallengeScreen from '../../../src/screens/ChallengeScreen';\r\n\r\n// 콘솔 로그 모킹\r\nconst mockConsoleLog = jest.fn();\r\nconsole.log = mockConsoleLog;\r\n\r\n// 테스트 시작\r\ndescribe('ChallengeScreen', () => {\r\n  let props;\r\n  let component;\r\n  \r\n  beforeEach(() => {\r\n    props = createTestProps({});\r\n    component = render(<ChallengeScreen {...props} />);\r\n    mockConsoleLog.mockClear();\r\n  });\r\n  \r\n  it('renders correctly', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('displays challenge titles', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 제목 확인\r\n    expect(queryAllByText('7일간의 감사 일기').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('30일 긍정 에너지 나누기').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('21일 명상 습관 만들기').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('displays challenge descriptions', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 설명 확인\r\n    expect(queryAllByText('매일 감사한 일 3가지를 기록해보세요.').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('displays participant counts correctly', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 참여자 수 확인\r\n    expect(queryAllByText('참여자: 128명').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('참여자: 56명').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('참여자: 89명').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('displays challenge durations correctly', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 기간 확인\r\n    expect(queryAllByText('기간: 7일').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('기간: 30일').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('기간: 21일').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('displays progress percentages correctly', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 진행률 확인\r\n    expect(queryAllByText('40% 완료').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('20% 완료').length).toBeGreaterThan(0);\r\n    expect(queryAllByText('60% 완료').length).toBeGreaterThan(0);\r\n  });\r\n  \r\n  it('calls handleJoinChallenge with correct ID when button is pressed', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 참여하기 버튼 가져오기\r\n    const joinButtons = queryAllByText('참여하기');\r\n    expect(joinButtons.length).toBe(3);\r\n    \r\n    // 버튼 클릭 테스트\r\n    fireEvent.press(joinButtons[0]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 1);\r\n    \r\n    fireEvent.press(joinButtons[1]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 2);\r\n    \r\n    fireEvent.press(joinButtons[2]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 3);\r\n  });\r\n  \r\n  it('displays the header text correctly', () => {\r\n    const { queryAllByText } = component;\r\n    \r\n    // 헤더 텍스트 확인\r\n    expect(queryAllByText('현재 진행 중인 챌린지').length).toBeGreaterThan(0);\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}