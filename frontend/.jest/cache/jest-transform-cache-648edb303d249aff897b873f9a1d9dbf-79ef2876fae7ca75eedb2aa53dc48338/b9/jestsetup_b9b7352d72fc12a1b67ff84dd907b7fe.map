{"version":3,"names":["_getJestObj","mock","StyleSheet","create","jest","fn","styles","Platform","OS","Dimensions","get","width","height","View","Text","TouchableOpacity","Image","Alert","alert","setItem","getItem","_interopRequireDefault","require","_react","_reactDom","_require","global","__DEV__","window","React","ReactDOM","originalConsoleError","console","error","errorMessage","arguments","length","undefined","includes","apply","useFakeTimers"],"sources":["jest.setup.ts"],"sourcesContent":["// jest.setup.ts의 앞부분\r\n// @ts-nocheck\r\n\r\n// 기본 설정만 남기고 복잡한 모킹은 제거\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// 글로벌 설정\r\nglobal.__DEV__ = true;\r\nglobal.window = global.window || {};\r\n\r\n// React 설정\r\nglobal.React = React;\r\nglobal.ReactDOM = ReactDOM;\r\n\r\n// 콘솔 메시지 필터링\r\nconst originalConsoleError = console.error;\r\nconsole.error = (...args) => {\r\n  const errorMessage = args[0] || '';\r\n  \r\n  // React 내부 오류 무시\r\n  if (errorMessage && typeof errorMessage === 'string' && \r\n      (errorMessage.includes('ReactCurrentDispatcher') || \r\n       errorMessage.includes('ReactCurrentOwner') ||\r\n       errorMessage.includes('act(') ||\r\n       errorMessage.includes('inside a test was not wrapped in act'))) {\r\n    return;\r\n  }\r\n  \r\n  originalConsoleError(...args);\r\n};\r\n\r\n// 간단한 React Native 모킹\r\njest.mock('react-native', () => ({\r\n  StyleSheet: {\r\n    create: jest.fn(styles => styles),\r\n  },\r\n  Platform: { OS: 'android' },\r\n  Dimensions: { get: jest.fn(() => ({ width: 375, height: 667 })) },\r\n  View: 'View',\r\n  Text: 'Text',\r\n  TouchableOpacity: 'TouchableOpacity',\r\n  Image: 'Image',\r\n  Alert: { alert: jest.fn() },\r\n}));\r\n\r\n// 타이머 모킹\r\njest.useFakeTimers();\r\n\r\n// 필수적인 모킹만 유지\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'Icon');\r\njest.mock('@react-native-async-storage/async-storage', () => ({\r\n  setItem: jest.fn(),\r\n  getItem: jest.fn(),\r\n}));\r\n\r\n// @testing-library 설정\r\nimport '@testing-library/jest-native/extend-expect';"],"mappings":"AAiCAA,WAAA,GAAKC,IAAI,CAAC,cAAc,EAAE;EAAA,OAAO;IAC/BC,UAAU,EAAE;MACVC,MAAM,EAAEC,IAAI,CAACC,EAAE,CAAC,UAAAC,MAAM;QAAA,OAAIA,MAAM;MAAA;IAClC,CAAC;IACDC,QAAQ,EAAE;MAAEC,EAAE,EAAE;IAAU,CAAC;IAC3BC,UAAU,EAAE;MAAEC,GAAG,EAAEN,IAAI,CAACC,EAAE,CAAC;QAAA,OAAO;UAAEM,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI,CAAC;MAAA,CAAC;IAAE,CAAC;IACjEC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IACZC,gBAAgB,EAAE,kBAAkB;IACpCC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE;MAAEC,KAAK,EAAEd,IAAI,CAACC,EAAE,CAAC;IAAE;EAC5B,CAAC;AAAA,CAAC,CAAC;AAMHL,WAAA,GAAKC,IAAI,CAAC,kDAAkD,EAAE;EAAA,OAAM,MAAM;AAAA,EAAC;AAC3ED,WAAA,GAAKC,IAAI,CAAC,2CAA2C,EAAE;EAAA,OAAO;IAC5DkB,OAAO,EAAEf,IAAI,CAACC,EAAE,CAAC,CAAC;IAClBe,OAAO,EAAEhB,IAAI,CAACC,EAAE,CAAC;EACnB,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAgB,sBAAA,GAAAC,OAAA;AAlDJ,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAH,sBAAA,CAAAC,OAAA;AAoDAA,OAAA;AAAoD,SAAAtB,YAAA;EAAA,IAAAyB,QAAA,GAAAH,OAAA;IAAAlB,IAAA,GAAAqB,QAAA,CAAArB,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAjDpDsB,MAAM,CAACC,OAAO,GAAG,IAAI;AACrBD,MAAM,CAACE,MAAM,GAAGF,MAAM,CAACE,MAAM,IAAI,CAAC,CAAC;AAGnCF,MAAM,CAACG,KAAK,GAAGA,cAAK;AACpBH,MAAM,CAACI,QAAQ,GAAGA,iBAAQ;AAG1B,IAAMC,oBAAoB,GAAGC,OAAO,CAACC,KAAK;AAC1CD,OAAO,CAACC,KAAK,GAAG,YAAa;EAC3B,IAAMC,YAAY,GAAG,CAAAC,SAAA,CAAAC,MAAA,QAAAC,SAAA,GAAAF,SAAA,QAAW,EAAE;EAGlC,IAAID,YAAY,IAAI,OAAOA,YAAY,KAAK,QAAQ,KAC/CA,YAAY,CAACI,QAAQ,CAAC,wBAAwB,CAAC,IAC/CJ,YAAY,CAACI,QAAQ,CAAC,mBAAmB,CAAC,IAC1CJ,YAAY,CAACI,QAAQ,CAAC,MAAM,CAAC,IAC7BJ,YAAY,CAACI,QAAQ,CAAC,sCAAsC,CAAC,CAAC,EAAE;IACnE;EACF;EAEAP,oBAAoB,CAAAQ,KAAA,SAAAJ,SAAQ,CAAC;AAC/B,CAAC;AAiBD/B,IAAI,CAACoC,aAAa,CAAC,CAAC","ignoreList":[]}