e83a526d5ffac78c8b8c411a1d6dfd06
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mockEmotionService = void 0;
function cov_jxc31j9ax() {
  var path = "C:\\app_build\\Iexist\\frontend\\__tests__\\mocks\\mockEmotionService.ts";
  var hash = "07af0c4d04a70acfe96618288190fc863c1c917e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\__tests__\\mocks\\mockEmotionService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 34
        },
        end: {
          line: 9,
          column: 3
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "07af0c4d04a70acfe96618288190fc863c1c917e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_jxc31j9ax = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jxc31j9ax();
var mockEmotionService = exports.mockEmotionService = (cov_jxc31j9ax().s[0]++, {
  getAllEmotions: jest.fn().mockResolvedValue({
    data: [{
      emotion_id: 1,
      name: '행복',
      icon: 'emoticon-happy-outline',
      color: '#FFD700'
    }]
  }),
  logEmotion: jest.fn().mockResolvedValue({
    data: {
      success: true
    }
  })
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2NrRW1vdGlvblNlcnZpY2UiLCJleHBvcnRzIiwiY292X2p4YzMxajlheCIsInMiLCJnZXRBbGxFbW90aW9ucyIsImplc3QiLCJmbiIsIm1vY2tSZXNvbHZlZFZhbHVlIiwiZGF0YSIsImVtb3Rpb25faWQiLCJuYW1lIiwiaWNvbiIsImNvbG9yIiwibG9nRW1vdGlvbiIsInN1Y2Nlc3MiXSwic291cmNlcyI6WyJtb2NrRW1vdGlvblNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gX190ZXN0c19fL21vY2tzL21vY2tFbW90aW9uU2VydmljZS50c1xyXG5leHBvcnQgY29uc3QgbW9ja0Vtb3Rpb25TZXJ2aWNlID0ge1xyXG4gICAgZ2V0QWxsRW1vdGlvbnM6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZSh7XHJcbiAgICAgIGRhdGE6IFtcclxuICAgICAgICB7IGVtb3Rpb25faWQ6IDEsIG5hbWU6ICftlonrs7UnLCBpY29uOiAnZW1vdGljb24taGFwcHktb3V0bGluZScsIGNvbG9yOiAnI0ZGRDcwMCcgfVxyXG4gICAgICBdXHJcbiAgICB9KSxcclxuICAgIGxvZ0Vtb3Rpb246IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZSh7IGRhdGE6IHsgc3VjY2VzczogdHJ1ZSB9IH0pXHJcbiAgfTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDTyxJQUFNQSxrQkFBa0IsR0FBQUMsT0FBQSxDQUFBRCxrQkFBQSxJQUFBRSxhQUFBLEdBQUFDLENBQUEsT0FBRztFQUM5QkMsY0FBYyxFQUFFQyxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDO0lBQzFDQyxJQUFJLEVBQUUsQ0FDSjtNQUFFQyxVQUFVLEVBQUUsQ0FBQztNQUFFQyxJQUFJLEVBQUUsSUFBSTtNQUFFQyxJQUFJLEVBQUUsd0JBQXdCO01BQUVDLEtBQUssRUFBRTtJQUFVLENBQUM7RUFFbkYsQ0FBQyxDQUFDO0VBQ0ZDLFVBQVUsRUFBRVIsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQztJQUFFQyxJQUFJLEVBQUU7TUFBRU0sT0FBTyxFQUFFO0lBQUs7RUFBRSxDQUFDO0FBQ3JFLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=