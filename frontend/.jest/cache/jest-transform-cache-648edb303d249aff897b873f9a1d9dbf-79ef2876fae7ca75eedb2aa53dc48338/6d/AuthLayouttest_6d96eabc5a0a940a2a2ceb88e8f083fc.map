{"version":3,"names":["_getJestObj","mock","useTheme","theme","colors","background","dark","React","require","_require","View","__esModule","default","createElement","testID","virtual","_interopRequireDefault","_react","_reactNative","_reactNative2","_AuthLayout","_jsxRuntime","_require2","jest","describe","it","_render","render","jsx","children","Text","getByText","expect","toBeTruthy","_render2","loading","getByTestId","queryByText","toBeNull"],"sources":["AuthLayout.test.tsx"],"sourcesContent":["// tests/layouts/AuthLayout.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Text } from 'react-native';\r\nimport AuthLayout from '../../src/layouts/AuthLayout';\r\n\r\n// useTheme 모킹\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#ffffff',\r\n      },\r\n      dark: false,\r\n    },\r\n  }),\r\n}));\r\n\r\n// LoadingIndicator 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => {\r\n  const React = require('react');\r\n  const { View } = require('react-native');\r\n  return {\r\n    __esModule: true,\r\n    default: () => React.createElement(View, { testID: 'loading-indicator' }),\r\n  };\r\n});\r\n\r\n// 이미지 요청 모킹\r\njest.mock('../../src/assets/images/logo.png', () => 'logo-path', { virtual: true });\r\njest.mock('../../src/assets/images/auth-background.jpg', () => 'background-path', { virtual: true });\r\n\r\ndescribe('AuthLayout', () => {\r\n  // 가장 기본적인 테스트만 실행\r\n  it('renders children correctly', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('shows loading indicator when loading is true', () => {\r\n    const { getByTestId, queryByText } = render(\r\n      <AuthLayout loading={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('loading-indicator')).toBeTruthy();\r\n    expect(queryByText('인증 내용')).toBeNull();\r\n  });\r\n});"],"mappings":"AAOAA,WAAA,GAAKC,IAAI,6BAA6B;EAAA,OAAO;IAC3CC,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAS;QACfC,KAAK,EAAE;UACLC,MAAM,EAAE;YACNC,UAAU,EAAE;UACd,CAAC;UACDC,IAAI,EAAE;QACR;MACF,CAAC;IAAA;EACH,CAAC;AAAA,CAAC,CAAC;AAGHN,WAAA,GAAKC,IAAI,0CAA0C,YAAM;EACvD,IAAMM,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;EAC9B,IAAAC,QAAA,GAAiBD,OAAO,CAAC,cAAc,CAAC;IAAhCE,IAAI,GAAAD,QAAA,CAAJC,IAAI;EACZ,OAAO;IACLC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE,SAATA,QAAOA,CAAA;MAAA,OAAQL,KAAK,CAACM,aAAa,CAACH,IAAI,EAAE;QAAEI,MAAM,EAAE;MAAoB,CAAC,CAAC;IAAA;EAC3E,CAAC;AACH,CAAC,CAAC;AAGFd,WAAA,GAAKC,IAAI,qCAAqC;EAAA,OAAM,WAAW;AAAA,GAAE;EAAEc,OAAO,EAAE;AAAK,CAAC,CAAC;AACnFf,WAAA,GAAKC,IAAI,gDAAgD;EAAA,OAAM,iBAAiB;AAAA,GAAE;EAAEc,OAAO,EAAE;AAAK,CAAC,CAAC;AAAC,IAAAC,sBAAA,GAAAR,OAAA;AA7BrG,IAAAS,MAAA,GAAAD,sBAAA,CAAAR,OAAA;AACA,IAAAU,YAAA,GAAAV,OAAA;AACA,IAAAW,aAAA,GAAAX,OAAA;AACA,IAAAY,WAAA,GAAAJ,sBAAA,CAAAR,OAAA;AAAsD,IAAAa,WAAA,GAAAb,OAAA;AAAA,SAAAR,YAAA;EAAA,IAAAsB,SAAA,GAAAd,OAAA;IAAAe,IAAA,GAAAD,SAAA,CAAAC,IAAA;EAAAvB,WAAA,YAAAA,YAAA;IAAA,OAAAuB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AA4BtDC,QAAQ,CAAC,YAAY,EAAE,YAAM;EAE3BC,EAAE,CAAC,4BAA4B,EAAE,YAAM;IACrC,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAC1B,IAAAN,WAAA,CAAAO,GAAA,EAACR,WAAA,CAAAR,OAAU;QAAAiB,QAAA,EACT,IAAAR,WAAA,CAAAO,GAAA,EAACT,aAAA,CAAAW,IAAI;UAAAD,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAJOE,SAAS,GAAAL,OAAA,CAATK,SAAS;IAMjBC,MAAM,CAACD,SAAS,CAAC,OAAO,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EACzC,CAAC,CAAC;EAEFR,EAAE,CAAC,8CAA8C,EAAE,YAAM;IACvD,IAAAS,QAAA,GAAqC,IAAAP,mBAAM,EACzC,IAAAN,WAAA,CAAAO,GAAA,EAACR,WAAA,CAAAR,OAAU;QAACuB,OAAO,EAAE,IAAK;QAAAN,QAAA,EACxB,IAAAR,WAAA,CAAAO,GAAA,EAACT,aAAA,CAAAW,IAAI;UAAAD,QAAA,EAAC;QAAK,CAAM;MAAC,CACR,CACd,CAAC;MAJOO,WAAW,GAAAF,QAAA,CAAXE,WAAW;MAAEC,WAAW,GAAAH,QAAA,CAAXG,WAAW;IAMhCL,MAAM,CAACI,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAACH,UAAU,CAAC,CAAC;IACrDD,MAAM,CAACK,WAAW,CAAC,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}