4bf3bc6d18c4486a3d4a0d1d7a77ef8e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativePaper = require("react-native-paper");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function cov_e1162w0t0() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\screens\\ReviewScreen.tsx";
  var hash = "a5cffbac1d17aed72a9ff9e879f29532ff41e48a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\screens\\ReviewScreen.tsx",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "2": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "3": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 55,
          column: 6
        }
      },
      "4": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 34,
          column: 27
        }
      },
      "5": {
        start: {
          line: 40,
          column: 31
        },
        end: {
          line: 40,
          column: 64
        }
      },
      "6": {
        start: {
          line: 58,
          column: 15
        },
        end: {
          line: 84,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 12,
            column: 22
          }
        },
        loc: {
          start: {
            line: 12,
            column: 27
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 31,
            column: 41
          }
        },
        loc: {
          start: {
            line: 32,
            column: 20
          },
          end: {
            line: 34,
            column: 27
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 26
          }
        },
        loc: {
          start: {
            line: 40,
            column: 31
          },
          end: {
            line: 40,
            column: 64
          }
        },
        line: 40
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 44
          },
          end: {
            line: 28,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 66
          },
          end: {
            line: 28,
            column: 70
          }
        }, {
          start: {
            line: 28,
            column: 73
          },
          end: {
            line: 28,
            column: 77
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 53
          },
          end: {
            line: 48,
            column: 56
          }
        }, {
          start: {
            line: 48,
            column: 59
          },
          end: {
            line: 48,
            column: 62
          }
        }],
        line: 48
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a5cffbac1d17aed72a9ff9e879f29532ff41e48a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_e1162w0t0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_e1162w0t0();
cov_e1162w0t0().s[0]++;
var ReviewScreen = function ReviewScreen() {
  cov_e1162w0t0().f[0]++;
  var _ref = (cov_e1162w0t0().s[1]++, (0, _react.useState)('weekly')),
    _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    period = _ref2[0],
    setPeriod = _ref2[1];
  var theme = (cov_e1162w0t0().s[2]++, (0, _reactNativePaper.useTheme)());
  cov_e1162w0t0().s[3]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_reactNativePaper.SegmentedButtons, {
      value: period,
      onValueChange: setPeriod,
      buttons: [{
        value: 'weekly',
        label: '주간'
      }, {
        value: 'monthly',
        label: '월간'
      }],
      style: styles.segmentedButtons
    }), (0, _jsxRuntime.jsxs)(_reactNativePaper.Title, {
      style: styles.title,
      children: ["\uB098\uC758 ", period === 'weekly' ? (cov_e1162w0t0().b[0][0]++, '주간') : (cov_e1162w0t0().b[0][1]++, '월간'), " \uAE30\uB85D"]
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.imageGrid,
      children: [1, 2, 3, 4, 5, 6].map(function (item) {
        cov_e1162w0t0().f[1]++;
        cov_e1162w0t0().s[4]++;
        return (0, _jsxRuntime.jsx)(_reactNativePaper.Card, {
          style: styles.imageCard,
          children: (0, _jsxRuntime.jsx)(_reactNativePaper.Card.Cover, {
            source: {
              uri: `https://picsum.photos/300?random=${item}`
            }
          })
        }, item);
      })
    }), (0, _jsxRuntime.jsx)(_reactNativePaper.Button, {
      mode: "contained",
      onPress: function onPress() {
        cov_e1162w0t0().f[2]++;
        cov_e1162w0t0().s[5]++;
        return console.log('Show emotion graph');
      },
      style: styles.graphButton,
      children: "\uAC10\uC815 \uBCC0\uD654 \uADF8\uB798\uD504 \uBCF4\uAE30"
    }), (0, _jsxRuntime.jsx)(_reactNativePaper.Card, {
      style: styles.statsCard,
      children: (0, _jsxRuntime.jsxs)(_reactNativePaper.Card.Content, {
        children: [(0, _jsxRuntime.jsxs)(_reactNativePaper.Title, {
          children: ["\uC774\uBC88 ", period === 'weekly' ? (cov_e1162w0t0().b[1][0]++, '주') : (cov_e1162w0t0().b[1][1]++, '달'), "\uC758 \uD1B5\uACC4"]
        }), (0, _jsxRuntime.jsx)(_reactNativePaper.Paragraph, {
          children: "\uAC00\uC7A5 \uB9CE\uC774 \uB290\uB080 \uAC10\uC815: \uD589\uBCF5"
        }), (0, _jsxRuntime.jsx)(_reactNativePaper.Paragraph, {
          children: "\uAC8C\uC2DC\uBB3C \uC218: 7\uAC1C"
        }), (0, _jsxRuntime.jsx)(_reactNativePaper.Paragraph, {
          children: "\uBC1B\uC740 \uACF5\uAC10: 23\uAC1C"
        })]
      })
    })]
  });
};
var styles = (cov_e1162w0t0().s[6]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    padding: 16
  },
  segmentedButtons: {
    marginBottom: 16
  },
  title: {
    marginBottom: 16
  },
  imageGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between'
  },
  imageCard: {
    width: '48%',
    marginBottom: 16
  },
  graphButton: {
    marginVertical: 16
  },
  statsCard: {
    marginBottom: 16
  }
}));
var _default = exports.default = ReviewScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,