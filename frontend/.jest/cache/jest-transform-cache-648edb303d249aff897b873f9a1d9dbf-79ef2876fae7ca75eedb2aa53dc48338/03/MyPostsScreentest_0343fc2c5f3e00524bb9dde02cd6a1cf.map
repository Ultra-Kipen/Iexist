{"version":3,"names":["_getJestObj","mock","getMyPosts","jest","fn","mockResolvedValue","data","posts","deletePost","success","Button","Card","Content","Actions","Chip","Dialog","Title","Portal","SafeAreaView","useNavigation","navigate","goBack","addListener","mockReturnValue","_interopRequireDefault","require","_postService","_require","describe","it","expect","postService","toBeDefined"],"sources":["MyPostsScreen.test.tsx"],"sourcesContent":["// __TESTS__/screens/MyPostsScreen.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport postService from '../../src/services/api/postService';\r\n\r\n// 서비스 모킹\r\njest.mock('../../src/services/api/postService', () => ({\r\n  getMyPosts: jest.fn().mockResolvedValue({\r\n    data: { posts: [] }\r\n  }),\r\n  deletePost: jest.fn().mockResolvedValue({\r\n    data: { success: true }\r\n  })\r\n}));\r\n\r\n// 의존성 모킹\r\njest.mock('react-native-paper', () => ({\r\n  Button: 'Button',\r\n  Card: {\r\n    Content: 'Card.Content',\r\n    Actions: 'Card.Actions',\r\n  },\r\n  Chip: 'Chip',\r\n  Dialog: {\r\n    Title: 'Dialog.Title',\r\n    Content: 'Dialog.Content',\r\n    Actions: 'Dialog.Actions',\r\n  },\r\n  Portal: 'Portal',\r\n}));\r\n\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'Icon');\r\njest.mock('react-native-safe-area-context', () => ({ SafeAreaView: 'SafeAreaView' }));\r\n\r\n// 네비게이션 모킹\r\njest.mock('@react-navigation/native', () => ({\r\n  useNavigation: () => ({\r\n    navigate: jest.fn(),\r\n    goBack: jest.fn(), \r\n    addListener: jest.fn().mockReturnValue(jest.fn()),\r\n  }),\r\n}));\r\n\r\n// 컴포넌트 자체를 모킹\r\njest.mock('../../src/screens/MyPostsScreen', () => 'MyPostsScreen');\r\n\r\ndescribe('MyPostsScreen', () => {\r\n  it('service methods are defined', () => {\r\n    expect(postService.getMyPosts).toBeDefined();\r\n    expect(postService.deletePost).toBeDefined();\r\n  });\r\n});"],"mappings":"AAMAA,WAAA,GAAKC,IAAI,uCAAuC;EAAA,OAAO;IACrDC,UAAU,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;MACtCC,IAAI,EAAE;QAAEC,KAAK,EAAE;MAAG;IACpB,CAAC,CAAC;IACFC,UAAU,EAAEL,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;MACtCC,IAAI,EAAE;QAAEG,OAAO,EAAE;MAAK;IACxB,CAAC;EACH,CAAC;AAAA,CAAC,CAAC;AAGHT,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE;EAAA,OAAO;IACrCS,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE;MACJC,OAAO,EAAE,cAAc;MACvBC,OAAO,EAAE;IACX,CAAC;IACDC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE;MACNC,KAAK,EAAE,cAAc;MACrBJ,OAAO,EAAE,gBAAgB;MACzBC,OAAO,EAAE;IACX,CAAC;IACDI,MAAM,EAAE;EACV,CAAC;AAAA,CAAC,CAAC;AAEHjB,WAAA,GAAKC,IAAI,CAAC,kDAAkD,EAAE;EAAA,OAAM,MAAM;AAAA,EAAC;AAC3ED,WAAA,GAAKC,IAAI,CAAC,gCAAgC,EAAE;EAAA,OAAO;IAAEiB,YAAY,EAAE;EAAe,CAAC;AAAA,CAAC,CAAC;AAGrFlB,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE;EAAA,OAAO;IAC3CkB,aAAa,EAAE,SAAfA,aAAaA,CAAA;MAAA,OAAS;QACpBC,QAAQ,EAAEjB,IAAI,CAACC,EAAE,CAAC,CAAC;QACnBiB,MAAM,EAAElB,IAAI,CAACC,EAAE,CAAC,CAAC;QACjBkB,WAAW,EAAEnB,IAAI,CAACC,EAAE,CAAC,CAAC,CAACmB,eAAe,CAACpB,IAAI,CAACC,EAAE,CAAC,CAAC;MAClD,CAAC;IAAA;EACH,CAAC;AAAA,CAAC,CAAC;AAGHJ,WAAA,GAAKC,IAAI,oCAAoC;EAAA,OAAM,eAAe;AAAA,EAAC;AAAC,IAAAuB,sBAAA,GAAAC,OAAA;AAzCpE,IAAAC,YAAA,GAAAF,sBAAA,CAAAC,OAAA;AAA6D,SAAAzB,YAAA;EAAA,IAAA2B,QAAA,GAAAF,OAAA;IAAAtB,IAAA,GAAAwB,QAAA,CAAAxB,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AA2C7DyB,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,EAAE,CAAC,6BAA6B,EAAE,YAAM;IACtCC,MAAM,CAACC,oBAAW,CAAC7B,UAAU,CAAC,CAAC8B,WAAW,CAAC,CAAC;IAC5CF,MAAM,CAACC,oBAAW,CAACvB,UAAU,CAAC,CAACwB,WAAW,CAAC,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}