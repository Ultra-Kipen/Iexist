{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_jsxRuntime","ThemeContext","React","createContext","theme","toggleTheme","ThemeProvider","_ref","children","_React$useState","useState","_React$useState2","_slicedToArray2","default","setTheme","jsx","Provider","value","ThemedComponent","_React$useContext","useContext","containerStyle","backgroundColor","padding","textStyle","color","buttonStyle","borderRadius","marginTop","buttonTextStyle","jsxs","View","style","Text","testID","TouchableOpacity","onPress","accessibilityLabel","AnimatedThemeTransition","_React$useContext2","_React$useState3","_React$useState4","transitioning","setTransitioning","handleThemeToggle","setTimeout","opacity","describe","test","_render","render","getByTestId","getByText","expect","toBeTruthy","toggleButton","fireEvent","press","_asyncToGenerator2","jest","useFakeTimers","_render2","queryByText","act","advanceTimersByTime","toBeNull","useRealTimers"],"sources":["DarkModeTransition.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent, act } from '@testing-library/react-native';\r\nimport { Text, View, TouchableOpacity } from 'react-native';\r\n\r\n// 다크 모드 컨텍스트를 위한 목 구현\r\nconst ThemeContext = React.createContext({\r\n  theme: 'light',\r\n  toggleTheme: () => {},\r\n});\r\n\r\n// 테마 제공자 컴포넌트\r\nconst ThemeProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [theme, setTheme] = React.useState('light');\r\n  \r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'light' ? 'dark' : 'light');\r\n  };\r\n  \r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// 테마를 사용하는 컴포넌트\r\nconst ThemedComponent = () => {\r\n  const { theme, toggleTheme } = React.useContext(ThemeContext);\r\n  \r\n  // 인라인 스타일을 객체로 정의\r\n  const containerStyle = {\r\n    backgroundColor: theme === 'light' ? '#ffffff' : '#121212',\r\n    padding: 20,\r\n  };\r\n  \r\n  const textStyle = {\r\n    color: theme === 'light' ? '#000000' : '#ffffff',\r\n  };\r\n  \r\n  const buttonStyle = {\r\n    backgroundColor: theme === 'light' ? '#007bff' : '#0056b3',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  };\r\n  \r\n  const buttonTextStyle = {\r\n    color: '#ffffff',\r\n  };\r\n  \r\n  return (\r\n    <View style={containerStyle}>\r\n      <Text style={textStyle} testID=\"theme-text\">현재 테마: {theme}</Text>\r\n      <TouchableOpacity\r\n        style={buttonStyle}\r\n        onPress={toggleTheme}\r\n        accessibilityLabel=\"테마 전환 버튼\"\r\n        testID=\"theme-toggle-button\"\r\n      >\r\n        <Text style={buttonTextStyle}>테마 전환</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\n// 테마 전환 애니메이션을 모의하는 컴포넌트\r\nconst AnimatedThemeTransition = () => {\r\n  const { theme, toggleTheme } = React.useContext(ThemeContext);\r\n  const [transitioning, setTransitioning] = React.useState(false);\r\n  \r\n  const handleThemeToggle = () => {\r\n    setTransitioning(true);\r\n    // 실제로는 애니메이션 라이브러리를 사용하지만 여기서는 setTimeout으로 모의\r\n    setTimeout(() => {\r\n      toggleTheme();\r\n      setTransitioning(false);\r\n    }, 300);\r\n  };\r\n  \r\n  // 인라인 스타일을 객체로 정의\r\n  const containerStyle = {\r\n    backgroundColor: transitioning \r\n      ? '#808080' // 전환 중 회색\r\n      : theme === 'light' ? '#ffffff' : '#121212',\r\n    padding: 20,\r\n    opacity: transitioning ? 0.7 : 1, // 전환 중 약간 투명하게\r\n  };\r\n  \r\n  const textStyle = {\r\n    color: theme === 'light' ? '#000000' : '#ffffff',\r\n  };\r\n  \r\n  const buttonStyle = {\r\n    backgroundColor: theme === 'light' ? '#007bff' : '#0056b3',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  };\r\n  \r\n  const buttonTextStyle = {\r\n    color: '#ffffff',\r\n  };\r\n  \r\n  return (\r\n    <View style={containerStyle}>\r\n      <Text style={textStyle} testID=\"transition-text\">\r\n        현재 테마: {theme}{transitioning ? ' (전환 중...)' : ''}\r\n      </Text>\r\n      <TouchableOpacity\r\n        style={buttonStyle}\r\n        onPress={handleThemeToggle}\r\n        accessibilityLabel=\"테마 전환 버튼\"\r\n        testID=\"theme-toggle-button\"\r\n      >\r\n        <Text style={buttonTextStyle}>테마 전환</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\ndescribe('다크 모드 전환 테스트', () => {\r\n  test('테마 전환 버튼 클릭 시 테마가 변경되어야 함', () => {\r\n    const { getByTestId, getByText } = render(\r\n      <ThemeProvider>\r\n        <ThemedComponent />\r\n      </ThemeProvider>\r\n    );\r\n    \r\n    // 초기 테마 확인\r\n    expect(getByText('현재 테마: light')).toBeTruthy();\r\n    \r\n    // 테마 전환 버튼 클릭\r\n    const toggleButton = getByTestId('theme-toggle-button');\r\n    fireEvent.press(toggleButton);\r\n    \r\n    // 테마가 dark로 변경되었는지 확인\r\n    expect(getByText('현재 테마: dark')).toBeTruthy();\r\n    \r\n    // 다시 테마 전환 버튼 클릭\r\n    fireEvent.press(toggleButton);\r\n    \r\n    // 테마가 light로 돌아왔는지 확인\r\n    expect(getByText('현재 테마: light')).toBeTruthy();\r\n  });\r\n  \r\n  test('애니메이션 전환 시 중간 상태가 표시되어야 함', async () => {\r\n    jest.useFakeTimers();\r\n    \r\n    const { getByTestId, getByText, queryByText } = render(\r\n      <ThemeProvider>\r\n        <AnimatedThemeTransition />\r\n      </ThemeProvider>\r\n    );\r\n    \r\n    // 초기 테마 확인\r\n    expect(getByText('현재 테마: light')).toBeTruthy();\r\n    \r\n    // 테마 전환 버튼 클릭\r\n    const toggleButton = getByTestId('theme-toggle-button');\r\n    fireEvent.press(toggleButton);\r\n    \r\n    // 중간 상태 확인\r\n    expect(getByText('현재 테마: light (전환 중...)')).toBeTruthy();\r\n    \r\n    // 타이머 진행\r\n    await act(async () => {\r\n      jest.advanceTimersByTime(300);\r\n    });\r\n    \r\n    // 이 시점에서 toggleTheme가 호출되었고 transitioning이 false로 설정됐을 것입니다\r\n    expect(queryByText('현재 테마: light (전환 중...)')).toBeNull();\r\n    expect(getByText('현재 테마: dark')).toBeTruthy();\r\n    \r\n    // 타이머 정리\r\n    jest.useRealTimers();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}