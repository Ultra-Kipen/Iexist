{"version":3,"names":["cache","cov_1h3ncsqxp2","s","Map","setCache","key","value","ttl","f","item","timestamp","Date","now","expiry","b","set","getCache","get","delete","removeCache","clearCache","clear","getCacheKeys","Array","from","keys","getCacheSize","size","isCacheExpired","MemoryCache","exports","options","arguments","length","undefined","_classCallCheck2","default","maxSize","_createClass2","oldestKey","getOldestKey","cleanup","_ref","entries","_ref2","_slicedToArray2","oldestTime","Infinity","_ref3","_ref4","globalCache"],"sources":["cache.ts"],"sourcesContent":["// utils/cache.ts\r\n// 간단한 인메모리 캐시 구현 (함수형 인터페이스)\r\n\r\ninterface CacheItem<T> {\r\n  value: T;\r\n  timestamp: number;\r\n  expiry: number | null;\r\n}\r\n\r\n// 캐시 저장소\r\nconst cache: Map<string, CacheItem<any>> = new Map();\r\n\r\n/**\r\n * 캐시에 데이터 저장\r\n * @param key 캐시 키\r\n * @param value 저장할 값\r\n * @param ttl 만료 시간(초), 지정하지 않으면 만료되지 않음\r\n */\r\nexport function setCache<T>(key: string, value: T, ttl?: number): void {\r\n  const item: CacheItem<T> = {\r\n    value,\r\n    timestamp: Date.now(),\r\n    expiry: ttl ? Date.now() + ttl * 1000 : null\r\n  };\r\n  \r\n  cache.set(key, item);\r\n}\r\n\r\n/**\r\n * 캐시에서 데이터 조회\r\n * @param key 캐시 키\r\n * @returns 캐시된 값 또는 만료된 경우 null\r\n */\r\nexport function getCache<T>(key: string): T | null {\r\n  const item = cache.get(key);\r\n  \r\n  if (!item) {\r\n    return null;\r\n  }\r\n  \r\n  // 만료 체크\r\n  if (item.expiry && Date.now() > item.expiry) {\r\n    cache.delete(key);\r\n    return null;\r\n  }\r\n  \r\n  return item.value as T;\r\n}\r\n\r\n/**\r\n * 캐시에서 특정 키의 데이터 제거\r\n * @param key 제거할 캐시 키\r\n */\r\nexport function removeCache(key: string): void {\r\n  cache.delete(key);\r\n}\r\n\r\n/**\r\n * 캐시 전체 비우기\r\n */\r\nexport function clearCache(): void {\r\n  cache.clear();\r\n}\r\n\r\n/**\r\n * 모든 캐시 키 목록 반환\r\n * @returns 캐시 키 배열\r\n */\r\nexport function getCacheKeys(): string[] {\r\n  return Array.from(cache.keys());\r\n}\r\n\r\n/**\r\n * 현재 캐시에 저장된 항목 수 반환\r\n * @returns 캐시 크기\r\n */\r\nexport function getCacheSize(): number {\r\n  return cache.size;\r\n}\r\n\r\n/**\r\n * 특정 캐시 키가 만료되었는지 확인\r\n * @param key 확인할 캐시 키\r\n * @returns 만료 여부 (만료되었거나 존재하지 않으면 true)\r\n */\r\nexport function isCacheExpired(key: string): boolean {\r\n  const item = cache.get(key);\r\n  \r\n  if (!item) {\r\n    return true;\r\n  }\r\n  \r\n  if (item.expiry === null) {\r\n    return false;\r\n  }\r\n  \r\n  return Date.now() > item.expiry;\r\n}\r\n\r\n// 클래스 기반 캐시 구현\r\nexport interface CacheOptions {\r\n  /** 캐시 유효 시간 (밀리초) */\r\n  ttl?: number;\r\n  /** 최대 캐시 항목 수 */\r\n  maxSize?: number;\r\n}\r\n\r\ninterface CacheClassItem<T> {\r\n  value: T;\r\n  timestamp: number;\r\n}\r\n\r\nexport class MemoryCache {\r\n  private cache: Map<string, CacheClassItem<any>> = new Map();\r\n  private ttl: number;\r\n  private maxSize: number;\r\n\r\n  constructor(options: CacheOptions = {}) {\r\n    this.ttl = options.ttl || 5 * 60 * 1000; // 기본 5분\r\n    this.maxSize = options.maxSize || 100; // 기본 100개 항목\r\n  }\r\n\r\n  /**\r\n   * 캐시에 항목 설정\r\n   * @param key 캐시 키\r\n   * @param value 캐시할 값\r\n   * @param ttl 특정 항목의 TTL (옵션)\r\n   */\r\n  set<T>(key: string, value: T, ttl?: number): void {\r\n    // 캐시 크기 제한 초과 시 가장 오래된 항목 제거\r\n    if (this.cache.size >= this.maxSize) {\r\n      const oldestKey = this.getOldestKey();\r\n      if (oldestKey) {\r\n        this.cache.delete(oldestKey);\r\n      }\r\n    }\r\n\r\n    this.cache.set(key, {\r\n      value,\r\n      timestamp: Date.now() + (ttl || this.ttl),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 캐시에서 항목 가져오기\r\n   * @param key 캐시 키\r\n   * @returns 캐시된 값 또는 undefined\r\n   */\r\n  get<T>(key: string): T | undefined {\r\n    const item = this.cache.get(key);\r\n    \r\n    // 항목이 없거나 만료된 경우\r\n    if (!item || Date.now() > item.timestamp) {\r\n      if (item) {\r\n        this.cache.delete(key); // 만료된 항목 제거\r\n      }\r\n      return undefined;\r\n    }\r\n    \r\n    return item.value as T;\r\n  }\r\n\r\n  /**\r\n   * 캐시에서 항목 삭제\r\n   * @param key 캐시 키\r\n   */\r\n  delete(key: string): boolean {\r\n    return this.cache.delete(key);\r\n  }\r\n\r\n  /**\r\n   * 모든 캐시 항목 삭제\r\n   */\r\n  clear(): void {\r\n    this.cache.clear();\r\n  }\r\n\r\n  /**\r\n   * 만료된 모든 캐시 항목 삭제\r\n   */\r\n  cleanup(): void {\r\n    const now = Date.now();\r\n    for (const [key, item] of this.cache.entries()) {\r\n      if (now > item.timestamp) {\r\n        this.cache.delete(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 가장 오래된 캐시 키 반환\r\n   */\r\n  private getOldestKey(): string | null {\r\n    let oldestKey: string | null = null;\r\n    let oldestTime = Infinity;\r\n\r\n    for (const [key, item] of this.cache.entries()) {\r\n      if (item.timestamp < oldestTime) {\r\n        oldestTime = item.timestamp;\r\n        oldestKey = key;\r\n      }\r\n    }\r\n\r\n    return oldestKey;\r\n  }\r\n\r\n  /**\r\n   * 현재 캐시 크기 반환\r\n   */\r\n  get size(): number {\r\n    return this.cache.size;\r\n  }\r\n}\r\n\r\n// 전역 캐시 인스턴스\r\nexport const globalCache = new MemoryCache();"],"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","ignoreList":[]}