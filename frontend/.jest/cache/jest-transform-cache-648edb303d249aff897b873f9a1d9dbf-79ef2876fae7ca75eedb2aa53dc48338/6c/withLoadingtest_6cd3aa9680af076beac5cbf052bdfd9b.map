{"version":3,"names":["_getJestObj","mock","MockLoadingIndicator","_interopRequireDefault","require","_react","_reactNative","_withLoading","_reactNative2","_jsxRuntime","_require","jest","describe","TestComponent","_ref","message","jsx","Text","children","LoadingComponent","withLoading","test","result","render","isLoading","expect","toBeTruthy","_render","getByText","_render2","displayName","toBe","_render3","rerender"],"sources":["withLoading.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { withLoading } from '../../src/hoc/withLoading';\r\nimport { Text } from 'react-native';\r\n\r\n// LoadingIndicator 모듈을 간단한 문자열을 반환하는 함수로 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => function MockLoadingIndicator() {\r\n  return '로딩 인디케이터 컴포넌트';\r\n});\r\n\r\ndescribe('withLoading HOC', () => {\r\n  // 테스트 컴포넌트\r\n  const TestComponent = ({ message }: { message: string }) => <Text>{message}</Text>;\r\n  const LoadingComponent = withLoading(TestComponent);\r\n\r\n  test('isLoading이 true이면 로딩 인디케이터를 표시해야 함', () => {\r\n    const result = render(\r\n      <LoadingComponent isLoading={true} message=\"테스트 메시지\" />\r\n    );\r\n    \r\n    // 컴포넌트가 렌더링되었는지만 확인\r\n    expect(result).toBeTruthy();\r\n  });\r\n\r\n  test('isLoading이 false이면 원래 컴포넌트를 렌더링해야 함', () => {\r\n    const { getByText } = render(\r\n      <LoadingComponent isLoading={false} message=\"테스트 메시지\" />\r\n    );\r\n    \r\n    expect(getByText('테스트 메시지')).toBeTruthy();\r\n  });\r\n\r\n  test('isLoading prop이 제공되지 않으면 원래 컴포넌트를 렌더링해야 함', () => {\r\n    const { getByText } = render(\r\n      <LoadingComponent message=\"테스트 메시지\" />\r\n    );\r\n    \r\n    expect(getByText('테스트 메시지')).toBeTruthy();\r\n  });\r\n\r\n  test('HOC가 displayName을 올바르게 설정해야 함', () => {\r\n    expect(LoadingComponent.displayName).toBe('withLoading(TestComponent)');\r\n  });\r\n\r\n  test('isLoading 상태가 변경될 때 컴포넌트가 적절하게 리렌더링되어야 함', () => {\r\n    const { getByText, rerender } = render(\r\n      <LoadingComponent isLoading={true} message=\"테스트 메시지\" />\r\n    );\r\n    \r\n    // isLoading을 false로 변경\r\n    rerender(<LoadingComponent isLoading={false} message=\"테스트 메시지\" />);\r\n    \r\n    expect(getByText('테스트 메시지')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}