{"version":3,"names":["_react","_interopRequireDefault","require","_LoadingIndicator","_jsxRuntime","_excluded","cov_2oe8pvli7x","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","withLoading","exports","WrappedComponent","WithLoading","props","_ref","isLoading","restProps","_objectWithoutProperties2","default","jsx","Object","assign","wrappedComponentName","displayName"],"sources":["withLoading.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LoadingIndicator from '../components/LoadingIndicator';\r\n\r\ninterface WithLoadingProps {\r\n  isLoading?: boolean;\r\n}\r\n\r\n/**\r\n * 컴포넌트에 로딩 상태를 추가하는 HOC\r\n * @param WrappedComponent 래핑할 컴포넌트\r\n * @returns 로딩 상태 처리 로직이 추가된 새 컴포넌트\r\n */\r\nexport const withLoading = <P extends object>(\r\n  WrappedComponent: React.ComponentType<P & WithLoadingProps>\r\n) => {\r\n  const WithLoading: React.FC<P & WithLoadingProps> = (props) => {\r\n    const { isLoading, ...restProps } = props;\r\n\r\n    if (isLoading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    return <WrappedComponent {...(restProps as P)} />;\r\n  };\r\n\r\n  const wrappedComponentName = \r\n    WrappedComponent.displayName || \r\n    WrappedComponent.name || \r\n    'Component';\r\n    \r\n  WithLoading.displayName = `withLoading(${wrappedComponentName})`;\r\n\r\n  return WithLoading;\r\n};"],"mappings":"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","ignoreList":[]}