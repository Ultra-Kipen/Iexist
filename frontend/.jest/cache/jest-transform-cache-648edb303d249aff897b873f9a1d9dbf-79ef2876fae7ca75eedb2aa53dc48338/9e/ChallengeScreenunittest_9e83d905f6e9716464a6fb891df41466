4f764dd6285b4817d2631bdb0785e0ab
_getJestObj().mock('react-native-paper', function () {
  var originalModule = jest.requireActual('react-native-paper');
  return Object.assign({}, originalModule, {
    useTheme: function useTheme() {
      return {
        colors: {
          primary: '#6200ee',
          background: '#ffffff'
        }
      };
    },
    Provider: function Provider(_ref) {
      var children = _ref.children;
      return children;
    },
    List: {
      Item: function Item(props) {
        var title = props.title;
        return (0, _jsxRuntime.jsx)(originalModule.Text, {
          children: title
        });
      },
      Icon: function Icon(props) {
        return (0, _jsxRuntime.jsx)(originalModule.Text, {
          children: props.icon
        });
      }
    }
  });
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _reactNativePaper = require("react-native-paper");
var _ChallengeScreen = _interopRequireDefault(require("../../../src/screens/ChallengeScreen"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var renderWithProvider = function renderWithProvider(component) {
  return (0, _reactNative.render)((0, _jsxRuntime.jsx)(_reactNativePaper.Provider, {
    children: component
  }));
};
var mockConsoleLog = jest.fn();
console.log = mockConsoleLog;
describe('ChallengeScreen 단위 테스트', function () {
  beforeEach(function () {
    mockConsoleLog.mockClear();
  });
  test('각 챌린지의 제목이 올바르게 표시되는지 확인', function () {
    var _renderWithProvider = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _renderWithProvider.getByText;
    expect(getByText('7일간의 감사 일기')).toBeTruthy();
    expect(getByText('30일 긍정 에너지 나누기')).toBeTruthy();
    expect(getByText('21일 명상 습관 만들기')).toBeTruthy();
  });
  test('각 챌린지의 설명이 올바르게 표시되는지 확인', function () {
    var _renderWithProvider2 = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _renderWithProvider2.getByText;
    expect(getByText('매일 감사한 일 3가지를 기록해보세요.')).toBeTruthy();
    expect(getByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.')).toBeTruthy();
    expect(getByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.')).toBeTruthy();
  });
  test('각 챌린지의 참여자 수가 올바르게 표시되는지 확인', function () {
    var _renderWithProvider3 = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _renderWithProvider3.getByText;
    expect(getByText('참여자: 128명')).toBeTruthy();
    expect(getByText('참여자: 56명')).toBeTruthy();
    expect(getByText('참여자: 89명')).toBeTruthy();
  });
  test('각 챌린지의 기간이 올바르게 표시되는지 확인', function () {
    var _renderWithProvider4 = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _renderWithProvider4.getByText;
    expect(getByText('기간: 7일')).toBeTruthy();
    expect(getByText('기간: 30일')).toBeTruthy();
    expect(getByText('기간: 21일')).toBeTruthy();
  });
  test('각 챌린지의 진행률이 올바르게 표시되는지 확인', function () {
    var _renderWithProvider5 = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _renderWithProvider5.getByText;
    expect(getByText('40% 완료')).toBeTruthy();
    expect(getByText('20% 완료')).toBeTruthy();
    expect(getByText('60% 완료')).toBeTruthy();
  });
  test('참여하기 버튼이 올바르게 동작하는지 확인', function () {
    var _renderWithProvider6 = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getAllByText = _renderWithProvider6.getAllByText;
    var joinButtons = getAllByText('참여하기');
    expect(joinButtons).toHaveLength(3);
    _reactNative.fireEvent.press(joinButtons[0]);
    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 1);
    _reactNative.fireEvent.press(joinButtons[1]);
    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 2);
    _reactNative.fireEvent.press(joinButtons[2]);
    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 3);
    expect(mockConsoleLog).toHaveBeenCalledTimes(3);
  });
  test('진행률이 올바르게 표시되는지 확인', function () {
    var _renderWithProvider7 = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getAllByText = _renderWithProvider7.getAllByText;
    var progressTexts = [getAllByText('40% 완료')[0], getAllByText('20% 완료')[0], getAllByText('60% 완료')[0]];
    expect(progressTexts.length).toBe(3);
  });
  test('핸들러 함수가 올바른 챌린지 ID를 전달받는지 확인', function () {
    var _renderWithProvider8 = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getAllByText = _renderWithProvider8.getAllByText;
    var joinButtons = getAllByText('참여하기');
    _reactNative.fireEvent.press(joinButtons[0]);
    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 1);
    _reactNative.fireEvent.press(joinButtons[1]);
    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 2);
    _reactNative.fireEvent.press(joinButtons[2]);
    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 3);
  });
  test('컴포넌트 렌더링 시 헤더 텍스트가 표시되는지 확인', function () {
    var _renderWithProvider9 = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _renderWithProvider9.getByText;
    expect(getByText('현재 진행 중인 챌린지')).toBeTruthy();
  });
  test('모든 챌린지 카드의 정보가 한 번에 표시되는지 확인', function () {
    var _renderWithProvider10 = renderWithProvider((0, _jsxRuntime.jsx)(_ChallengeScreen.default, {})),
      getByText = _renderWithProvider10.getByText;
    expect(getByText('7일간의 감사 일기')).toBeTruthy();
    expect(getByText('매일 감사한 일 3가지를 기록해보세요.')).toBeTruthy();
    expect(getByText('40% 완료')).toBeTruthy();
    expect(getByText('참여자: 128명')).toBeTruthy();
    expect(getByText('기간: 7일')).toBeTruthy();
    expect(getByText('30일 긍정 에너지 나누기')).toBeTruthy();
    expect(getByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.')).toBeTruthy();
    expect(getByText('20% 완료')).toBeTruthy();
    expect(getByText('참여자: 56명')).toBeTruthy();
    expect(getByText('기간: 30일')).toBeTruthy();
    expect(getByText('21일 명상 습관 만들기')).toBeTruthy();
    expect(getByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.')).toBeTruthy();
    expect(getByText('60% 완료')).toBeTruthy();
    expect(getByText('참여자: 89명')).toBeTruthy();
    expect(getByText('기간: 21일')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,