{"version":3,"names":["_client","_interopRequireDefault","require","cov_45kdwdfee","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","comfortWallService","createPost","_createPost","_asyncToGenerator2","default","data","apiClient","post","_x","apply","arguments","getPosts","_getPosts","params","get","_x2","getBestPosts","_getBestPosts","_x3","sendMessage","_sendMessage","postId","_x4","_x5","_default","exports"],"sources":["comfortWallService.ts"],"sourcesContent":["// src/services/api/comfortWallService.ts\r\n\r\nimport apiClient from './client';\r\n\r\nexport interface ComfortWallPostData {\r\n  title: string;\r\n  content: string;\r\n  is_anonymous?: boolean;\r\n  tag_ids?: number[];\r\n}\r\n\r\nexport interface ComfortMessageData {\r\n  message: string;\r\n  is_anonymous?: boolean;\r\n}\r\n\r\nconst comfortWallService = {\r\n  createPost: async (data: ComfortWallPostData) => {\r\n    return await apiClient.post('/comfort-wall', data);\r\n  },\r\n  \r\n  getPosts: async (params?: { \r\n    page?: number; \r\n    limit?: number; \r\n    sort_by?: 'latest' | 'popular';\r\n    tag?: string;\r\n  }) => {\r\n    return await apiClient.get('/comfort-wall', { params });\r\n  },\r\n  \r\n  getBestPosts: async (params?: { period?: 'daily' | 'weekly' | 'monthly' }) => {\r\n    return await apiClient.get('/comfort-wall/best', { params });\r\n  },\r\n  \r\n  sendMessage: async (postId: number, data: ComfortMessageData) => {\r\n    return await apiClient.post(`/comfort-wall/${postId}/message`, data);\r\n  }\r\n};\r\n\r\nexport default comfortWallService;"],"mappings":"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","ignoreList":[]}