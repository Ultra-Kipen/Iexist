daf7e3f8412ac16c477be0b44f311199
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _client = _interopRequireDefault(require("./client"));
function cov_45kdwdfee() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\services\\api\\comfortWallService.ts";
  var hash = "1ceb171c351934c76c666409ea2be902e47ab062";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\services\\api\\comfortWallService.ts",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "1": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 55
        }
      },
      "2": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 60
        }
      },
      "3": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 65
        }
      },
      "4": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 73
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 14
          },
          end: {
            line: 18,
            column: 15
          }
        },
        loc: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 13
          }
        },
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 17
          }
        },
        loc: {
          start: {
            line: 31,
            column: 80
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 16
          }
        },
        loc: {
          start: {
            line: 35,
            column: 67
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 35
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1ceb171c351934c76c666409ea2be902e47ab062"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_45kdwdfee = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_45kdwdfee();
var comfortWallService = (cov_45kdwdfee().s[0]++, {
  createPost: function () {
    var _createPost = (0, _asyncToGenerator2.default)(function* (data) {
      cov_45kdwdfee().f[0]++;
      cov_45kdwdfee().s[1]++;
      return yield _client.default.post('/comfort-wall', data);
    });
    function createPost(_x) {
      return _createPost.apply(this, arguments);
    }
    return createPost;
  }(),
  getPosts: function () {
    var _getPosts = (0, _asyncToGenerator2.default)(function* (params) {
      cov_45kdwdfee().f[1]++;
      cov_45kdwdfee().s[2]++;
      return yield _client.default.get('/comfort-wall', {
        params: params
      });
    });
    function getPosts(_x2) {
      return _getPosts.apply(this, arguments);
    }
    return getPosts;
  }(),
  getBestPosts: function () {
    var _getBestPosts = (0, _asyncToGenerator2.default)(function* (params) {
      cov_45kdwdfee().f[2]++;
      cov_45kdwdfee().s[3]++;
      return yield _client.default.get('/comfort-wall/best', {
        params: params
      });
    });
    function getBestPosts(_x3) {
      return _getBestPosts.apply(this, arguments);
    }
    return getBestPosts;
  }(),
  sendMessage: function () {
    var _sendMessage = (0, _asyncToGenerator2.default)(function* (postId, data) {
      cov_45kdwdfee().f[3]++;
      cov_45kdwdfee().s[4]++;
      return yield _client.default.post(`/comfort-wall/${postId}/message`, data);
    });
    function sendMessage(_x4, _x5) {
      return _sendMessage.apply(this, arguments);
    }
    return sendMessage;
  }()
});
var _default = exports.default = comfortWallService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2xpZW50IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJjb3ZfNDVrZHdkZmVlIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiY29tZm9ydFdhbGxTZXJ2aWNlIiwiY3JlYXRlUG9zdCIsIl9jcmVhdGVQb3N0IiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwiZGVmYXVsdCIsImRhdGEiLCJhcGlDbGllbnQiLCJwb3N0IiwiX3giLCJhcHBseSIsImFyZ3VtZW50cyIsImdldFBvc3RzIiwiX2dldFBvc3RzIiwicGFyYW1zIiwiZ2V0IiwiX3gyIiwiZ2V0QmVzdFBvc3RzIiwiX2dldEJlc3RQb3N0cyIsIl94MyIsInNlbmRNZXNzYWdlIiwiX3NlbmRNZXNzYWdlIiwicG9zdElkIiwiX3g0IiwiX3g1IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiY29tZm9ydFdhbGxTZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zZXJ2aWNlcy9hcGkvY29tZm9ydFdhbGxTZXJ2aWNlLnRzXHJcblxyXG5pbXBvcnQgYXBpQ2xpZW50IGZyb20gJy4vY2xpZW50JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29tZm9ydFdhbGxQb3N0RGF0YSB7XHJcbiAgdGl0bGU6IHN0cmluZztcclxuICBjb250ZW50OiBzdHJpbmc7XHJcbiAgaXNfYW5vbnltb3VzPzogYm9vbGVhbjtcclxuICB0YWdfaWRzPzogbnVtYmVyW107XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29tZm9ydE1lc3NhZ2VEYXRhIHtcclxuICBtZXNzYWdlOiBzdHJpbmc7XHJcbiAgaXNfYW5vbnltb3VzPzogYm9vbGVhbjtcclxufVxyXG5cclxuY29uc3QgY29tZm9ydFdhbGxTZXJ2aWNlID0ge1xyXG4gIGNyZWF0ZVBvc3Q6IGFzeW5jIChkYXRhOiBDb21mb3J0V2FsbFBvc3REYXRhKSA9PiB7XHJcbiAgICByZXR1cm4gYXdhaXQgYXBpQ2xpZW50LnBvc3QoJy9jb21mb3J0LXdhbGwnLCBkYXRhKTtcclxuICB9LFxyXG4gIFxyXG4gIGdldFBvc3RzOiBhc3luYyAocGFyYW1zPzogeyBcclxuICAgIHBhZ2U/OiBudW1iZXI7IFxyXG4gICAgbGltaXQ/OiBudW1iZXI7IFxyXG4gICAgc29ydF9ieT86ICdsYXRlc3QnIHwgJ3BvcHVsYXInO1xyXG4gICAgdGFnPzogc3RyaW5nO1xyXG4gIH0pID0+IHtcclxuICAgIHJldHVybiBhd2FpdCBhcGlDbGllbnQuZ2V0KCcvY29tZm9ydC13YWxsJywgeyBwYXJhbXMgfSk7XHJcbiAgfSxcclxuICBcclxuICBnZXRCZXN0UG9zdHM6IGFzeW5jIChwYXJhbXM/OiB7IHBlcmlvZD86ICdkYWlseScgfCAnd2Vla2x5JyB8ICdtb250aGx5JyB9KSA9PiB7XHJcbiAgICByZXR1cm4gYXdhaXQgYXBpQ2xpZW50LmdldCgnL2NvbWZvcnQtd2FsbC9iZXN0JywgeyBwYXJhbXMgfSk7XHJcbiAgfSxcclxuICBcclxuICBzZW5kTWVzc2FnZTogYXN5bmMgKHBvc3RJZDogbnVtYmVyLCBkYXRhOiBDb21mb3J0TWVzc2FnZURhdGEpID0+IHtcclxuICAgIHJldHVybiBhd2FpdCBhcGlDbGllbnQucG9zdChgL2NvbWZvcnQtd2FsbC8ke3Bvc3RJZH0vbWVzc2FnZWAsIGRhdGEpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbWZvcnRXYWxsU2VydmljZTsiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLE9BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUFpQyxTQUFBQyxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWxCLElBQUE7RUFBQTtFQUFBLElBQUFtQixRQUFBLEdBQUFsQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWdCLFFBQUEsQ0FBQXBCLElBQUEsS0FBQW9CLFFBQUEsQ0FBQXBCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFtQixRQUFBLENBQUFwQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFnQixjQUFBLEdBQUFELFFBQUEsQ0FBQXBCLElBQUE7RUFBQTtJQUFBRCxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBc0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXRCLGFBQUE7QUFjakMsSUFBTXVCLGtCQUFrQixJQUFBdkIsYUFBQSxHQUFBaUIsQ0FBQSxPQUFHO0VBQ3pCTyxVQUFVO0lBQUEsSUFBQUMsV0FBQSxPQUFBQyxrQkFBQSxDQUFBQyxPQUFBLEVBQUUsV0FBT0MsSUFBeUIsRUFBSztNQUFBNUIsYUFBQSxHQUFBa0IsQ0FBQTtNQUFBbEIsYUFBQSxHQUFBaUIsQ0FBQTtNQUMvQyxhQUFhWSxlQUFTLENBQUNDLElBQUksQ0FBQyxlQUFlLEVBQUVGLElBQUksQ0FBQztJQUNwRCxDQUFDO0lBQUEsU0FGREosVUFBVUEsQ0FBQU8sRUFBQTtNQUFBLE9BQUFOLFdBQUEsQ0FBQU8sS0FBQSxPQUFBQyxTQUFBO0lBQUE7SUFBQSxPQUFWVCxVQUFVO0VBQUEsR0FFVDtFQUVEVSxRQUFRO0lBQUEsSUFBQUMsU0FBQSxPQUFBVCxrQkFBQSxDQUFBQyxPQUFBLEVBQUUsV0FBT1MsTUFLaEIsRUFBSztNQUFBcEMsYUFBQSxHQUFBa0IsQ0FBQTtNQUFBbEIsYUFBQSxHQUFBaUIsQ0FBQTtNQUNKLGFBQWFZLGVBQVMsQ0FBQ1EsR0FBRyxDQUFDLGVBQWUsRUFBRTtRQUFFRCxNQUFNLEVBQU5BO01BQU8sQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFBQSxTQVBERixRQUFRQSxDQUFBSSxHQUFBO01BQUEsT0FBQUgsU0FBQSxDQUFBSCxLQUFBLE9BQUFDLFNBQUE7SUFBQTtJQUFBLE9BQVJDLFFBQVE7RUFBQSxHQU9QO0VBRURLLFlBQVk7SUFBQSxJQUFBQyxhQUFBLE9BQUFkLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPUyxNQUFvRCxFQUFLO01BQUFwQyxhQUFBLEdBQUFrQixDQUFBO01BQUFsQixhQUFBLEdBQUFpQixDQUFBO01BQzVFLGFBQWFZLGVBQVMsQ0FBQ1EsR0FBRyxDQUFDLG9CQUFvQixFQUFFO1FBQUVELE1BQU0sRUFBTkE7TUFBTyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUFBLFNBRkRHLFlBQVlBLENBQUFFLEdBQUE7TUFBQSxPQUFBRCxhQUFBLENBQUFSLEtBQUEsT0FBQUMsU0FBQTtJQUFBO0lBQUEsT0FBWk0sWUFBWTtFQUFBLEdBRVg7RUFFREcsV0FBVztJQUFBLElBQUFDLFlBQUEsT0FBQWpCLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPaUIsTUFBYyxFQUFFaEIsSUFBd0IsRUFBSztNQUFBNUIsYUFBQSxHQUFBa0IsQ0FBQTtNQUFBbEIsYUFBQSxHQUFBaUIsQ0FBQTtNQUMvRCxhQUFhWSxlQUFTLENBQUNDLElBQUksQ0FBQyxpQkFBaUJjLE1BQU0sVUFBVSxFQUFFaEIsSUFBSSxDQUFDO0lBQ3RFLENBQUM7SUFBQSxTQUZEYyxXQUFXQSxDQUFBRyxHQUFBLEVBQUFDLEdBQUE7TUFBQSxPQUFBSCxZQUFBLENBQUFYLEtBQUEsT0FBQUMsU0FBQTtJQUFBO0lBQUEsT0FBWFMsV0FBVztFQUFBO0FBR2IsQ0FBQztBQUFDLElBQUFLLFFBQUEsR0FBQUMsT0FBQSxDQUFBckIsT0FBQSxHQUVhSixrQkFBa0IiLCJpZ25vcmVMaXN0IjpbXX0=