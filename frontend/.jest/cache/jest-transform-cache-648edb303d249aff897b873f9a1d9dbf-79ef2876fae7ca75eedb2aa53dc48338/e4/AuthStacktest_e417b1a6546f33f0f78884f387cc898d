6b2d03bc78ea4feb673f002ddf723ccc
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _fs = _interopRequireDefault(require("fs"));
var _path = _interopRequireDefault(require("path"));
describe('AuthStack 소스 코드 검증', function () {
  var authStackSource;
  beforeAll(function () {
    var authStackPath = _path.default.resolve(__dirname, '../../src/navigation/AuthStack.tsx');
    authStackSource = _fs.default.readFileSync(authStackPath, 'utf8');
  });
  it('AuthStack이 필요한 컴포넌트를 import해야 함', function () {
    expect(authStackSource).toContain('import React from');
    expect(authStackSource).toContain('import { createNativeStackNavigator }');
    expect(authStackSource).toContain('import LoginScreen from');
    expect(authStackSource).toContain('import RegisterScreen from');
    expect(authStackSource).toContain('import ApiTestScreen from');
  });
  it('AuthStack이 네비게이션 타입을 정의해야 함', function () {
    expect(authStackSource).toContain('type AuthStackParamList');
    expect(authStackSource).toContain('Login: undefined');
    expect(authStackSource).toContain('Register: undefined');
    expect(authStackSource).toContain('ApiTest: undefined');
  });
  it('AuthStack이 Navigator를 생성해야 함', function () {
    expect(authStackSource).toContain('const Stack = createNativeStackNavigator');
  });
  it('AuthStack이 올바른 화면을 포함해야 함', function () {
    expect(authStackSource).toContain('<Stack.Navigator');
    expect(authStackSource).toContain('screenOptions={{');
    expect(authStackSource).toContain('headerShown: false');
    expect(authStackSource).toContain('<Stack.Screen name="Login" component={LoginScreen}');
    expect(authStackSource).toContain('<Stack.Screen name="Register" component={RegisterScreen}');
    expect(authStackSource).toContain('<Stack.Screen name="ApiTest" component={ApiTestScreen}');
  });
  it('AuthStack이 올바르게 export되어야 함', function () {
    expect(authStackSource).toContain('export default AuthStack');
  });
  it('Navigator에 헤더 숨김 옵션이 있어야 함', function () {
    expect(authStackSource).toContain('headerShown: false');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZnMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9wYXRoIiwiZGVzY3JpYmUiLCJhdXRoU3RhY2tTb3VyY2UiLCJiZWZvcmVBbGwiLCJhdXRoU3RhY2tQYXRoIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJmcyIsInJlYWRGaWxlU3luYyIsIml0IiwiZXhwZWN0IiwidG9Db250YWluIl0sInNvdXJjZXMiOlsiQXV0aFN0YWNrLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIF9fdGVzdHNfXy9uYXZpZ2F0aW9uL0F1dGhTdGFjay50ZXN0LnRzeFxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuXHJcbmRlc2NyaWJlKCdBdXRoU3RhY2sg7IaM7IqkIOy9lOuTnCDqsoDspp0nLCAoKSA9PiB7XHJcbiAgbGV0IGF1dGhTdGFja1NvdXJjZTtcclxuICBcclxuICBiZWZvcmVBbGwoKCkgPT4ge1xyXG4gICAgLy8gQXV0aFN0YWNrLnRzeCDtjIzsnbwg7J296riwXHJcbiAgICBjb25zdCBhdXRoU3RhY2tQYXRoID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uLy4uL3NyYy9uYXZpZ2F0aW9uL0F1dGhTdGFjay50c3gnKTtcclxuICAgIGF1dGhTdGFja1NvdXJjZSA9IGZzLnJlYWRGaWxlU3luYyhhdXRoU3RhY2tQYXRoLCAndXRmOCcpO1xyXG4gIH0pO1xyXG4gIFxyXG4gIGl0KCdBdXRoU3RhY2vsnbQg7ZWE7JqU7ZWcIOy7tO2PrOuEjO2KuOulvCBpbXBvcnTtlbTslbwg7ZWoJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGF1dGhTdGFja1NvdXJjZSkudG9Db250YWluKCdpbXBvcnQgUmVhY3QgZnJvbScpO1xyXG4gICAgZXhwZWN0KGF1dGhTdGFja1NvdXJjZSkudG9Db250YWluKCdpbXBvcnQgeyBjcmVhdGVOYXRpdmVTdGFja05hdmlnYXRvciB9Jyk7XHJcbiAgICBleHBlY3QoYXV0aFN0YWNrU291cmNlKS50b0NvbnRhaW4oJ2ltcG9ydCBMb2dpblNjcmVlbiBmcm9tJyk7XHJcbiAgICBleHBlY3QoYXV0aFN0YWNrU291cmNlKS50b0NvbnRhaW4oJ2ltcG9ydCBSZWdpc3RlclNjcmVlbiBmcm9tJyk7XHJcbiAgICBleHBlY3QoYXV0aFN0YWNrU291cmNlKS50b0NvbnRhaW4oJ2ltcG9ydCBBcGlUZXN0U2NyZWVuIGZyb20nKTsgLy8g7YWM7Iqk7Yq47JqpIO2ZlOuptCDtmZXsnbhcclxuICB9KTtcclxuICBcclxuICBpdCgnQXV0aFN0YWNr7J20IOuEpOu5hOqyjOydtOyFmCDtg4DsnoXsnYQg7KCV7J2Y7ZW07JW8IO2VqCcsICgpID0+IHtcclxuICAgIGV4cGVjdChhdXRoU3RhY2tTb3VyY2UpLnRvQ29udGFpbigndHlwZSBBdXRoU3RhY2tQYXJhbUxpc3QnKTtcclxuICAgIGV4cGVjdChhdXRoU3RhY2tTb3VyY2UpLnRvQ29udGFpbignTG9naW46IHVuZGVmaW5lZCcpO1xyXG4gICAgZXhwZWN0KGF1dGhTdGFja1NvdXJjZSkudG9Db250YWluKCdSZWdpc3RlcjogdW5kZWZpbmVkJyk7XHJcbiAgICBleHBlY3QoYXV0aFN0YWNrU291cmNlKS50b0NvbnRhaW4oJ0FwaVRlc3Q6IHVuZGVmaW5lZCcpOyAvLyDthYzsiqTtirjsmqkg7ZmU66m0IO2DgOyehSDtmZXsnbhcclxuICB9KTtcclxuICBcclxuICBpdCgnQXV0aFN0YWNr7J20IE5hdmlnYXRvcuulvCDsg53shLHtlbTslbwg7ZWoJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGF1dGhTdGFja1NvdXJjZSkudG9Db250YWluKCdjb25zdCBTdGFjayA9IGNyZWF0ZU5hdGl2ZVN0YWNrTmF2aWdhdG9yJyk7XHJcbiAgfSk7XHJcbiAgXHJcbiAgaXQoJ0F1dGhTdGFja+ydtCDsmKzrsJTrpbgg7ZmU66m07J2EIO2PrO2VqO2VtOyVvCDtlagnLCAoKSA9PiB7XHJcbiAgICAvLyBzY3JlZW5PcHRpb25z6rCAIO2PrO2VqOuQnCBOYXZpZ2F0b3Ig7ZmV7J24XHJcbiAgICBleHBlY3QoYXV0aFN0YWNrU291cmNlKS50b0NvbnRhaW4oJzxTdGFjay5OYXZpZ2F0b3InKTtcclxuICAgIGV4cGVjdChhdXRoU3RhY2tTb3VyY2UpLnRvQ29udGFpbignc2NyZWVuT3B0aW9ucz17eycpO1xyXG4gICAgZXhwZWN0KGF1dGhTdGFja1NvdXJjZSkudG9Db250YWluKCdoZWFkZXJTaG93bjogZmFsc2UnKTtcclxuICAgIFxyXG4gICAgLy8g7ZmU66m0IOq1rOyEsSDtmZXsnbhcclxuICAgIGV4cGVjdChhdXRoU3RhY2tTb3VyY2UpLnRvQ29udGFpbignPFN0YWNrLlNjcmVlbiBuYW1lPVwiTG9naW5cIiBjb21wb25lbnQ9e0xvZ2luU2NyZWVufScpO1xyXG4gICAgZXhwZWN0KGF1dGhTdGFja1NvdXJjZSkudG9Db250YWluKCc8U3RhY2suU2NyZWVuIG5hbWU9XCJSZWdpc3RlclwiIGNvbXBvbmVudD17UmVnaXN0ZXJTY3JlZW59Jyk7XHJcbiAgICBleHBlY3QoYXV0aFN0YWNrU291cmNlKS50b0NvbnRhaW4oJzxTdGFjay5TY3JlZW4gbmFtZT1cIkFwaVRlc3RcIiBjb21wb25lbnQ9e0FwaVRlc3RTY3JlZW59Jyk7XHJcbiAgfSk7XHJcbiAgXHJcbiAgaXQoJ0F1dGhTdGFja+ydtCDsmKzrsJTrpbTqsowgZXhwb3J065CY7Ja07JW8IO2VqCcsICgpID0+IHtcclxuICAgIGV4cGVjdChhdXRoU3RhY2tTb3VyY2UpLnRvQ29udGFpbignZXhwb3J0IGRlZmF1bHQgQXV0aFN0YWNrJyk7XHJcbiAgfSk7XHJcbiAgXHJcbiAgaXQoJ05hdmlnYXRvcuyXkCDtl6TrjZQg7Iio6rmAIOyYteyFmOydtCDsnojslrTslbwg7ZWoJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGF1dGhTdGFja1NvdXJjZSkudG9Db250YWluKCdoZWFkZXJTaG93bjogZmFsc2UnKTtcclxuICB9KTtcclxufSk7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