{"version":3,"names":["_getJestObj","mock","React","require","Platform","OS","select","jest","fn","StyleSheet","create","styles","flatten","compose","style1","style2","View","forwardRef","_ref","ref","children","style","testID","props","_objectWithoutProperties2","default","_excluded","createElement","Object","assign","Text","_ref2","_excluded2","Dimensions","get","width","height","virtual","useNotification","_interopRequireDefault","_react","_reactNative","_NotificationBadge","_NotificationContext","_jsxRuntime","_require","describe","beforeEach","mockReturnValue","unreadCount","it","_render","render","jsx","showZero","queryByText","expect","toBeNull","_render2","getByText","toBeTruthy","_render3","_render4","maxCount"],"sources":["NotificationBadge.test.tsx"],"sourcesContent":["// __TESTS__/components/NotificationBadge.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport NotificationBadge from '../../src/components/NotificationBadge';\r\nimport { useNotification } from '../../src/contexts/NotificationContext';\r\n\r\n// react-native 모킹\r\njest.mock('react-native', () => {\r\n  const React = require('react');\r\n  \r\n  return {\r\n    Platform: {\r\n      OS: 'ios',\r\n      select: jest.fn(),\r\n    },\r\n    StyleSheet: {\r\n      create: (styles: any) => styles,\r\n      flatten: (styles: any) => styles,\r\n      compose: (style1: any, style2: any) => [style1, style2],\r\n    },\r\n    View: React.forwardRef(({ children, style, testID, ...props }: any, ref: any) => \r\n      React.createElement('View', { 'data-testid': testID, ...props, ref }, children)\r\n    ),\r\n    Text: React.forwardRef(({ children, style, testID, ...props }: any, ref: any) => \r\n      React.createElement('Text', { 'data-testid': testID, ...props, ref }, children)\r\n    ),\r\n    Dimensions: {\r\n      get: () => ({ width: 375, height: 667 }),\r\n    },\r\n  };\r\n}, { virtual: true });\r\n// NotificationContext 모의(Mock)\r\njest.mock('../../src/contexts/NotificationContext', () => ({\r\n  useNotification: jest.fn()\r\n}));\r\n\r\ndescribe('NotificationBadge 컴포넌트', () => {\r\n  beforeEach(() => {\r\n    // 기본 모의 설정\r\n    (useNotification as jest.Mock).mockReturnValue({\r\n      unreadCount: 0\r\n    });\r\n  });\r\n\r\n  it('unreadCount가 0이고 showZero가 false이면 배지가 표시되지 않아야 합니다', () => {\r\n    (useNotification as jest.Mock).mockReturnValue({\r\n      unreadCount: 0\r\n    });\r\n    \r\n    const { queryByText } = render(\r\n      <NotificationBadge showZero={false} />\r\n    );\r\n    \r\n    expect(queryByText('0')).toBeNull();\r\n  });\r\n\r\n  it('unreadCount가 0이지만 showZero가 true이면 배지가 표시되어야 합니다', () => {\r\n    (useNotification as jest.Mock).mockReturnValue({\r\n      unreadCount: 0\r\n    });\r\n    \r\n    const { getByText } = render(\r\n      <NotificationBadge showZero={true} />\r\n    );\r\n    \r\n    expect(getByText('0')).toBeTruthy();\r\n  });\r\n\r\n  it('unreadCount가 있으면 배지에 카운트가 표시되어야 합니다', () => {\r\n    (useNotification as jest.Mock).mockReturnValue({\r\n      unreadCount: 5\r\n    });\r\n    \r\n    const { getByText } = render(\r\n      <NotificationBadge />\r\n    );\r\n    \r\n    expect(getByText('5')).toBeTruthy();\r\n  });\r\n\r\n  it('maxCount보다 큰 unreadCount는 maxCount+로 표시되어야 합니다', () => {\r\n    (useNotification as jest.Mock).mockReturnValue({\r\n      unreadCount: 120\r\n    });\r\n    \r\n    const { getByText } = render(\r\n      <NotificationBadge maxCount={99} />\r\n    );\r\n    \r\n    expect(getByText('99+')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}