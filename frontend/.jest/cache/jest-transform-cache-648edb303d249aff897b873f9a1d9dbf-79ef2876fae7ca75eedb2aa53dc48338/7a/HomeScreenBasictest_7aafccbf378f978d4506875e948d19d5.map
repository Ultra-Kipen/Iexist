{"version":3,"names":["_getJestObj","mock","Button","Text","TextInput","Card","Content","Actions","Title","Dialog","Portal","IconButton","Surface","FAB","Divider","Chip","Avatar","Icon","ActivityIndicator","useTheme","colors","primary","surface","useAuth","jest","fn","user","id","username","nickname","isAuthenticated","useEmotion","emotions","emotion_id","name","icon","color","selectedEmotions","logEmotion","Object","defineProperty","exports","value","_require","require","describe","it","HomeScreen","default","expect","toBeDefined"],"sources":["HomeScreenBasic.test.tsx"],"sourcesContent":["// HomeScreenBasic.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\n\r\n// 자동 모킹 활성화 (최소한의 모킹)\r\njest.mock('react-native-paper', () => {\r\n  return {\r\n    Button: 'Button',\r\n    Text: 'Text',\r\n    TextInput: 'TextInput',\r\n    Card: {\r\n      Content: 'Card.Content',\r\n      Actions: 'Card.Actions',\r\n      Title: 'Card.Title'\r\n    },\r\n    Dialog: {\r\n      Title: 'Dialog.Title',\r\n      Content: 'Dialog.Content',\r\n      Actions: 'Dialog.Actions'\r\n    },\r\n    Portal: 'Portal',\r\n    IconButton: 'IconButton',\r\n    Surface: 'Surface',\r\n    FAB: 'FAB',\r\n    Divider: 'Divider',\r\n    Chip: 'Chip',\r\n    Avatar: {\r\n      Icon: 'Avatar.Icon'\r\n    },\r\n    ActivityIndicator: 'ActivityIndicator',\r\n    useTheme: () => ({ colors: { primary: '#6200ee', surface: '#ffffff' } })\r\n  };\r\n});\r\n\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'Icon');\r\n\r\njest.mock('../../src/contexts/AuthContext', () => ({\r\n  useAuth: jest.fn(() => ({\r\n    user: { id: 1, username: 'testuser', nickname: '테스트유저' },\r\n    isAuthenticated: true\r\n  }))\r\n}));\r\n\r\njest.mock('../../src/contexts/EmotionContext', () => ({\r\n  useEmotion: jest.fn(() => ({\r\n    emotions: [{ emotion_id: 1, name: '행복', icon: 'icon-happy', color: '#FFD700' }],\r\n    selectedEmotions: [],\r\n    logEmotion: jest.fn()\r\n  }))\r\n}));\r\n\r\n// 실제 테스트 코드\r\ndescribe('HomeScreen Basic', () => {\r\n  it('can be imported without crashing', () => {\r\n    // 아직 렌더링은 하지 않고 단순히 임포트만 테스트\r\n    const HomeScreen = require('../../src/screens/HomeScreen').default;\r\n    expect(HomeScreen).toBeDefined();\r\n  });\r\n});"],"mappings":"AAKAA,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE,YAAM;EACpC,OAAO;IACLC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE,WAAW;IACtBC,IAAI,EAAE;MACJC,OAAO,EAAE,cAAc;MACvBC,OAAO,EAAE,cAAc;MACvBC,KAAK,EAAE;IACT,CAAC;IACDC,MAAM,EAAE;MACND,KAAK,EAAE,cAAc;MACrBF,OAAO,EAAE,gBAAgB;MACzBC,OAAO,EAAE;IACX,CAAC;IACDG,MAAM,EAAE,QAAQ;IAChBC,UAAU,EAAE,YAAY;IACxBC,OAAO,EAAE,SAAS;IAClBC,GAAG,EAAE,KAAK;IACVC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE;MACNC,IAAI,EAAE;IACR,CAAC;IACDC,iBAAiB,EAAE,mBAAmB;IACtCC,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAS;QAAEC,MAAM,EAAE;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAU;MAAE,CAAC;IAAA;EACzE,CAAC;AACH,CAAC,CAAC;AAEFtB,WAAA,GAAKC,IAAI,CAAC,kDAAkD,EAAE;EAAA,OAAM,MAAM;AAAA,EAAC;AAE3ED,WAAA,GAAKC,IAAI,mCAAmC;EAAA,OAAO;IACjDsB,OAAO,EAAEC,IAAI,CAACC,EAAE,CAAC;MAAA,OAAO;QACtBC,IAAI,EAAE;UAAEC,EAAE,EAAE,CAAC;UAAEC,QAAQ,EAAE,UAAU;UAAEC,QAAQ,EAAE;QAAQ,CAAC;QACxDC,eAAe,EAAE;MACnB,CAAC;IAAA,CAAC;EACJ,CAAC;AAAA,CAAC,CAAC;AAEH9B,WAAA,GAAKC,IAAI,sCAAsC;EAAA,OAAO;IACpD8B,UAAU,EAAEP,IAAI,CAACC,EAAE,CAAC;MAAA,OAAO;QACzBO,QAAQ,EAAE,CAAC;UAAEC,UAAU,EAAE,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEC,IAAI,EAAE,YAAY;UAAEC,KAAK,EAAE;QAAU,CAAC,CAAC;QAC/EC,gBAAgB,EAAE,EAAE;QACpBC,UAAU,EAAEd,IAAI,CAACC,EAAE,CAAC;MACtB,CAAC;IAAA,CAAC;EACJ,CAAC;AAAA,CAAC,CAAC;AAACc,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAA,SAAA1C,YAAA;EAAA,IAAA2C,QAAA,GAAAC,OAAA;IAAApB,IAAA,GAAAmB,QAAA,CAAAnB,IAAA;EAAAxB,WAAA,YAAAA,YAAA;IAAA,OAAAwB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGJqB,QAAQ,CAAC,kBAAkB,EAAE,YAAM;EACjCC,EAAE,CAAC,kCAAkC,EAAE,YAAM;IAE3C,IAAMC,UAAU,GAAGH,OAAO,+BAA+B,CAAC,CAACI,OAAO;IAClEC,MAAM,CAACF,UAAU,CAAC,CAACG,WAAW,CAAC,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}