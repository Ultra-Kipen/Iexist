79d4724b9915cb8470063365c6b3c517
Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  API_ENDPOINTS: true,
  APP_CONSTANTS: true
};
exports.APP_CONSTANTS = exports.API_ENDPOINTS = void 0;
var _routes = require("./routes");
Object.keys(_routes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _routes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _routes[key];
    }
  });
});
var _theme = require("./theme");
Object.keys(_theme).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _theme[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _theme[key];
    }
  });
});
var API_ENDPOINTS = exports.API_ENDPOINTS = {
  AUTH: {
    LOGIN: '/users/login',
    REGISTER: '/users/register',
    FORGOT_PASSWORD: '/users/forgot-password',
    RESET_PASSWORD: '/users/reset-password'
  },
  USERS: {
    PROFILE: '/users/profile',
    UPDATE_PROFILE: '/users/profile',
    CHANGE_PASSWORD: '/users/password'
  },
  POSTS: {
    GET_ALL: '/posts',
    GET_MY_POSTS: '/posts/me',
    CREATE: '/posts',
    DETAIL: function DETAIL(id) {
      return `/posts/${id}`;
    },
    COMMENTS: function COMMENTS(id) {
      return `/posts/${id}/comments`;
    },
    LIKE: function LIKE(id) {
      return `/posts/${id}/like`;
    }
  },
  MY_DAY: {
    POSTS: '/my-day/posts',
    MY_POSTS: '/my-day/posts/me',
    CREATE: '/my-day/posts',
    DETAIL: function DETAIL(id) {
      return `/my-day/${id}`;
    },
    COMMENTS: function COMMENTS(id) {
      return `/my-day/${id}/comments`;
    },
    LIKE: function LIKE(id) {
      return `/my-day/${id}/like`;
    }
  },
  SOMEONE_DAY: {
    POSTS: '/someone-day',
    POPULAR: '/someone-day/popular',
    DETAIL: function DETAIL(id) {
      return `/someone-day/${id}`;
    },
    ENCOURAGE: function ENCOURAGE(id) {
      return `/someone-day/${id}/encourage`;
    },
    REPORT: function REPORT(id) {
      return `/someone-day/${id}/report`;
    }
  },
  EMOTIONS: {
    ALL: '/emotions',
    DAILY_CHECK: '/emotions/daily-check',
    STATS: '/emotions/stats',
    TRENDS: '/emotions/trends',
    CREATE: '/emotions'
  },
  CHALLENGES: {
    ALL: '/challenges',
    CREATE: '/challenges',
    DETAIL: function DETAIL(id) {
      return `/challenges/${id}`;
    },
    PARTICIPATE: function PARTICIPATE(id) {
      return `/challenges/${id}/participate`;
    },
    LEAVE: function LEAVE(id) {
      return `/challenges/${id}/participate`;
    },
    PROGRESS: function PROGRESS(id) {
      return `/challenges/${id}/progress`;
    }
  },
  COMFORT_WALL: {
    POSTS: '/comfort-wall',
    BEST: '/comfort-wall/best',
    MESSAGE: function MESSAGE(id) {
      return `/comfort-wall/${id}/message`;
    }
  },
  NOTIFICATIONS: {
    ALL: '/notifications',
    READ: function READ(id) {
      return `/notifications/${id}/read`;
    },
    MARK_ALL_READ: '/notifications/mark-all-read'
  },
  TAGS: {
    ALL: '/tags',
    POPULAR: '/tags/popular',
    SEARCH: '/tags/search'
  },
  STATS: {
    USER: '/stats',
    TRENDS: '/stats/trends',
    WEEKLY: '/stats/weekly',
    MONTHLY: '/stats/monthly'
  }
};
var APP_CONSTANTS = exports.APP_CONSTANTS = {
  APP_NAME: 'IExist',
  VERSION: '1.0.0',
  STORAGE_KEYS: {
    AUTH_TOKEN: '@IExist:authToken',
    USER: '@IExist:user',
    THEME: '@IExist:theme'
  },
  DEFAULT_PAGE_SIZE: 10,
  MAX_CONTENT_LENGTH: {
    POST: 1000,
    COMMENT: 300,
    MY_DAY_POST: 1000,
    SOMEONE_DAY_POST: 2000,
    CHALLENGE_TITLE: 100,
    CHALLENGE_DESCRIPTION: 500,
    EMOTION_NOTE: 200
  },
  TIMEOUTS: {
    API_REQUEST: 30000,
    TOAST_DURATION: 3000
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,