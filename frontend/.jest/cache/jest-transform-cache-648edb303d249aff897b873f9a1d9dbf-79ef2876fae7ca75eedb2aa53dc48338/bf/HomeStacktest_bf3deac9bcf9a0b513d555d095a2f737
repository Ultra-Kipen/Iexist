56eb95edcf8931e177146df1dd3dc31b
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _fs = _interopRequireDefault(require("fs"));
var _path = _interopRequireDefault(require("path"));
describe('HomeStack 소스 코드 검증', function () {
  var homeStackSource;
  beforeAll(function () {
    var homeStackPath = _path.default.resolve(__dirname, '../../src/navigation/HomeStack.tsx');
    homeStackSource = _fs.default.readFileSync(homeStackPath, 'utf8');
  });
  it('HomeStack이 필요한 컴포넌트를 import해야 함', function () {
    expect(homeStackSource).toContain('import React from');
    expect(homeStackSource).toContain('import { createNativeStackNavigator }');
    expect(homeStackSource).toContain('import HomeScreen from');
    expect(homeStackSource).toContain('import EmotionLogScreen from');
  });
  it('HomeStack이 네비게이션 타입을 정의해야 함', function () {
    expect(homeStackSource).toContain('type HomeStackParamList');
    expect(homeStackSource).toContain('HomeMain: undefined');
    expect(homeStackSource).toContain('EmotionLog: undefined');
  });
  it('HomeStack이 네비게이션 스택을 생성해야 함', function () {
    expect(homeStackSource).toContain('const Stack = createNativeStackNavigator');
  });
  it('HomeStack이 올바른 화면을 포함해야 함', function () {
    expect(homeStackSource).toContain('<Stack.Navigator>');
    expect(homeStackSource).toContain('<Stack.Screen name="HomeMain" component={HomeScreen}');
    expect(homeStackSource).toContain('<Stack.Screen name="EmotionLog" component={EmotionLogScreen}');
  });
  it('HomeStack이 화면 옵션을 설정해야 함', function () {
    expect(homeStackSource).toContain('options={{ title: \'나의 하루\' }}');
    expect(homeStackSource).toContain('options={{ title: \'감정 기록\' }}');
  });
  it('HomeStack이 올바르게 export되어야 함', function () {
    expect(homeStackSource).toContain('export default HomeStack');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZnMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9wYXRoIiwiZGVzY3JpYmUiLCJob21lU3RhY2tTb3VyY2UiLCJiZWZvcmVBbGwiLCJob21lU3RhY2tQYXRoIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJmcyIsInJlYWRGaWxlU3luYyIsIml0IiwiZXhwZWN0IiwidG9Db250YWluIl0sInNvdXJjZXMiOlsiSG9tZVN0YWNrLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIF9fdGVzdHNfXy9uYXZpZ2F0aW9uL0hvbWVTdGFjay50ZXN0LnRzeFxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuXHJcbmRlc2NyaWJlKCdIb21lU3RhY2sg7IaM7IqkIOy9lOuTnCDqsoDspp0nLCAoKSA9PiB7XHJcbiAgbGV0IGhvbWVTdGFja1NvdXJjZTtcclxuICBcclxuICBiZWZvcmVBbGwoKCkgPT4ge1xyXG4gICAgLy8gSG9tZVN0YWNrLnRzeCDtjIzsnbwg7J296riwXHJcbiAgICBjb25zdCBob21lU3RhY2tQYXRoID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uLy4uL3NyYy9uYXZpZ2F0aW9uL0hvbWVTdGFjay50c3gnKTtcclxuICAgIGhvbWVTdGFja1NvdXJjZSA9IGZzLnJlYWRGaWxlU3luYyhob21lU3RhY2tQYXRoLCAndXRmOCcpO1xyXG4gIH0pO1xyXG4gIFxyXG4gIGl0KCdIb21lU3RhY2vsnbQg7ZWE7JqU7ZWcIOy7tO2PrOuEjO2KuOulvCBpbXBvcnTtlbTslbwg7ZWoJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGhvbWVTdGFja1NvdXJjZSkudG9Db250YWluKCdpbXBvcnQgUmVhY3QgZnJvbScpO1xyXG4gICAgZXhwZWN0KGhvbWVTdGFja1NvdXJjZSkudG9Db250YWluKCdpbXBvcnQgeyBjcmVhdGVOYXRpdmVTdGFja05hdmlnYXRvciB9Jyk7XHJcbiAgICBleHBlY3QoaG9tZVN0YWNrU291cmNlKS50b0NvbnRhaW4oJ2ltcG9ydCBIb21lU2NyZWVuIGZyb20nKTtcclxuICAgIGV4cGVjdChob21lU3RhY2tTb3VyY2UpLnRvQ29udGFpbignaW1wb3J0IEVtb3Rpb25Mb2dTY3JlZW4gZnJvbScpO1xyXG4gIH0pO1xyXG4gIFxyXG4gIGl0KCdIb21lU3RhY2vsnbQg64Sk67mE6rKM7J207IWYIO2DgOyeheydhCDsoJXsnZjtlbTslbwg7ZWoJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGhvbWVTdGFja1NvdXJjZSkudG9Db250YWluKCd0eXBlIEhvbWVTdGFja1BhcmFtTGlzdCcpO1xyXG4gICAgZXhwZWN0KGhvbWVTdGFja1NvdXJjZSkudG9Db250YWluKCdIb21lTWFpbjogdW5kZWZpbmVkJyk7XHJcbiAgICBleHBlY3QoaG9tZVN0YWNrU291cmNlKS50b0NvbnRhaW4oJ0Vtb3Rpb25Mb2c6IHVuZGVmaW5lZCcpO1xyXG4gIH0pO1xyXG4gIFxyXG4gIGl0KCdIb21lU3RhY2vsnbQg64Sk67mE6rKM7J207IWYIOyKpO2DneydhCDsg53shLHtlbTslbwg7ZWoJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGhvbWVTdGFja1NvdXJjZSkudG9Db250YWluKCdjb25zdCBTdGFjayA9IGNyZWF0ZU5hdGl2ZVN0YWNrTmF2aWdhdG9yJyk7XHJcbiAgfSk7XHJcbiAgXHJcbiAgaXQoJ0hvbWVTdGFja+ydtCDsmKzrsJTrpbgg7ZmU66m07J2EIO2PrO2VqO2VtOyVvCDtlagnLCAoKSA9PiB7XHJcbiAgICBleHBlY3QoaG9tZVN0YWNrU291cmNlKS50b0NvbnRhaW4oJzxTdGFjay5OYXZpZ2F0b3I+Jyk7XHJcbiAgICBleHBlY3QoaG9tZVN0YWNrU291cmNlKS50b0NvbnRhaW4oJzxTdGFjay5TY3JlZW4gbmFtZT1cIkhvbWVNYWluXCIgY29tcG9uZW50PXtIb21lU2NyZWVufScpO1xyXG4gICAgZXhwZWN0KGhvbWVTdGFja1NvdXJjZSkudG9Db250YWluKCc8U3RhY2suU2NyZWVuIG5hbWU9XCJFbW90aW9uTG9nXCIgY29tcG9uZW50PXtFbW90aW9uTG9nU2NyZWVufScpO1xyXG4gIH0pO1xyXG4gIFxyXG4gIGl0KCdIb21lU3RhY2vsnbQg7ZmU66m0IOyYteyFmOydhCDshKTsoJXtlbTslbwg7ZWoJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGhvbWVTdGFja1NvdXJjZSkudG9Db250YWluKCdvcHRpb25zPXt7IHRpdGxlOiBcXCfrgpjsnZgg7ZWY66OoXFwnIH19Jyk7XHJcbiAgICBleHBlY3QoaG9tZVN0YWNrU291cmNlKS50b0NvbnRhaW4oJ29wdGlvbnM9e3sgdGl0bGU6IFxcJ+qwkOyglSDquLDroZ1cXCcgfX0nKTtcclxuICB9KTtcclxuICBcclxuICBpdCgnSG9tZVN0YWNr7J20IOyYrOuwlOultOqyjCBleHBvcnTrkJjslrTslbwg7ZWoJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGhvbWVTdGFja1NvdXJjZSkudG9Db250YWluKCdleHBvcnQgZGVmYXVsdCBIb21lU3RhY2snKTtcclxuICB9KTtcclxufSk7Il0sIm1hcHBpbmdzIjoiO0FBRUEsSUFBQUEsR0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsS0FBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBRUFFLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxZQUFNO0VBQ25DLElBQUlDLGVBQWU7RUFFbkJDLFNBQVMsQ0FBQyxZQUFNO0lBRWQsSUFBTUMsYUFBYSxHQUFHQyxhQUFJLENBQUNDLE9BQU8sQ0FBQ0MsU0FBUyxFQUFFLG9DQUFvQyxDQUFDO0lBQ25GTCxlQUFlLEdBQUdNLFdBQUUsQ0FBQ0MsWUFBWSxDQUFDTCxhQUFhLEVBQUUsTUFBTSxDQUFDO0VBQzFELENBQUMsQ0FBQztFQUVGTSxFQUFFLENBQUMsaUNBQWlDLEVBQUUsWUFBTTtJQUMxQ0MsTUFBTSxDQUFDVCxlQUFlLENBQUMsQ0FBQ1UsU0FBUyxDQUFDLG1CQUFtQixDQUFDO0lBQ3RERCxNQUFNLENBQUNULGVBQWUsQ0FBQyxDQUFDVSxTQUFTLENBQUMsdUNBQXVDLENBQUM7SUFDMUVELE1BQU0sQ0FBQ1QsZUFBZSxDQUFDLENBQUNVLFNBQVMsQ0FBQyx3QkFBd0IsQ0FBQztJQUMzREQsTUFBTSxDQUFDVCxlQUFlLENBQUMsQ0FBQ1UsU0FBUyxDQUFDLDhCQUE4QixDQUFDO0VBQ25FLENBQUMsQ0FBQztFQUVGRixFQUFFLENBQUMsNkJBQTZCLEVBQUUsWUFBTTtJQUN0Q0MsTUFBTSxDQUFDVCxlQUFlLENBQUMsQ0FBQ1UsU0FBUyxDQUFDLHlCQUF5QixDQUFDO0lBQzVERCxNQUFNLENBQUNULGVBQWUsQ0FBQyxDQUFDVSxTQUFTLENBQUMscUJBQXFCLENBQUM7SUFDeERELE1BQU0sQ0FBQ1QsZUFBZSxDQUFDLENBQUNVLFNBQVMsQ0FBQyx1QkFBdUIsQ0FBQztFQUM1RCxDQUFDLENBQUM7RUFFRkYsRUFBRSxDQUFDLDZCQUE2QixFQUFFLFlBQU07SUFDdENDLE1BQU0sQ0FBQ1QsZUFBZSxDQUFDLENBQUNVLFNBQVMsQ0FBQywwQ0FBMEMsQ0FBQztFQUMvRSxDQUFDLENBQUM7RUFFRkYsRUFBRSxDQUFDLDJCQUEyQixFQUFFLFlBQU07SUFDcENDLE1BQU0sQ0FBQ1QsZUFBZSxDQUFDLENBQUNVLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQztJQUN0REQsTUFBTSxDQUFDVCxlQUFlLENBQUMsQ0FBQ1UsU0FBUyxDQUFDLHNEQUFzRCxDQUFDO0lBQ3pGRCxNQUFNLENBQUNULGVBQWUsQ0FBQyxDQUFDVSxTQUFTLENBQUMsOERBQThELENBQUM7RUFDbkcsQ0FBQyxDQUFDO0VBRUZGLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSxZQUFNO0lBQ25DQyxNQUFNLENBQUNULGVBQWUsQ0FBQyxDQUFDVSxTQUFTLENBQUMsZ0NBQWdDLENBQUM7SUFDbkVELE1BQU0sQ0FBQ1QsZUFBZSxDQUFDLENBQUNVLFNBQVMsQ0FBQyxnQ0FBZ0MsQ0FBQztFQUNyRSxDQUFDLENBQUM7RUFFRkYsRUFBRSxDQUFDLDZCQUE2QixFQUFFLFlBQU07SUFDdENDLE1BQU0sQ0FBQ1QsZUFBZSxDQUFDLENBQUNVLFNBQVMsQ0FBQywwQkFBMEIsQ0FBQztFQUMvRCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=