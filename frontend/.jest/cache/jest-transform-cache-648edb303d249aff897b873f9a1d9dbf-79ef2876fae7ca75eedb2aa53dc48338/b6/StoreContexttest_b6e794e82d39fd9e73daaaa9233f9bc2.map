{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_StoreContext","_reducer","_types","_jsxRuntime","TestComponent","_useStore","useStore","state","dispatch","jsxs","children","jsx","isAuthenticated","onClick","type","ActionType","SET_AUTHENTICATED","payload","describe","test","render","StoreProvider","expect","screen","getByTestId","textContent","toBe","click","StateCheckComponent","_useStore2","String","user","notifications","length","theme","loading","error","initialState"],"sources":["StoreContext.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, screen } from '@testing-library/react-native';\r\nimport { StoreProvider, useStore } from '../../src/store/StoreContext';\r\nimport { initialState } from '../../src/store/reducer';\r\nimport { ActionType } from '../../src/store/types';\r\n\r\n// 테스트용 컴포넌트\r\nconst TestComponent = () => {\r\n  const { state, dispatch } = useStore();\r\n  \r\n  return (\r\n    <div>\r\n      <div data-testid=\"auth-status\">{state.isAuthenticated ? 'authenticated' : 'not-authenticated'}</div>\r\n      <button \r\n        onClick={() => dispatch({ \r\n          type: ActionType.SET_AUTHENTICATED, \r\n          payload: !state.isAuthenticated \r\n        })}\r\n        data-testid=\"toggle-auth\"\r\n      >\r\n        Toggle Auth\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\ndescribe('StoreContext', () => {\r\n  test('StoreProvider는 상태와 디스패치 함수를 제공한다', () => {\r\n    render(\r\n      <StoreProvider>\r\n        <TestComponent />\r\n      </StoreProvider>\r\n    );\r\n    \r\n    // 초기 상태 확인\r\n    expect(screen.getByTestId('auth-status').textContent).toBe('not-authenticated');\r\n    \r\n    // 디스패치 함수가 작동하는지 확인\r\n    screen.getByTestId('toggle-auth').click();\r\n    expect(screen.getByTestId('auth-status').textContent).toBe('authenticated');\r\n  });\r\n  \r\n  test('초기 상태가 올바르게 설정된다', () => {\r\n    // 테스트용 컴포넌트\r\n    const StateCheckComponent = () => {\r\n      const { state } = useStore();\r\n      return (\r\n        <div>\r\n          <div data-testid=\"is-authenticated\">{String(state.isAuthenticated)}</div>\r\n          <div data-testid=\"user\">{state.user === null ? 'null' : 'user'}</div>\r\n          <div data-testid=\"notifications-count\">{state.notifications.length}</div>\r\n          <div data-testid=\"theme\">{state.theme}</div>\r\n          <div data-testid=\"loading\">{String(state.loading)}</div>\r\n          <div data-testid=\"error\">{state.error === null ? 'null' : state.error}</div>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    render(\r\n      <StoreProvider>\r\n        <StateCheckComponent />\r\n      </StoreProvider>\r\n    );\r\n    \r\n    // 초기 상태 확인\r\n    expect(screen.getByTestId('is-authenticated').textContent).toBe(String(initialState.isAuthenticated));\r\n    expect(screen.getByTestId('user').textContent).toBe('null');\r\n    expect(screen.getByTestId('notifications-count').textContent).toBe('0');\r\n    expect(screen.getByTestId('theme').textContent).toBe(initialState.theme);\r\n    expect(screen.getByTestId('loading').textContent).toBe(String(initialState.loading));\r\n    expect(screen.getByTestId('error').textContent).toBe('null');\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}