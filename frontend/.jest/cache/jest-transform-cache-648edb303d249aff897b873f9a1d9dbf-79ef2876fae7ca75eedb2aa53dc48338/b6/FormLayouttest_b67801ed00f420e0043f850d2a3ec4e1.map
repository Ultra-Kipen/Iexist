{"version":3,"names":["_getJestObj","mock","View","Text","StyleSheet","create","styles","ScrollView","KeyboardAvoidingView","TouchableWithoutFeedback","Keyboard","dismiss","jest","fn","Platform","OS","select","obj","ios","useTheme","theme","colors","background","dark","_interopRequireDefault","require","_react","_reactNative","_FormLayout","_jsxRuntime","_require","describe","it","_render","render","jsx","default","children","toJSON","expect","not","toBeNull","_render2","loading","_render3","header","footer","_render4","avoidKeyboard","_render5","style","backgroundColor","contentContainerStyle","padding","_render6","loadingJSON","_render7","contentJSON","JSON","stringify","toEqual"],"sources":["FormLayout.test.tsx"],"sourcesContent":["// tests/layouts/FormLayout.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport FormLayout from '../../src/layouts/FormLayout';\r\n\r\n// 간단한 문자열 모킹 사용\r\njest.mock('react-native', () => ({\r\n  View: 'View',\r\n  Text: 'Text',\r\n  StyleSheet: {\r\n    create: (styles) => styles,\r\n  },\r\n  ScrollView: 'ScrollView',\r\n  KeyboardAvoidingView: 'KeyboardAvoidingView',\r\n  TouchableWithoutFeedback: 'TouchableWithoutFeedback',\r\n  Keyboard: {\r\n    dismiss: jest.fn(),\r\n  },\r\n  Platform: {\r\n    OS: 'ios',\r\n    select: jest.fn((obj) => obj.ios),\r\n  },\r\n}));\r\n\r\n// useTheme 모킹\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#ffffff',\r\n      },\r\n      dark: false,\r\n    },\r\n  }),\r\n}));\r\n\r\n// LoadingIndicator 모킹 - 단순 문자열로 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => 'LoadingIndicator');\r\n\r\ndescribe('FormLayout', () => {\r\n  // 기본적인 렌더링만 테스트\r\n  it('renders without crashing', () => {\r\n    const { toJSON } = render(\r\n      <FormLayout>\r\n        <text>폼 내용</text>\r\n      </FormLayout>\r\n    );\r\n    expect(toJSON()).not.toBeNull();\r\n  });\r\n  \r\n  // 로딩 상태 테스트\r\n  it('shows loading indicator when loading is true', () => {\r\n    const { toJSON } = render(\r\n      <FormLayout loading={true}>\r\n        <text>폼 내용</text>\r\n      </FormLayout>\r\n    );\r\n    expect(toJSON()).not.toBeNull();\r\n  });\r\n  \r\n  // 헤더와 푸터 렌더링 테스트\r\n  it('renders with header and footer', () => {\r\n    const { toJSON } = render(\r\n      <FormLayout\r\n        header={<text>폼 헤더</text>}\r\n        footer={<text>폼 푸터</text>}\r\n      >\r\n        <text>폼 내용</text>\r\n      </FormLayout>\r\n    );\r\n    expect(toJSON()).not.toBeNull();\r\n  });\r\n  \r\n  // 키보드 회피 옵션 테스트\r\n  it('renders with avoidKeyboard=false', () => {\r\n    const { toJSON } = render(\r\n      <FormLayout avoidKeyboard={false}>\r\n        <text>폼 내용</text>\r\n      </FormLayout>\r\n    );\r\n    expect(toJSON()).not.toBeNull();\r\n  });\r\n  \r\n  // 스타일 적용 테스트\r\n  it('applies custom styles', () => {\r\n    const { toJSON } = render(\r\n      <FormLayout \r\n        style={{ backgroundColor: 'red' }}\r\n        contentContainerStyle={{ padding: 20 }}\r\n      >\r\n        <text>폼 내용</text>\r\n      </FormLayout>\r\n    );\r\n    expect(toJSON()).not.toBeNull();\r\n  });\r\n  \r\n  // 추가 테스트: 렌더링 구조가 올바른지 확인\r\n  it('renders with correct structure', () => {\r\n    // FormLayout에 loading={true}일 때 LoadingIndicator가 렌더링되고\r\n    // loading={false}일 때 children이 렌더링되는지 확인\r\n    const { toJSON: loadingJSON } = render(\r\n      <FormLayout loading={true}>\r\n        <text>폼 내용</text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    const { toJSON: contentJSON } = render(\r\n      <FormLayout loading={false}>\r\n        <text>폼 내용</text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    // 렌더링된 JSON 구조가 서로 다른지 확인\r\n    expect(JSON.stringify(loadingJSON())).not.toEqual(JSON.stringify(contentJSON()));\r\n    \r\n    // 모두 올바르게 렌더링됨\r\n    expect(loadingJSON()).not.toBeNull();\r\n    expect(contentJSON()).not.toBeNull();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}