0472645ea22640509ae5bce3cf39598f
_getJestObj().mock("../../src/services/api/postService", function () {
  return {
    getMyPosts: jest.fn(function () {
      return Promise.resolve({
        data: {
          posts: [{
            post_id: 1,
            content: '첫 번째 테스트 게시물입니다.',
            emotion_summary: '행복',
            like_count: 5,
            comment_count: 2,
            created_at: '2025-03-01T12:00:00Z'
          }]
        }
      });
    }),
    deletePost: jest.fn(function () {
      return Promise.resolve({
        data: {
          success: true
        }
      });
    })
  };
});
_getJestObj().mock('react-native-paper', function () {
  return {
    Button: 'Button',
    Chip: 'Chip',
    Portal: 'Portal',
    Card: function Card() {
      return 'Card';
    },
    Dialog: function Dialog() {
      return 'Dialog';
    }
  };
});
_getJestObj().mock('react-native-paper/lib/commonjs/components/Card/CardContent', function () {
  return 'CardContent';
});
_getJestObj().mock('react-native-paper/lib/commonjs/components/Card/CardActions', function () {
  return 'CardActions';
});
_getJestObj().mock('react-native-paper/lib/commonjs/components/Dialog/DialogTitle', function () {
  return 'DialogTitle';
});
_getJestObj().mock('react-native-paper/lib/commonjs/components/Dialog/DialogContent', function () {
  return 'DialogContent';
});
_getJestObj().mock('react-native-paper/lib/commonjs/components/Dialog/DialogActions', function () {
  return 'DialogActions';
});
_getJestObj().mock('react-native-vector-icons/MaterialCommunityIcons', function () {
  return 'Icon';
});
_getJestObj().mock('react-native-safe-area-context', function () {
  return {
    SafeAreaView: 'SafeAreaView'
  };
});
_getJestObj().mock('@react-navigation/native', function () {
  return {
    useNavigation: function useNavigation() {
      return {
        navigate: mockNavigate,
        goBack: jest.fn(),
        addListener: mockAddListener
      };
    }
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _MyPostsScreen = _interopRequireDefault(require("../../src/screens/MyPostsScreen"));
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockNavigate = jest.fn();
var mockAddListener = jest.fn(function () {
  return jest.fn();
});
describe('MyPostsScreen', function () {
  it('imports without crashing', function () {
    expect(_MyPostsScreen.default).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJnZXRNeVBvc3RzIiwiamVzdCIsImZuIiwiUHJvbWlzZSIsInJlc29sdmUiLCJkYXRhIiwicG9zdHMiLCJwb3N0X2lkIiwiY29udGVudCIsImVtb3Rpb25fc3VtbWFyeSIsImxpa2VfY291bnQiLCJjb21tZW50X2NvdW50IiwiY3JlYXRlZF9hdCIsImRlbGV0ZVBvc3QiLCJzdWNjZXNzIiwiQnV0dG9uIiwiQ2hpcCIsIlBvcnRhbCIsIkNhcmQiLCJEaWFsb2ciLCJTYWZlQXJlYVZpZXciLCJ1c2VOYXZpZ2F0aW9uIiwibmF2aWdhdGUiLCJtb2NrTmF2aWdhdGUiLCJnb0JhY2siLCJhZGRMaXN0ZW5lciIsIm1vY2tBZGRMaXN0ZW5lciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX015UG9zdHNTY3JlZW4iLCJfcmVxdWlyZSIsImRlc2NyaWJlIiwiaXQiLCJleHBlY3QiLCJNeVBvc3RzU2NyZWVuIiwidG9CZURlZmluZWQiXSwic291cmNlcyI6WyJNeVBvc3RzU2NyZWVuLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIF9fVEVTVFNfXy9zY3JlZW5zL015UG9zdHNTY3JlZW4udGVzdC50c3hcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgTXlQb3N0c1NjcmVlbiBmcm9tICcuLi8uLi9zcmMvc2NyZWVucy9NeVBvc3RzU2NyZWVuJztcclxuXHJcbi8vIOyEnOu5hOyKpCDrqqjtgrlcclxuamVzdC5tb2NrKCcuLi8uLi9zcmMvc2VydmljZXMvYXBpL3Bvc3RTZXJ2aWNlJywgKCkgPT4gKHtcclxuICBnZXRNeVBvc3RzOiBqZXN0LmZuKCgpID0+IFByb21pc2UucmVzb2x2ZSh7XHJcbiAgICBkYXRhOiB7XHJcbiAgICAgIHBvc3RzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcG9zdF9pZDogMSxcclxuICAgICAgICAgIGNvbnRlbnQ6ICfssqsg67KI7Ke4IO2FjOyKpO2KuCDqsozsi5zrrLzsnoXri4jri6QuJyxcclxuICAgICAgICAgIGVtb3Rpb25fc3VtbWFyeTogJ+2WieuztScsXHJcbiAgICAgICAgICBsaWtlX2NvdW50OiA1LFxyXG4gICAgICAgICAgY29tbWVudF9jb3VudDogMixcclxuICAgICAgICAgIGNyZWF0ZWRfYXQ6ICcyMDI1LTAzLTAxVDEyOjAwOjAwWicsXHJcbiAgICAgICAgfVxyXG4gICAgICBdXHJcbiAgICB9XHJcbiAgfSkpLFxyXG4gIGRlbGV0ZVBvc3Q6IGplc3QuZm4oKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogeyBzdWNjZXNzOiB0cnVlIH0gfSkpXHJcbn0pKTtcclxuXHJcbi8vIOy7tO2PrOuEjO2KuCDrqqjtgrlcclxuLy8g6rCBIOy7tO2PrOuEjO2KuOulvCDqsJzrs4TsoIHsnLzroZwg66qo7YK5XHJcbmplc3QubW9jaygncmVhY3QtbmF0aXZlLXBhcGVyJywgKCkgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICAvLyDquLDrs7gg7Lu07Y+s64SM7Yq4XHJcbiAgICBCdXR0b246ICdCdXR0b24nLFxyXG4gICAgQ2hpcDogJ0NoaXAnLFxyXG4gICAgUG9ydGFsOiAnUG9ydGFsJyxcclxuICAgIFxyXG4gICAgLy8g7KSR7LKpIOq1rOyhsOulvCDqsIDsp4Qg7Lu07Y+s64SM7Yq466W8IOqwneyytOqwgCDslYTri4wg7ZWo7IiY66GcIOuqqO2CuVxyXG4gICAgQ2FyZDogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiAnQ2FyZCc7XHJcbiAgICB9LFxyXG4gICAgRGlhbG9nOiBmdW5jdGlvbigpIHtcclxuICAgICAgcmV0dXJuICdEaWFsb2cnO1xyXG4gICAgfVxyXG4gIH07XHJcbn0pO1xyXG5cclxuLy8gQ2FyZOyZgCBEaWFsb2cg7ZWY7JyEIOy7tO2PrOuEjO2KuOulvCDqsJzrs4TsoIHsnLzroZwg66qo7YK5XHJcbmplc3QubW9jaygncmVhY3QtbmF0aXZlLXBhcGVyL2xpYi9jb21tb25qcy9jb21wb25lbnRzL0NhcmQvQ2FyZENvbnRlbnQnLCAoKSA9PiAnQ2FyZENvbnRlbnQnKTtcclxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUtcGFwZXIvbGliL2NvbW1vbmpzL2NvbXBvbmVudHMvQ2FyZC9DYXJkQWN0aW9ucycsICgpID0+ICdDYXJkQWN0aW9ucycpO1xyXG5qZXN0Lm1vY2soJ3JlYWN0LW5hdGl2ZS1wYXBlci9saWIvY29tbW9uanMvY29tcG9uZW50cy9EaWFsb2cvRGlhbG9nVGl0bGUnLCAoKSA9PiAnRGlhbG9nVGl0bGUnKTtcclxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUtcGFwZXIvbGliL2NvbW1vbmpzL2NvbXBvbmVudHMvRGlhbG9nL0RpYWxvZ0NvbnRlbnQnLCAoKSA9PiAnRGlhbG9nQ29udGVudCcpO1xyXG5qZXN0Lm1vY2soJ3JlYWN0LW5hdGl2ZS1wYXBlci9saWIvY29tbW9uanMvY29tcG9uZW50cy9EaWFsb2cvRGlhbG9nQWN0aW9ucycsICgpID0+ICdEaWFsb2dBY3Rpb25zJyk7XHJcblxyXG5qZXN0Lm1vY2soJ3JlYWN0LW5hdGl2ZS12ZWN0b3ItaWNvbnMvTWF0ZXJpYWxDb21tdW5pdHlJY29ucycsICgpID0+ICdJY29uJyk7XHJcbmplc3QubW9jaygncmVhY3QtbmF0aXZlLXNhZmUtYXJlYS1jb250ZXh0JywgKCkgPT4gKHsgU2FmZUFyZWFWaWV3OiAnU2FmZUFyZWFWaWV3JyB9KSk7XHJcblxyXG4vLyDrhKTruYTqsozsnbTshZgg66qo7YK5XHJcbmNvbnN0IG1vY2tOYXZpZ2F0ZSA9IGplc3QuZm4oKTtcclxuY29uc3QgbW9ja0FkZExpc3RlbmVyID0gamVzdC5mbigoKSA9PiBqZXN0LmZuKCkpO1xyXG5cclxuamVzdC5tb2NrKCdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUnLCAoKSA9PiAoe1xyXG4gIHVzZU5hdmlnYXRpb246ICgpID0+ICh7XHJcbiAgICBuYXZpZ2F0ZTogbW9ja05hdmlnYXRlLFxyXG4gICAgZ29CYWNrOiBqZXN0LmZuKCksXHJcbiAgICBhZGRMaXN0ZW5lcjogbW9ja0FkZExpc3RlbmVyLFxyXG4gIH0pLFxyXG59KSk7XHJcblxyXG4vLyDqsITri6jtlZwg7YWM7Iqk7Yq4XHJcbmRlc2NyaWJlKCdNeVBvc3RzU2NyZWVuJywgKCkgPT4ge1xyXG4gIGl0KCdpbXBvcnRzIHdpdGhvdXQgY3Jhc2hpbmcnLCAoKSA9PiB7XHJcbiAgICBleHBlY3QoTXlQb3N0c1NjcmVlbikudG9CZURlZmluZWQoKTtcclxuICB9KTtcclxuXHJcbiAgLy8g642UIOuzteyeoe2VnCDthYzsiqTtirjripQg64KY7KSR7JeQIOy2lOqwgFxyXG59KTsiXSwibWFwcGluZ3MiOiJBQU1BQSxXQUFBLEdBQUtDLElBQUksdUNBQXVDO0VBQUEsT0FBTztJQUNyREMsVUFBVSxFQUFFQyxJQUFJLENBQUNDLEVBQUUsQ0FBQztNQUFBLE9BQU1DLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDO1FBQ3hDQyxJQUFJLEVBQUU7VUFDSkMsS0FBSyxFQUFFLENBQ0w7WUFDRUMsT0FBTyxFQUFFLENBQUM7WUFDVkMsT0FBTyxFQUFFLGtCQUFrQjtZQUMzQkMsZUFBZSxFQUFFLElBQUk7WUFDckJDLFVBQVUsRUFBRSxDQUFDO1lBQ2JDLGFBQWEsRUFBRSxDQUFDO1lBQ2hCQyxVQUFVLEVBQUU7VUFDZCxDQUFDO1FBRUw7TUFDRixDQUFDLENBQUM7SUFBQSxFQUFDO0lBQ0hDLFVBQVUsRUFBRVosSUFBSSxDQUFDQyxFQUFFLENBQUM7TUFBQSxPQUFNQyxPQUFPLENBQUNDLE9BQU8sQ0FBQztRQUFFQyxJQUFJLEVBQUU7VUFBRVMsT0FBTyxFQUFFO1FBQUs7TUFBRSxDQUFDLENBQUM7SUFBQTtFQUN4RSxDQUFDO0FBQUEsQ0FBQyxDQUFDO0FBSUhoQixXQUFBLEdBQUtDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxZQUFNO0VBQ3BDLE9BQU87SUFFTGdCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCQyxJQUFJLEVBQUUsTUFBTTtJQUNaQyxNQUFNLEVBQUUsUUFBUTtJQUdoQkMsSUFBSSxFQUFFLFNBQU5BLElBQUlBLENBQUEsRUFBYTtNQUNmLE9BQU8sTUFBTTtJQUNmLENBQUM7SUFDREMsTUFBTSxFQUFFLFNBQVJBLE1BQU1BLENBQUEsRUFBYTtNQUNqQixPQUFPLFFBQVE7SUFDakI7RUFDRixDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBR0ZyQixXQUFBLEdBQUtDLElBQUksQ0FBQyw2REFBNkQsRUFBRTtFQUFBLE9BQU0sYUFBYTtBQUFBLEVBQUM7QUFDN0ZELFdBQUEsR0FBS0MsSUFBSSxDQUFDLDZEQUE2RCxFQUFFO0VBQUEsT0FBTSxhQUFhO0FBQUEsRUFBQztBQUM3RkQsV0FBQSxHQUFLQyxJQUFJLENBQUMsK0RBQStELEVBQUU7RUFBQSxPQUFNLGFBQWE7QUFBQSxFQUFDO0FBQy9GRCxXQUFBLEdBQUtDLElBQUksQ0FBQyxpRUFBaUUsRUFBRTtFQUFBLE9BQU0sZUFBZTtBQUFBLEVBQUM7QUFDbkdELFdBQUEsR0FBS0MsSUFBSSxDQUFDLGlFQUFpRSxFQUFFO0VBQUEsT0FBTSxlQUFlO0FBQUEsRUFBQztBQUVuR0QsV0FBQSxHQUFLQyxJQUFJLENBQUMsa0RBQWtELEVBQUU7RUFBQSxPQUFNLE1BQU07QUFBQSxFQUFDO0FBQzNFRCxXQUFBLEdBQUtDLElBQUksQ0FBQyxnQ0FBZ0MsRUFBRTtFQUFBLE9BQU87SUFBRXFCLFlBQVksRUFBRTtFQUFlLENBQUM7QUFBQSxDQUFDLENBQUM7QUFNckZ0QixXQUFBLEdBQUtDLElBQUksQ0FBQywwQkFBMEIsRUFBRTtFQUFBLE9BQU87SUFDM0NzQixhQUFhLEVBQUUsU0FBZkEsYUFBYUEsQ0FBQTtNQUFBLE9BQVM7UUFDcEJDLFFBQVEsRUFBRUMsWUFBWTtRQUN0QkMsTUFBTSxFQUFFdkIsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztRQUNqQnVCLFdBQVcsRUFBRUM7TUFDZixDQUFDO0lBQUE7RUFDSCxDQUFDO0FBQUEsQ0FBQyxDQUFDO0FBQUMsSUFBQUMsc0JBQUEsR0FBQUMsT0FBQTtBQTVESixJQUFBQyxjQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBNEQsU0FBQTlCLFlBQUE7RUFBQSxJQUFBZ0MsUUFBQSxHQUFBRixPQUFBO0lBQUEzQixJQUFBLEdBQUE2QixRQUFBLENBQUE3QixJQUFBO0VBQUFILFdBQUEsWUFBQUEsWUFBQTtJQUFBLE9BQUFHLElBQUE7RUFBQTtFQUFBLE9BQUFBLElBQUE7QUFBQTtBQW1ENUQsSUFBTXNCLFlBQVksR0FBR3RCLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7QUFDOUIsSUFBTXdCLGVBQWUsR0FBR3pCLElBQUksQ0FBQ0MsRUFBRSxDQUFDO0VBQUEsT0FBTUQsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztBQUFBLEVBQUM7QUFXaEQ2QixRQUFRLENBQUMsZUFBZSxFQUFFLFlBQU07RUFDOUJDLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSxZQUFNO0lBQ25DQyxNQUFNLENBQUNDLHNCQUFhLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFDckMsQ0FBQyxDQUFDO0FBR0osQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119