268e8c0c8ba0d50e46d82f33199e60ff
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SharedTransition = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _index = require("../../animation/index.js");
var _util = require("../../animation/util.js");
var _commonTypes = require("../../commonTypes.js");
var _errors = require("../../errors.js");
var _UpdateLayoutAnimations = require("../../UpdateLayoutAnimations.js");
var _ProgressTransitionManager = require("./ProgressTransitionManager.js");
var SUPPORTED_PROPS = ['width', 'height', 'originX', 'originY', 'transform', 'borderRadius', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomLeftRadius', 'borderBottomRightRadius'];
var SharedTransition = exports.SharedTransition = function () {
  function SharedTransition() {
    (0, _classCallCheck2.default)(this, SharedTransition);
    this._customAnimationFactory = null;
    this._animation = null;
    this._transitionDuration = 500;
    this._reduceMotion = _commonTypes.ReduceMotion.System;
    this._customProgressAnimation = undefined;
    this._progressAnimation = undefined;
    this._defaultTransitionType = undefined;
  }
  return (0, _createClass2.default)(SharedTransition, [{
    key: "custom",
    value: function custom(customAnimationFactory) {
      this._customAnimationFactory = customAnimationFactory;
      return this;
    }
  }, {
    key: "progressAnimation",
    value: function progressAnimation(progressAnimationCallback) {
      this._customProgressAnimation = function (viewTag, values, progress) {
        'worklet';

        var newStyles = progressAnimationCallback(values, progress);
        global._notifyAboutProgress(viewTag, newStyles, true);
      };
      return this;
    }
  }, {
    key: "duration",
    value: function duration(_duration) {
      this._transitionDuration = _duration;
      return this;
    }
  }, {
    key: "reduceMotion",
    value: function reduceMotion(_reduceMotion) {
      this._reduceMotion = _reduceMotion;
      return this;
    }
  }, {
    key: "defaultTransitionType",
    value: function defaultTransitionType(transitionType) {
      this._defaultTransitionType = transitionType;
      return this;
    }
  }, {
    key: "registerTransition",
    value: function registerTransition(viewTag, sharedTransitionTag) {
      var isUnmounting = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      if ((0, _util.getReduceMotionFromConfig)(this.getReduceMotion())) {
        return;
      }
      var transitionAnimation = this.getTransitionAnimation();
      var progressAnimation = this.getProgressAnimation();
      if (!this._defaultTransitionType) {
        if (this._customAnimationFactory && !this._customProgressAnimation) {
          this._defaultTransitionType = _commonTypes.SharedTransitionType.ANIMATION;
        } else {
          this._defaultTransitionType = _commonTypes.SharedTransitionType.PROGRESS_ANIMATION;
        }
      }
      var layoutAnimationType = this._defaultTransitionType === _commonTypes.SharedTransitionType.ANIMATION ? _commonTypes.LayoutAnimationType.SHARED_ELEMENT_TRANSITION : _commonTypes.LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS;
      (0, _UpdateLayoutAnimations.updateLayoutAnimations)(viewTag, layoutAnimationType, transitionAnimation, sharedTransitionTag, isUnmounting);
      SharedTransition._progressTransitionManager.addProgressAnimation(viewTag, progressAnimation);
    }
  }, {
    key: "unregisterTransition",
    value: function unregisterTransition(viewTag) {
      var isUnmounting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var layoutAnimationType = this._defaultTransitionType === _commonTypes.SharedTransitionType.ANIMATION ? _commonTypes.LayoutAnimationType.SHARED_ELEMENT_TRANSITION : _commonTypes.LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS;
      (0, _UpdateLayoutAnimations.updateLayoutAnimations)(viewTag, layoutAnimationType, undefined, undefined, isUnmounting);
      SharedTransition._progressTransitionManager.removeProgressAnimation(viewTag, isUnmounting);
    }
  }, {
    key: "getReduceMotion",
    value: function getReduceMotion() {
      return this._reduceMotion;
    }
  }, {
    key: "getTransitionAnimation",
    value: function getTransitionAnimation() {
      if (!this._animation) {
        this.buildAnimation();
      }
      return this._animation;
    }
  }, {
    key: "getProgressAnimation",
    value: function getProgressAnimation() {
      if (!this._progressAnimation) {
        this.buildProgressAnimation();
      }
      return this._progressAnimation;
    }
  }, {
    key: "buildAnimation",
    value: function buildAnimation() {
      var animationFactory = this._customAnimationFactory;
      var transitionDuration = this._transitionDuration;
      var reduceMotion = this._reduceMotion;
      this._animation = function (values) {
        'worklet';

        var animations = {};
        var initialValues = {};
        if (animationFactory) {
          animations = animationFactory(values);
          for (var key in animations) {
            if (!SUPPORTED_PROPS.includes(key)) {
              throw new _errors.ReanimatedError(`The prop '${key}' is not supported yet.`);
            }
          }
        } else {
          for (var propName of SUPPORTED_PROPS) {
            if (propName === 'transform') {
              var matrix = values.targetTransformMatrix;
              animations.transformMatrix = (0, _index.withTiming)(matrix, {
                reduceMotion: reduceMotion,
                duration: transitionDuration
              });
            } else {
              var capitalizedPropName = `${propName.charAt(0).toUpperCase()}${propName.slice(1)}`;
              var keyToTargetValue = `target${capitalizedPropName}`;
              animations[propName] = (0, _index.withTiming)(values[keyToTargetValue], {
                reduceMotion: reduceMotion,
                duration: transitionDuration
              });
            }
          }
        }
        for (var _propName in animations) {
          if (_propName === 'transform') {
            initialValues.transformMatrix = values.currentTransformMatrix;
          } else {
            var _capitalizedPropName = _propName.charAt(0).toUpperCase() + _propName.slice(1);
            var keyToCurrentValue = `current${_capitalizedPropName}`;
            initialValues[_propName] = values[keyToCurrentValue];
          }
        }
        return {
          initialValues: initialValues,
          animations: animations
        };
      };
    }
  }, {
    key: "buildProgressAnimation",
    value: function buildProgressAnimation() {
      if (this._customProgressAnimation) {
        this._progressAnimation = this._customProgressAnimation;
        return;
      }
      this._progressAnimation = function (viewTag, values, progress) {
        'worklet';

        var newStyles = {};
        for (var propertyName of SUPPORTED_PROPS) {
          if (propertyName === 'transform') {
            var currentMatrix = values.currentTransformMatrix;
            var targetMatrix = values.targetTransformMatrix;
            var newMatrix = new Array(9);
            for (var i = 0; i < 9; i++) {
              newMatrix[i] = progress * (targetMatrix[i] - currentMatrix[i]) + currentMatrix[i];
            }
            newStyles.transformMatrix = newMatrix;
          } else {
            var PropertyName = propertyName.charAt(0).toUpperCase() + propertyName.slice(1);
            var currentPropertyName = `current${PropertyName}`;
            var targetPropertyName = `target${PropertyName}`;
            var currentValue = values[currentPropertyName];
            var targetValue = values[targetPropertyName];
            newStyles[propertyName] = progress * (targetValue - currentValue) + currentValue;
          }
        }
        global._notifyAboutProgress(viewTag, newStyles, true);
      };
    }
  }], [{
    key: "custom",
    value: function custom(customAnimationFactory) {
      return new SharedTransition().custom(customAnimationFactory);
    }
  }, {
    key: "duration",
    value: function duration(_duration2) {
      return new SharedTransition().duration(_duration2);
    }
  }, {
    key: "progressAnimation",
    value: function progressAnimation(progressAnimationCallback) {
      return new SharedTransition().progressAnimation(progressAnimationCallback);
    }
  }, {
    key: "defaultTransitionType",
    value: function defaultTransitionType(transitionType) {
      return new SharedTransition().defaultTransitionType(transitionType);
    }
  }, {
    key: "reduceMotion",
    value: function reduceMotion(_reduceMotion2) {
      return new SharedTransition().reduceMotion(_reduceMotion2);
    }
  }]);
}();
SharedTransition._progressTransitionManager = new _ProgressTransitionManager.ProgressTransitionManager();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,