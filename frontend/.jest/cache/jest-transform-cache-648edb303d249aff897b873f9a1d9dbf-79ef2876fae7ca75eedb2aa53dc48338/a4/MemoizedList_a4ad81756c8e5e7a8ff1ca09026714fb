37fc41a822b475d8d71252ef87782a51
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MemoizedCard = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function cov_2lutdlijcl() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\components\\optimized\\MemoizedList.tsx";
  var hash = "0a45a9008e7aa497839a6941fc1dced36db10e9a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\components\\optimized\\MemoizedList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 59
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "1": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 92,
          column: 4
        }
      },
      "2": {
        start: {
          line: 95,
          column: 15
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "3": {
        start: {
          line: 179,
          column: 28
        },
        end: {
          line: 179,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 59
          },
          end: {
            line: 21,
            column: 60
          }
        },
        loc: {
          start: {
            line: 35,
            column: 6
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 17
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 31,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 16
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 32,
            column: 19
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 21
          },
          end: {
            line: 40,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 31
          },
          end: {
            line: 40,
            column: 34
          }
        }, {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 40,
            column: 38
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 7
          },
          end: {
            line: 55,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 7
          },
          end: {
            line: 42,
            column: 17
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 54,
            column: 15
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 11
          },
          end: {
            line: 49,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 11
          },
          end: {
            line: 44,
            column: 25
          }
        }, {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 48,
            column: 14
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 13
          },
          end: {
            line: 52,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 13
          },
          end: {
            line: 52,
            column: 22
          }
        }, {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 52,
            column: 75
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 7
          },
          end: {
            line: 68,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 7
          },
          end: {
            line: 62,
            column: 15
          }
        }, {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 67,
            column: 10
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 76,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 76,
            column: 48
          }
        }, {
          start: {
            line: 76,
            column: 52
          },
          end: {
            line: 76,
            column: 68
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 90,
            column: 7
          },
          end: {
            line: 90,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 7
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: 90,
            column: 17
          },
          end: {
            line: 90,
            column: 60
          }
        }],
        line: 90
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0a45a9008e7aa497839a6941fc1dced36db10e9a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2lutdlijcl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lutdlijcl();
cov_2lutdlijcl().s[0]++;
var MemoizedCardComponent = function MemoizedCardComponent(_ref) {
  var title = _ref.title,
    content = _ref.content,
    imageUrl = _ref.imageUrl,
    onPress = _ref.onPress,
    footer = _ref.footer,
    timestamp = _ref.timestamp,
    authorName = _ref.authorName,
    authorImageUrl = _ref.authorImageUrl,
    _ref$isLiked = _ref.isLiked,
    isLiked = _ref$isLiked === void 0 ? (cov_2lutdlijcl().b[0][0]++, false) : _ref$isLiked,
    _ref$likesCount = _ref.likesCount,
    likesCount = _ref$likesCount === void 0 ? (cov_2lutdlijcl().b[1][0]++, 0) : _ref$likesCount,
    _ref$commentsCount = _ref.commentsCount,
    commentsCount = _ref$commentsCount === void 0 ? (cov_2lutdlijcl().b[2][0]++, 0) : _ref$commentsCount,
    onLike = _ref.onLike,
    onComment = _ref.onComment;
  cov_2lutdlijcl().f[0]++;
  cov_2lutdlijcl().s[1]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
    style: styles.container,
    onPress: onPress,
    activeOpacity: onPress ? (cov_2lutdlijcl().b[3][0]++, 0.7) : (cov_2lutdlijcl().b[3][1]++, 1),
    children: [(cov_2lutdlijcl().b[4][0]++, authorName) && (cov_2lutdlijcl().b[4][1]++, (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.authorContainer,
      children: [(cov_2lutdlijcl().b[5][0]++, authorImageUrl) && (cov_2lutdlijcl().b[5][1]++, (0, _jsxRuntime.jsx)(_reactNative.Image, {
        source: {
          uri: authorImageUrl
        },
        style: styles.authorImage
      })), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.authorInfo,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.authorName,
          children: authorName
        }), (cov_2lutdlijcl().b[6][0]++, timestamp) && (cov_2lutdlijcl().b[6][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.timestamp,
          children: timestamp
        }))]
      })]
    })), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.title,
      children: title
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.content,
      numberOfLines: 3,
      children: content
    }), (cov_2lutdlijcl().b[7][0]++, imageUrl) && (cov_2lutdlijcl().b[7][1]++, (0, _jsxRuntime.jsx)(_reactNative.Image, {
      source: {
        uri: imageUrl
      },
      style: styles.image,
      resizeMode: "cover"
    })), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.statsContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.statButton,
        onPress: onLike,
        disabled: !onLike,
        children: (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: [styles.statText, (cov_2lutdlijcl().b[8][0]++, isLiked) && (cov_2lutdlijcl().b[8][1]++, styles.likedText)],
          children: ["\uC88B\uC544\uC694 ", likesCount]
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.statButton,
        onPress: onComment,
        disabled: !onComment,
        children: (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: styles.statText,
          children: ["\uB313\uAE00 ", commentsCount]
        })
      })]
    }), (cov_2lutdlijcl().b[9][0]++, footer) && (cov_2lutdlijcl().b[9][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.footer,
      children: footer
    }))]
  });
};
var styles = (cov_2lutdlijcl().s[2]++, _reactNative.StyleSheet.create({
  container: {
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 16,
    marginVertical: 8,
    marginHorizontal: 16,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3
  },
  authorContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12
  },
  authorImage: {
    width: 32,
    height: 32,
    borderRadius: 16,
    marginRight: 8
  },
  authorInfo: {
    flex: 1
  },
  authorName: {
    fontWeight: 'bold',
    fontSize: 14,
    color: '#333'
  },
  timestamp: {
    fontSize: 12,
    color: '#999',
    marginTop: 2
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 8,
    color: '#333'
  },
  content: {
    fontSize: 14,
    color: '#666',
    lineHeight: 20,
    marginBottom: 12
  },
  image: {
    width: '100%',
    height: 200,
    borderRadius: 8,
    marginBottom: 12
  },
  statsContainer: {
    flexDirection: 'row',
    borderTopWidth: 1,
    borderTopColor: '#eee',
    paddingTop: 12
  },
  statButton: {
    flexDirection: 'row',
    alignItems: 'center',
    marginRight: 16,
    paddingVertical: 4
  },
  statText: {
    fontSize: 14,
    color: '#666'
  },
  likedText: {
    color: '#3b82f6',
    fontWeight: 'bold'
  },
  footer: {
    marginTop: 12,
    paddingTop: 12,
    borderTopWidth: 1,
    borderTopColor: '#eee'
  }
}));
var MemoizedCard = exports.MemoizedCard = (cov_2lutdlijcl().s[3]++, (0, _react.memo)(MemoizedCardComponent));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,