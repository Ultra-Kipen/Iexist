ee5a46075ea59d35ade984064158365d
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PerformanceMonitor = PerformanceMonitor;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _ConfigHelper = require("../ConfigHelper.js");
var _index = require("../createAnimatedComponent/index.js");
var _index2 = require("../hook/index.js");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function createCircularDoublesBuffer(size) {
  'worklet';

  return {
    next: 0,
    buffer: new Float32Array(size),
    size: size,
    count: 0,
    push: function push(value) {
      var oldValue = this.buffer[this.next];
      var oldCount = this.count;
      this.buffer[this.next] = value;
      this.next = (this.next + 1) % this.size;
      this.count = Math.min(this.size, this.count + 1);
      return oldCount === this.size ? oldValue : null;
    },
    front: function front() {
      var notEmpty = this.count > 0;
      if (notEmpty) {
        var current = this.next - 1;
        var index = current < 0 ? this.size - 1 : current;
        return this.buffer[index];
      }
      return null;
    },
    back: function back() {
      var notEmpty = this.count > 0;
      return notEmpty ? this.buffer[this.next] : null;
    }
  };
}
var DEFAULT_BUFFER_SIZE = 20;
(0, _ConfigHelper.addWhitelistedNativeProps)({
  text: true
});
var AnimatedTextInput = (0, _index.createAnimatedComponent)(_reactNative.TextInput);
function loopAnimationFrame(fn) {
  var lastTime = 0;
  function loop() {
    requestAnimationFrame(function (time) {
      if (lastTime > 0) {
        fn(lastTime, time);
      }
      lastTime = time;
      requestAnimationFrame(loop);
    });
  }
  loop();
}
function getFps(renderTimeInMs) {
  'worklet';

  return 1000 / renderTimeInMs;
}
function completeBufferRoutine(buffer, timestamp) {
  'worklet';

  var _buffer$push;
  timestamp = Math.round(timestamp);
  var droppedTimestamp = (_buffer$push = buffer.push(timestamp)) != null ? _buffer$push : timestamp;
  var measuredRangeDuration = timestamp - droppedTimestamp;
  return getFps(measuredRangeDuration / buffer.count);
}
function JsPerformance(_ref) {
  var smoothingFrames = _ref.smoothingFrames;
  var jsFps = (0, _index2.useSharedValue)(null);
  var totalRenderTime = (0, _index2.useSharedValue)(0);
  var circularBuffer = (0, _react.useRef)(createCircularDoublesBuffer(smoothingFrames));
  (0, _react.useEffect)(function () {
    loopAnimationFrame(function (_, timestamp) {
      timestamp = Math.round(timestamp);
      var currentFps = completeBufferRoutine(circularBuffer.current, timestamp);
      jsFps.value = (currentFps * 2).toFixed(0);
    });
  }, [jsFps, totalRenderTime]);
  var animatedProps = (0, _index2.useAnimatedProps)(function () {
    var _jsFps$value;
    var text = 'JS: ' + ((_jsFps$value = jsFps.value) != null ? _jsFps$value : 'N/A') + ' ';
    return {
      text: text,
      defaultValue: text
    };
  });
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: styles.container,
    children: (0, _jsxRuntime.jsx)(AnimatedTextInput, {
      style: styles.text,
      animatedProps: animatedProps,
      editable: false
    })
  });
}
function UiPerformance(_ref2) {
  var smoothingFrames = _ref2.smoothingFrames;
  var uiFps = (0, _index2.useSharedValue)(null);
  var circularBuffer = (0, _index2.useSharedValue)(null);
  (0, _index2.useFrameCallback)(function (_ref3) {
    var timestamp = _ref3.timestamp;
    if (circularBuffer.value === null) {
      circularBuffer.value = createCircularDoublesBuffer(smoothingFrames);
    }
    timestamp = Math.round(timestamp);
    var currentFps = completeBufferRoutine(circularBuffer.value, timestamp);
    uiFps.value = currentFps.toFixed(0);
  });
  var animatedProps = (0, _index2.useAnimatedProps)(function () {
    var _uiFps$value;
    var text = 'UI: ' + ((_uiFps$value = uiFps.value) != null ? _uiFps$value : 'N/A') + ' ';
    return {
      text: text,
      defaultValue: text
    };
  });
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: styles.container,
    children: (0, _jsxRuntime.jsx)(AnimatedTextInput, {
      style: styles.text,
      animatedProps: animatedProps,
      editable: false
    })
  });
}
function PerformanceMonitor(_ref4) {
  var _ref4$smoothingFrames = _ref4.smoothingFrames,
    smoothingFrames = _ref4$smoothingFrames === void 0 ? DEFAULT_BUFFER_SIZE : _ref4$smoothingFrames;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.monitor,
    children: [(0, _jsxRuntime.jsx)(JsPerformance, {
      smoothingFrames: smoothingFrames
    }), (0, _jsxRuntime.jsx)(UiPerformance, {
      smoothingFrames: smoothingFrames
    })]
  });
}
var styles = _reactNative.StyleSheet.create({
  monitor: {
    flexDirection: 'row',
    position: 'absolute',
    backgroundColor: '#0006',
    zIndex: 1000
  },
  header: {
    fontSize: 14,
    color: '#ffff',
    paddingHorizontal: 5
  },
  text: {
    fontSize: 13,
    fontVariant: ['tabular-nums'],
    color: '#ffff',
    fontFamily: 'monospace',
    paddingHorizontal: 3
  },
  container: {
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'row',
    flexWrap: 'wrap'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,