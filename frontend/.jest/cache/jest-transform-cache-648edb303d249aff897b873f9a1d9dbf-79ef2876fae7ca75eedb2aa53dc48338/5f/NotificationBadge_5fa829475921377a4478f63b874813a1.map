{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_NotificationContext","_jsxRuntime","NotificationBadge","_ref","style","_ref$showZero","showZero","_ref$maxCount","maxCount","_useNotification","useNotification","unreadCount","displayCount","toString","jsx","View","styles","badge","wideBadge","extraWideBadge","children","Text","count","StyleSheet","create","minWidth","height","borderRadius","backgroundColor","justifyContent","alignItems","paddingHorizontal","color","fontSize","fontWeight","textAlign","_default","exports","default"],"sources":["NotificationBadge.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\n\r\ninterface NotificationBadgeProps {\r\n  style?: object;\r\n  showZero?: boolean;\r\n  maxCount?: number;\r\n}\r\n\r\nconst NotificationBadge: React.FC<NotificationBadgeProps> = ({ \r\n  style,\r\n  showZero = false,\r\n  maxCount = 99\r\n}) => {\r\n  const { unreadCount } = useNotification();\r\n  \r\n  // 표시할 카운트 계산 (maxCount 초과 시 \"+\")\r\n  const displayCount = unreadCount > maxCount ? `${maxCount}+` : unreadCount.toString();\r\n  \r\n  // 카운트가 0이고 showZero가 false이면 렌더링하지 않음\r\n  if (unreadCount === 0 && !showZero) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <View \r\n      style={[\r\n        styles.badge,\r\n        style,\r\n        unreadCount > 9 && styles.wideBadge,\r\n        unreadCount > 99 && styles.extraWideBadge\r\n      ]}\r\n    >\r\n      <Text style={styles.count}>{displayCount}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  badge: {\r\n    minWidth: 18,\r\n    height: 18,\r\n    borderRadius: 9,\r\n    backgroundColor: '#FF3B30',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 4\r\n  },\r\n  wideBadge: {\r\n    minWidth: 22,\r\n    borderRadius: 11\r\n  },\r\n  extraWideBadge: {\r\n    minWidth: 28\r\n  },\r\n  count: {\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default NotificationBadge;"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,oBAAA,GAAAF,OAAA;AAAkE,IAAAG,WAAA,GAAAH,OAAA;AAQlE,IAAMI,iBAAmD,GAAG,SAAtDA,iBAAmDA,CAAAC,IAAA,EAInD;EAAA,IAHJC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAAC,aAAA,GAAAF,IAAA,CACLG,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,aAAA,GAAAJ,IAAA,CAChBK,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,EAAE,GAAAA,aAAA;EAEb,IAAAE,gBAAA,GAAwB,IAAAC,oCAAe,EAAC,CAAC;IAAjCC,WAAW,GAAAF,gBAAA,CAAXE,WAAW;EAGnB,IAAMC,YAAY,GAAGD,WAAW,GAAGH,QAAQ,GAAG,GAAGA,QAAQ,GAAG,GAAGG,WAAW,CAACE,QAAQ,CAAC,CAAC;EAGrF,IAAIF,WAAW,KAAK,CAAC,IAAI,CAACL,QAAQ,EAAE;IAClC,OAAO,IAAI;EACb;EAEA,OACE,IAAAL,WAAA,CAAAa,GAAA,EAACf,YAAA,CAAAgB,IAAI;IACHX,KAAK,EAAE,CACLY,MAAM,CAACC,KAAK,EACZb,KAAK,EACLO,WAAW,GAAG,CAAC,IAAIK,MAAM,CAACE,SAAS,EACnCP,WAAW,GAAG,EAAE,IAAIK,MAAM,CAACG,cAAc,CACzC;IAAAC,QAAA,EAEF,IAAAnB,WAAA,CAAAa,GAAA,EAACf,YAAA,CAAAsB,IAAI;MAACjB,KAAK,EAAEY,MAAM,CAACM,KAAM;MAAAF,QAAA,EAAER;IAAY,CAAO;EAAC,CAC5C,CAAC;AAEX,CAAC;AAED,IAAMI,MAAM,GAAGO,uBAAU,CAACC,MAAM,CAAC;EAC/BP,KAAK,EAAE;IACLQ,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE,SAAS;IAC1BC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EACDb,SAAS,EAAE;IACTO,QAAQ,EAAE,EAAE;IACZE,YAAY,EAAE;EAChB,CAAC;EACDR,cAAc,EAAE;IACdM,QAAQ,EAAE;EACZ,CAAC;EACDH,KAAK,EAAE;IACLU,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEYpC,iBAAiB","ignoreList":[]}