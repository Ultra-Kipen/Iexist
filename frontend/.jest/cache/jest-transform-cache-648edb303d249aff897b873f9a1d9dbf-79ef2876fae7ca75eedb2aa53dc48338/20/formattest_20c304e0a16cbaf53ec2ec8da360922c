86305c66e08ae764bb81f5b48b436e83
var _format = require("../../../src/utils/format");
describe('Format utils', function () {
  describe('formatNumber', function () {
    it('should format numbers correctly', function () {
      expect((0, _format.formatNumber)(1000)).toBe('1,000');
      expect((0, _format.formatNumber)(1000000)).toBe('1,000,000');
      expect((0, _format.formatNumber)(1234.56)).toBe('1,234.56');
    });
    it('should round to specified decimal places', function () {
      expect((0, _format.formatNumber)(1234.5678, 2)).toBe('1,234.57');
      expect((0, _format.formatNumber)(1234.5678, 0)).toBe('1,235');
    });
  });
  describe('formatFileSize', function () {
    it('should format file sizes in bytes correctly', function () {
      expect((0, _format.formatFileSize)(500)).toBe('500 B');
      expect((0, _format.formatFileSize)(1024)).toBe('1.0 KB');
      expect((0, _format.formatFileSize)(1048576)).toBe('1.0 MB');
      expect((0, _format.formatFileSize)(1073741824)).toBe('1.0 GB');
    });
    it('should handle decimal places correctly', function () {
      expect((0, _format.formatFileSize)(1536, 1)).toBe('1.5 KB');
      expect((0, _format.formatFileSize)(1536, 2)).toBe('1.50 KB');
    });
  });
  describe('truncateText', function () {
    it('should truncate text to specified length', function () {
      var longText = '이 텍스트는 너무 길어서 잘려야 합니다.';
      expect((0, _format.truncateText)(longText, 10)).toBe('이 텍스트는...');
    });
    it('should use custom ellipsis if provided', function () {
      var longText = '이 텍스트는 너무 길어서 잘려야 합니다.';
      expect((0, _format.truncateText)(longText, 10, '(...)')).toBe('이 텍스트는(...)');
    });
    it('should not truncate text shorter than limit', function () {
      var shortText = '짧은 텍스트';
      expect((0, _format.truncateText)(shortText, 20)).toBe('짧은 텍스트');
    });
  });
  describe('formatPhoneNumber', function () {
    it('should format Korean phone numbers correctly', function () {
      expect((0, _format.formatPhoneNumber)('01012345678')).toBe('010-1234-5678');
      expect((0, _format.formatPhoneNumber)('0212345678')).toBe('02-1234-5678');
      expect((0, _format.formatPhoneNumber)('021234567')).toBe('02-123-4567');
    });
    it('should handle numbers with existing hyphens', function () {
      expect((0, _format.formatPhoneNumber)('010-1234-5678')).toBe('010-1234-5678');
    });
    it('should handle invalid phone numbers', function () {
      expect((0, _format.formatPhoneNumber)('123')).toBe('123');
      expect((0, _format.formatPhoneNumber)('')).toBe('');
    });
  });
  describe('formatCurrency', function () {
    it('should format currency amounts correctly', function () {
      expect((0, _format.formatCurrency)(1000)).toBe('₩1,000');
      expect((0, _format.formatCurrency)(1234.56)).toBe('₩1,235');
    });
    it('should use specified currency symbol', function () {
      expect((0, _format.formatCurrency)(1000, '$')).toBe('$1,000');
      expect((0, _format.formatCurrency)(1000, '€')).toBe('€1,000');
    });
    it('should handle decimal places correctly', function () {
      expect((0, _format.formatCurrency)(1234.56, '₩', 2)).toBe('₩1,234.56');
    });
  });
  describe('capitalize', function () {
    it('should capitalize first letter of a string', function () {
      expect((0, _format.capitalize)('hello')).toBe('Hello');
      expect((0, _format.capitalize)('world')).toBe('World');
    });
    it('should handle empty strings', function () {
      expect((0, _format.capitalize)('')).toBe('');
    });
    it('should handle already capitalized strings', function () {
      expect((0, _format.capitalize)('Hello')).toBe('Hello');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,