{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","useNavigation","navigate","fn","goBack","useRoute","params","postId","getPostById","getComments","likePost","addComment","__esModule","default","MockLoadingIndicator","props","_jsxRuntime","jsxs","children","text","MockProfileAvatar","MockCommentItem","MockButton","jsx","onClick","onPress","title","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_native","_PostDetailScreen","_postService","_reactNative2","_require","mockPost","post_id","user_id","username","nickname","content","emotions","emotion_id","name","color","is_anonymous","like_count","comment_count","is_liked","created_at","Date","toISOString","mockComments","comment_id","spyOn","Alert","mockImplementation","describe","beforeEach","clearAllMocks","it","postService","Promise","_render","render","NavigationContainer","debug","waitFor","expect","toHaveBeenCalledWith","timeout","mockResolvedValue","data","mockRejectedValue","Error"],"sources":["PostDetailScreen.test.tsx"],"sourcesContent":["// __tests__/screens/PostDetailScreen.test.tsx\r\nimport React from 'react';\r\nimport { render, waitFor } from '@testing-library/react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport PostDetailScreen from '../../src/screens/PostDetailScreen';\r\nimport postService from '../../src/services/api/postService';\r\nimport { Alert } from 'react-native';\r\n\r\n// 모의 데이터\r\nconst mockPost = {\r\n  post_id: 1,\r\n  user_id: 101,\r\n  username: 'testuser',\r\n  nickname: '테스트유저',\r\n  content: '테스트 게시물 내용입니다.',\r\n  emotions: [\r\n    { emotion_id: 1, name: '행복', color: '#FFD700' }\r\n  ],\r\n  is_anonymous: false,\r\n  like_count: 5,\r\n  comment_count: 2,\r\n  is_liked: false,\r\n  created_at: new Date().toISOString(),\r\n};\r\n\r\nconst mockComments = [\r\n  {\r\n    comment_id: 1,\r\n    user_id: 102,\r\n    username: 'commenter',\r\n    nickname: '댓글작성자',\r\n    content: '좋은 글이네요!',\r\n    is_anonymous: false,\r\n    created_at: new Date().toISOString()\r\n  }\r\n];\r\n\r\n// 모킹\r\njest.mock('@react-navigation/native', () => ({\r\n  ...jest.requireActual('@react-navigation/native'),\r\n  useNavigation: () => ({\r\n    navigate: jest.fn(),\r\n    goBack: jest.fn(),\r\n  }),\r\n  useRoute: () => ({\r\n    params: { postId: 1 },\r\n  }),\r\n}));\r\n\r\n// postService 모킹 - 테스트별로 구현을 변경\r\njest.mock('../../src/services/api/postService', () => ({\r\n  getPostById: jest.fn(),\r\n  getComments: jest.fn(),\r\n  likePost: jest.fn(),\r\n  addComment: jest.fn()\r\n}));\r\n\r\n// 모킹 컴포넌트용 인터페이스 정의\r\ninterface LoadingIndicatorProps {\r\n  text: string;\r\n}\r\n\r\ninterface ProfileAvatarProps {\r\n  name: string;\r\n  isAnonymous: boolean;\r\n  size: number;\r\n}\r\n\r\ninterface CommentItemProps {\r\n  id: number;\r\n  content: string;\r\n  userName: string;\r\n  isAnonymous: boolean;\r\n  createdAt: string;\r\n}\r\n\r\ninterface ButtonProps {\r\n  title: string;\r\n  onPress: () => void;\r\n  type: string;\r\n}\r\n\r\n// LoadingIndicator 모킹 수정\r\njest.mock('../../src/components/LoadingIndicator', () => ({\r\n  __esModule: true,\r\n  default: function MockLoadingIndicator(props: LoadingIndicatorProps) { \r\n    return <div>Loading Component: {props.text}</div>; \r\n  }\r\n}));\r\n\r\njest.mock('../../src/components/ProfileAvatar', () => ({\r\n  __esModule: true,\r\n  default: function MockProfileAvatar(props: ProfileAvatarProps) { return null; }\r\n}));\r\n\r\njest.mock('../../src/components/CommentItem', () => ({\r\n  __esModule: true,\r\n  default: function MockCommentItem(props: CommentItemProps) { return null; }\r\n}));\r\n\r\njest.mock('../../src/components/Button', () => ({\r\n  __esModule: true,\r\n  default: function MockButton(props: ButtonProps) { \r\n    return <div onClick={props.onPress}>{props.title}</div>; \r\n  }\r\n}));\r\n\r\n// Alert 모킹\r\njest.spyOn(Alert, 'alert').mockImplementation(() => {});\r\n\r\ndescribe('PostDetailScreen', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it('renders loading state initially', async () => {\r\n    // 로딩 상태를 유지하기 위해 해결되지 않는 Promise 사용\r\n    (postService.getPostById as jest.Mock).mockImplementation(() => \r\n      new Promise(() => {}) // 영원히 해결되지 않는 Promise\r\n    );\r\n    \r\n    (postService.getComments as jest.Mock).mockImplementation(() => \r\n      new Promise(() => {})\r\n    );\r\n    \r\n    const { debug } = render(\r\n      <NavigationContainer>\r\n        <PostDetailScreen />\r\n      </NavigationContainer>\r\n    );\r\n\r\n    // 컴포넌트 구조 디버깅\r\n    debug();\r\n    \r\n    // API가 호출되었는지 확인\r\n    await waitFor(() => {\r\n      expect(postService.getPostById).toHaveBeenCalledWith(1);\r\n    }, { timeout: 1000 });\r\n  });\r\n\r\n  it('renders post data successfully', async () => {\r\n    // 데이터 로딩 성공 모킹\r\n    (postService.getPostById as jest.Mock).mockResolvedValue({\r\n      data: { data: mockPost }\r\n    });\r\n    \r\n    (postService.getComments as jest.Mock).mockResolvedValue({\r\n      data: { data: mockComments }\r\n    });\r\n    \r\n    render(\r\n      <NavigationContainer>\r\n        <PostDetailScreen />\r\n      </NavigationContainer>\r\n    );\r\n    \r\n    // API 호출 확인 - waitFor 사용\r\n    await waitFor(() => {\r\n      expect(postService.getPostById).toHaveBeenCalledWith(1);\r\n    }, { timeout: 1000 });\r\n\r\n    await waitFor(() => {\r\n      expect(postService.getComments).toHaveBeenCalledWith(1);\r\n    }, { timeout: 1000 });\r\n  });\r\n\r\n  it('handles error state properly', async () => {\r\n    // 에러 상태 모킹\r\n    (postService.getPostById as jest.Mock).mockRejectedValue(new Error('API 오류'));\r\n    \r\n    render(\r\n      <NavigationContainer>\r\n        <PostDetailScreen />\r\n      </NavigationContainer>\r\n    );\r\n    \r\n    // API 호출 확인 - waitFor 사용\r\n    await waitFor(() => {\r\n      expect(postService.getPostById).toHaveBeenCalledWith(1);\r\n    }, { timeout: 1000 });\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}