40edffc7c5d5f3dadcdaef585a7f3737
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativePaper = require("react-native-paper");
var _jsxRuntime = require("react/jsx-runtime");
var challenges = [{
  id: 1,
  title: '7일간의 감사 일기',
  description: '매일 감사한 일 3가지를 기록해보세요.',
  participants: 128,
  duration: 7,
  progress: 0.4
}, {
  id: 2,
  title: '30일 긍정 에너지 나누기',
  description: '하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.',
  participants: 56,
  duration: 30,
  progress: 0.2
}, {
  id: 3,
  title: '21일 명상 습관 만들기',
  description: '매일 10분씩 명상을 하고 느낀 점을 공유해보세요.',
  participants: 89,
  duration: 21,
  progress: 0.6
}];
var ChallengeScreen = function ChallengeScreen() {
  var theme = (0, _reactNativePaper.useTheme)();
  var handleJoinChallenge = function handleJoinChallenge(challengeId) {
    console.log('Joining challenge:', challengeId);
  };
  return (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_reactNativePaper.Title, {
      style: styles.title,
      children: "\uD604\uC7AC \uC9C4\uD589 \uC911\uC778 \uCC4C\uB9B0\uC9C0"
    }), challenges.map(function (challenge) {
      return (0, _jsxRuntime.jsxs)(_reactNativePaper.Card, {
        style: styles.card,
        children: [(0, _jsxRuntime.jsxs)(_reactNativePaper.Card.Content, {
          children: [(0, _jsxRuntime.jsx)(_reactNativePaper.Title, {
            children: challenge.title
          }), (0, _jsxRuntime.jsx)(_reactNativePaper.Paragraph, {
            children: challenge.description
          }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
            style: styles.progressContainer,
            children: [(0, _jsxRuntime.jsx)(_reactNativePaper.ProgressBar, {
              progress: challenge.progress,
              color: theme.colors.primary,
              style: styles.progressBar
            }), (0, _jsxRuntime.jsx)(_reactNativePaper.Paragraph, {
              children: `${Math.round(challenge.progress * 100)}% 완료`
            })]
          }), (0, _jsxRuntime.jsx)(_reactNativePaper.List.Item, {
            title: `참여자: ${challenge.participants}명`,
            left: function left(props) {
              return (0, _jsxRuntime.jsx)(_reactNativePaper.List.Icon, Object.assign({}, props, {
                icon: "account-group"
              }));
            }
          }), (0, _jsxRuntime.jsx)(_reactNativePaper.List.Item, {
            title: `기간: ${challenge.duration}일`,
            left: function left(props) {
              return (0, _jsxRuntime.jsx)(_reactNativePaper.List.Icon, Object.assign({}, props, {
                icon: "calendar-range"
              }));
            }
          })]
        }), (0, _jsxRuntime.jsx)(_reactNativePaper.Card.Actions, {
          children: (0, _jsxRuntime.jsx)(_reactNativePaper.Button, {
            onPress: function onPress() {
              return handleJoinChallenge(challenge.id);
            },
            children: "\uCC38\uC5EC\uD558\uAE30"
          })
        })]
      }, challenge.id);
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    padding: 16
  },
  title: {
    marginBottom: 16
  },
  card: {
    marginBottom: 16
  },
  progressContainer: {
    marginVertical: 8
  },
  progressBar: {
    marginVertical: 4
  }
});
var _default = exports.default = ChallengeScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,