{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_jsxRuntime","i18n","currentLocale","translations","ko","greeting","welcome","submit","cancel","date_format","en","t","key","locale","setLocale","LocalizedComponent","jsxs","View","children","jsx","Text","testID","Button","title","onPress","DateFormatComponent","_ref","date","formatDate","format","year","getFullYear","month","getMonth","toString","padStart","day","getDate","describe","test","_render","render","getByTestId","getByText","expect","props","toBe","toBeTruthy","_render2","testDate","Date","_render3","rerender"],"sources":["i18n.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Text, View, Button } from 'react-native';\r\n\r\n// 타입 정의 추가\r\ninterface Translations {\r\n  [key: string]: {\r\n    [key: string]: string;\r\n  };\r\n}\r\n\r\ninterface I18n {\r\n  currentLocale: string;\r\n  translations: Translations;\r\n  t(key: string): string;\r\n  setLocale(locale: string): void;\r\n}\r\n\r\n// 간단한 i18n 모듈 타입 정의와 함께 모킹\r\nconst i18n: I18n = {\r\n  currentLocale: 'ko',\r\n  translations: {\r\n    ko: {\r\n      greeting: '안녕하세요',\r\n      welcome: '환영합니다',\r\n      submit: '제출',\r\n      cancel: '취소',\r\n      date_format: 'YYYY년 MM월 DD일',\r\n    },\r\n    en: {\r\n      greeting: 'Hello',\r\n      welcome: 'Welcome',\r\n      submit: 'Submit',\r\n      cancel: 'Cancel',\r\n      date_format: 'MM/DD/YYYY',\r\n    },\r\n  },\r\n  t: function(key: string): string {\r\n    // 타입 체크 추가\r\n    const locale = this.currentLocale;\r\n    const translations = this.translations[locale] || {};\r\n    return translations[key] || key;\r\n  },\r\n  setLocale: function(locale: string): void {\r\n    if (this.translations[locale]) {\r\n      this.currentLocale = locale;\r\n    }\r\n  },\r\n};\r\n\r\n// 다국어 지원 컴포넌트\r\nconst LocalizedComponent = () => {\r\n  return (\r\n    <View>\r\n      <Text testID=\"greeting\">{i18n.t('greeting')}</Text>\r\n      <Text testID=\"welcome\">{i18n.t('welcome')}</Text>\r\n      <Button title={i18n.t('submit')} onPress={() => {}} testID=\"submit-button\" />\r\n      <Button title={i18n.t('cancel')} onPress={() => {}} testID=\"cancel-button\" />\r\n    </View>\r\n  );\r\n};\r\n\r\n// 날짜 형식 컴포넌트\r\nconst DateFormatComponent = ({ date }: { date: Date }) => {\r\n  const formatDate = (date: Date, format: string): string => {\r\n    // 실제 애플리케이션에서는 날짜 포맷팅 라이브러리 사용\r\n    // 여기서는 간단한 예시만 구현\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    \r\n    if (format === 'YYYY년 MM월 DD일') {\r\n      return `${year}년 ${month}월 ${day}일`;\r\n    } else {\r\n      return `${month}/${day}/${year}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Text testID=\"formatted-date\">\r\n      {formatDate(date, i18n.t('date_format'))}\r\n    </Text>\r\n  );\r\n};\r\n\r\ndescribe('로컬라이제이션 테스트', () => {\r\n  test('기본 언어(한국어)로 텍스트가 표시되어야 함', () => {\r\n    i18n.setLocale('ko');\r\n    const { getByTestId, getByText } = render(<LocalizedComponent />);\r\n    \r\n    expect(getByTestId('greeting').props.children).toBe('안녕하세요');\r\n    expect(getByTestId('welcome').props.children).toBe('환영합니다');\r\n    expect(getByText('제출')).toBeTruthy();\r\n    expect(getByText('취소')).toBeTruthy();\r\n  });\r\n\r\n  test('영어로 언어 변경 시 텍스트가 영어로 표시되어야 함', () => {\r\n    i18n.setLocale('en');\r\n    const { getByTestId, getByText } = render(<LocalizedComponent />);\r\n    \r\n    expect(getByTestId('greeting').props.children).toBe('Hello');\r\n    expect(getByTestId('welcome').props.children).toBe('Welcome');\r\n    expect(getByText('Submit')).toBeTruthy();\r\n    expect(getByText('Cancel')).toBeTruthy();\r\n  });\r\n\r\n  test('날짜 형식이 현재 언어에 맞게 표시되어야 함', () => {\r\n    const testDate = new Date(2023, 0, 15); // 2023년 1월 15일\r\n    \r\n    // 한국어 날짜 형식 테스트\r\n    i18n.setLocale('ko');\r\n    let { getByTestId, rerender } = render(<DateFormatComponent date={testDate} />);\r\n    expect(getByTestId('formatted-date').props.children).toBe('2023년 01월 15일');\r\n    \r\n    // 영어 날짜 형식 테스트\r\n    i18n.setLocale('en');\r\n    rerender(<DateFormatComponent date={testDate} />);\r\n    expect(getByTestId('formatted-date').props.children).toBe('01/15/2023');\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}