{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNative2","_AuthLayout","_jsxRuntime","global","clearImmediate","jest","fn","setImmediate","describe","it","_render","render","jsx","default","children","Text","getByText","expect","toBeTruthy","_render2","loading","getByTestId","queryByText","toBeNull","_render3","title","footer","_render4","imageBackground","_render5","logoVisible","queryByTestId","_render6"],"sources":["AuthLayout.test.tsx"],"sourcesContent":["// tests/layouts/AuthLayout.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Text } from 'react-native';\r\nimport AuthLayout from '../../src/layouts/AuthLayout';\r\n\r\n// 테스트 환경을 위한 polyfill 설정\r\nif (typeof global.clearImmediate === 'undefined') {\r\n  global.clearImmediate = jest.fn();\r\n}\r\n\r\nif (typeof global.setImmediate === 'undefined') {\r\n  global.setImmediate = jest.fn();\r\n}\r\n\r\ndescribe('AuthLayout', () => {\r\n  it('renders children correctly', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('shows loading indicator when loading is true', () => {\r\n    const { getByTestId, queryByText } = render(\r\n      <AuthLayout loading={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('loading-indicator')).toBeTruthy();\r\n    expect(queryByText('인증 내용')).toBeNull();\r\n  });\r\n  \r\n  it('renders title and footer when provided', () => {\r\n    const { getByText } = render(\r\n      <AuthLayout\r\n        title={<Text>인증 제목</Text>}\r\n        footer={<Text>인증 푸터</Text>}\r\n      >\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByText('인증 제목')).toBeTruthy();\r\n    expect(getByText('인증 푸터')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('renders with background image when imageBackground is true', () => {\r\n    const { getByTestId, getByText } = render(\r\n      <AuthLayout imageBackground={true}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(getByTestId('image-background')).toBeTruthy();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('does not render logo when logoVisible is false', () => {\r\n    const { queryByTestId, getByText } = render(\r\n      <AuthLayout logoVisible={false}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    // 로고 이미지가 렌더링되지 않았는지 확인\r\n    expect(queryByTestId('logo-image')).toBeNull();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('renders with default background when imageBackground is false', () => {\r\n    const { queryByTestId, getByText } = render(\r\n      <AuthLayout imageBackground={false}>\r\n        <Text>인증 내용</Text>\r\n      </AuthLayout>\r\n    );\r\n    \r\n    expect(queryByTestId('image-background')).toBeNull();\r\n    expect(getByText('인증 내용')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}