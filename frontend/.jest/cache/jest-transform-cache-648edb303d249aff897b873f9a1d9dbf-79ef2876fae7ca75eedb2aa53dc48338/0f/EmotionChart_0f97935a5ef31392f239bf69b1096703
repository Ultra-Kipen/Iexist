27a9c403c8d58c240c1f682e9b403b18
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativeChartKit = require("react-native-chart-kit");
var _jsxRuntime = require("react/jsx-runtime");
var Dimensions = require('react-native').Dimensions;
var EmotionChart = function EmotionChart(_ref) {
  var data = _ref.data,
    timeRange = _ref.timeRange,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? 'line' : _ref$type,
    _ref$height = _ref.height,
    height = _ref$height === void 0 ? 220 : _ref$height;
  var screenWidth = Dimensions.get('window').width - 32;
  if (!data || data.length === 0) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.emptyContainer,
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.emptyText,
        children: "\uAC10\uC815 \uAE30\uB85D\uC774 \uC5C6\uC2B5\uB2C8\uB2E4."
      })
    });
  }
  if (type === 'pie') {
    var emotionCounts = {};
    var emotionColors = {};
    data.forEach(function (item) {
      if (emotionCounts[item.emotionName]) {
        emotionCounts[item.emotionName] += 1;
      } else {
        emotionCounts[item.emotionName] = 1;
        emotionColors[item.emotionName] = item.color;
      }
    });
    var pieData = Object.keys(emotionCounts).map(function (name) {
      return {
        name: name,
        count: emotionCounts[name],
        color: emotionColors[name] || '#ccc',
        legendFontColor: '#7F7F7F',
        legendFontSize: 12
      };
    });
    return (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.container,
      children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {
        style: styles.title,
        children: [getChartTitle(timeRange), " \uAC10\uC815 \uBD84\uD3EC"]
      }), (0, _jsxRuntime.jsx)(_reactNativeChartKit.PieChart, {
        data: pieData,
        width: screenWidth,
        height: height,
        chartConfig: chartConfig,
        accessor: "count",
        backgroundColor: "transparent",
        paddingLeft: "15",
        absolute: true
      })]
    });
  }
  var dates = (0, _toConsumableArray2.default)(new Set(data.map(function (item) {
    return item.date;
  }))).sort();
  var emotions = (0, _toConsumableArray2.default)(new Set(data.map(function (item) {
    return item.emotionName;
  })));
  var datasets = emotions.map(function (emotion) {
    var _emotionData$;
    var emotionData = data.filter(function (item) {
      return item.emotionName === emotion;
    });
    var _color = ((_emotionData$ = emotionData[0]) == null ? void 0 : _emotionData$.color) || '#ccc';
    return {
      data: dates.map(function (date) {
        var matchingItem = emotionData.find(function (item) {
          return item.date === date;
        });
        return matchingItem ? matchingItem.count : 0;
      }),
      color: function color() {
        return _color;
      },
      strokeWidth: 2
    };
  });
  var lineData = {
    labels: dates,
    datasets: datasets,
    legend: emotions
  };
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {
      style: styles.title,
      children: [getChartTitle(timeRange), " \uAC10\uC815 \uBCC0\uD654"]
    }), (0, _jsxRuntime.jsx)(_reactNativeChartKit.LineChart, {
      data: lineData,
      width: screenWidth,
      height: height,
      chartConfig: chartConfig,
      bezier: true,
      style: styles.chart
    })]
  });
};
var getChartTitle = function getChartTitle(timeRange) {
  switch (timeRange) {
    case 'daily':
      return '일간';
    case 'weekly':
      return '주간';
    case 'monthly':
      return '월간';
    case 'yearly':
      return '연간';
    default:
      return '';
  }
};
var chartConfig = {
  backgroundGradientFrom: '#ffffff',
  backgroundGradientTo: '#ffffff',
  color: function color() {
    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
    return `rgba(74, 144, 226, ${opacity})`;
  },
  strokeWidth: 2,
  decimalPlaces: 0,
  labelColor: function labelColor() {
    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
    return `rgba(102, 102, 102, ${opacity})`;
  },
  style: {
    borderRadius: 16
  },
  propsForDots: {
    r: '5',
    strokeWidth: '1',
    stroke: '#ffffff'
  }
};
var styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: '#ffffff',
    borderRadius: 12,
    padding: 16,
    marginVertical: 8,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 1
    },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    elevation: 2
  },
  title: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 16,
    color: '#333333',
    textAlign: 'center'
  },
  chart: {
    marginVertical: 8,
    borderRadius: 8
  },
  emptyContainer: {
    height: 200,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#ffffff',
    borderRadius: 12,
    marginVertical: 8
  },
  emptyText: {
    color: '#999999',
    fontSize: 14
  }
});
var _default = exports.default = EmotionChart;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9yZWFjdE5hdGl2ZUNoYXJ0S2l0IiwiX2pzeFJ1bnRpbWUiLCJEaW1lbnNpb25zIiwiRW1vdGlvbkNoYXJ0IiwiX3JlZiIsImRhdGEiLCJ0aW1lUmFuZ2UiLCJfcmVmJHR5cGUiLCJ0eXBlIiwiX3JlZiRoZWlnaHQiLCJoZWlnaHQiLCJzY3JlZW5XaWR0aCIsImdldCIsIndpZHRoIiwibGVuZ3RoIiwianN4IiwiVmlldyIsInN0eWxlIiwic3R5bGVzIiwiZW1wdHlDb250YWluZXIiLCJjaGlsZHJlbiIsIlRleHQiLCJlbXB0eVRleHQiLCJlbW90aW9uQ291bnRzIiwiZW1vdGlvbkNvbG9ycyIsImZvckVhY2giLCJpdGVtIiwiZW1vdGlvbk5hbWUiLCJjb2xvciIsInBpZURhdGEiLCJPYmplY3QiLCJrZXlzIiwibWFwIiwibmFtZSIsImNvdW50IiwibGVnZW5kRm9udENvbG9yIiwibGVnZW5kRm9udFNpemUiLCJqc3hzIiwiY29udGFpbmVyIiwidGl0bGUiLCJnZXRDaGFydFRpdGxlIiwiUGllQ2hhcnQiLCJjaGFydENvbmZpZyIsImFjY2Vzc29yIiwiYmFja2dyb3VuZENvbG9yIiwicGFkZGluZ0xlZnQiLCJhYnNvbHV0ZSIsImRhdGVzIiwiX3RvQ29uc3VtYWJsZUFycmF5MiIsImRlZmF1bHQiLCJTZXQiLCJkYXRlIiwic29ydCIsImVtb3Rpb25zIiwiZGF0YXNldHMiLCJlbW90aW9uIiwiX2Vtb3Rpb25EYXRhJCIsImVtb3Rpb25EYXRhIiwiZmlsdGVyIiwibWF0Y2hpbmdJdGVtIiwiZmluZCIsInN0cm9rZVdpZHRoIiwibGluZURhdGEiLCJsYWJlbHMiLCJsZWdlbmQiLCJMaW5lQ2hhcnQiLCJiZXppZXIiLCJjaGFydCIsImJhY2tncm91bmRHcmFkaWVudEZyb20iLCJiYWNrZ3JvdW5kR3JhZGllbnRUbyIsIm9wYWNpdHkiLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJkZWNpbWFsUGxhY2VzIiwibGFiZWxDb2xvciIsImJvcmRlclJhZGl1cyIsInByb3BzRm9yRG90cyIsInIiLCJzdHJva2UiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwicGFkZGluZyIsIm1hcmdpblZlcnRpY2FsIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXQiLCJzaGFkb3dPcGFjaXR5Iiwic2hhZG93UmFkaXVzIiwiZWxldmF0aW9uIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwibWFyZ2luQm90dG9tIiwidGV4dEFsaWduIiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiRW1vdGlvbkNoYXJ0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHsgTGluZUNoYXJ0LCBQaWVDaGFydCB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1jaGFydC1raXQnO1xyXG5cclxuLy8gcmVxdWlyZeuhnCBEaW1lbnNpb25zIOqwgOyguOyYpOq4sFxyXG5jb25zdCBEaW1lbnNpb25zID0gcmVxdWlyZSgncmVhY3QtbmF0aXZlJykuRGltZW5zaW9ucztcclxuXHJcbmludGVyZmFjZSBFbW90aW9uRGF0YSB7XHJcbiAgY291bnQ6IG51bWJlcjtcclxuICBkYXRlOiBzdHJpbmc7XHJcbiAgZW1vdGlvbklkOiBudW1iZXI7XHJcbiAgZW1vdGlvbk5hbWU6IHN0cmluZztcclxuICBjb2xvcjogc3RyaW5nO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgRW1vdGlvbkNoYXJ0UHJvcHMge1xyXG4gIGRhdGE6IEVtb3Rpb25EYXRhW107XHJcbiAgdGltZVJhbmdlOiAnZGFpbHknIHwgJ3dlZWtseScgfCAnbW9udGhseScgfCAneWVhcmx5JztcclxuICB0eXBlPzogJ2xpbmUnIHwgJ3BpZSc7XHJcbiAgaGVpZ2h0PzogbnVtYmVyO1xyXG59XHJcblxyXG5jb25zdCBFbW90aW9uQ2hhcnQ6IFJlYWN0LkZDPEVtb3Rpb25DaGFydFByb3BzPiA9ICh7XHJcbiAgZGF0YSxcclxuICB0aW1lUmFuZ2UsXHJcbiAgdHlwZSA9ICdsaW5lJyxcclxuICBoZWlnaHQgPSAyMjAsXHJcbn0pID0+IHtcclxuICAvLyBEaW1lbnNpb25zIEFQSSDsgqzsmqkgKGFzIO2CpOybjOuTnOuhnCDsnbTrpoQg67OA6rK9KVxyXG4gIGNvbnN0IHNjcmVlbldpZHRoID0gRGltZW5zaW9ucy5nZXQoJ3dpbmRvdycpLndpZHRoIC0gMzI7XHJcbiAgXHJcbiAgaWYgKCFkYXRhIHx8IGRhdGEubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmVtcHR5Q29udGFpbmVyfT5cclxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmVtcHR5VGV4dH0+6rCQ7KCVIOq4sOuhneydtCDsl4bsirXri4jri6QuPC9UZXh0PlxyXG4gICAgICA8L1ZpZXc+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGUgPT09ICdwaWUnKSB7XHJcbiAgICAvLyDqsJDsoJXrs4Qg67aE7Y+s66W8IOychO2VnCDtjIzsnbQg7LCo7Yq4IOuNsOydtO2EsCDqsIDqs7VcclxuICAgIGNvbnN0IGVtb3Rpb25Db3VudHM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fTtcclxuICAgIGNvbnN0IGVtb3Rpb25Db2xvcnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7fTtcclxuICAgIFxyXG4gICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICBpZiAoZW1vdGlvbkNvdW50c1tpdGVtLmVtb3Rpb25OYW1lXSkge1xyXG4gICAgICAgIGVtb3Rpb25Db3VudHNbaXRlbS5lbW90aW9uTmFtZV0gKz0gMTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBlbW90aW9uQ291bnRzW2l0ZW0uZW1vdGlvbk5hbWVdID0gMTtcclxuICAgICAgICBlbW90aW9uQ29sb3JzW2l0ZW0uZW1vdGlvbk5hbWVdID0gaXRlbS5jb2xvcjtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgcGllRGF0YSA9IE9iamVjdC5rZXlzKGVtb3Rpb25Db3VudHMpLm1hcChuYW1lID0+ICh7XHJcbiAgICAgIG5hbWUsXHJcbiAgICAgIGNvdW50OiBlbW90aW9uQ291bnRzW25hbWVdLFxyXG4gICAgICBjb2xvcjogZW1vdGlvbkNvbG9yc1tuYW1lXSB8fCAnI2NjYycsXHJcbiAgICAgIGxlZ2VuZEZvbnRDb2xvcjogJyM3RjdGN0YnLFxyXG4gICAgICBsZWdlbmRGb250U2l6ZTogMTIsXHJcbiAgICB9KSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxyXG4gICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGl0bGV9PntnZXRDaGFydFRpdGxlKHRpbWVSYW5nZSl9IOqwkOyglSDrtoTtj6w8L1RleHQ+XHJcbiAgICAgICAgPFBpZUNoYXJ0XHJcbiAgICAgICAgICBkYXRhPXtwaWVEYXRhfVxyXG4gICAgICAgICAgd2lkdGg9e3NjcmVlbldpZHRofVxyXG4gICAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XHJcbiAgICAgICAgICBjaGFydENvbmZpZz17Y2hhcnRDb25maWd9XHJcbiAgICAgICAgICBhY2Nlc3Nvcj1cImNvdW50XCJcclxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcj1cInRyYW5zcGFyZW50XCJcclxuICAgICAgICAgIHBhZGRpbmdMZWZ0PVwiMTVcIlxyXG4gICAgICAgICAgYWJzb2x1dGVcclxuICAgICAgICAvPlxyXG4gICAgICA8L1ZpZXc+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLy8g65287J24IOywqO2KuOulvCDsnITtlZwg642w7J207YSwIOqwgOqztVxyXG4gIGNvbnN0IGRhdGVzID0gWy4uLm5ldyBTZXQoZGF0YS5tYXAoaXRlbSA9PiBpdGVtLmRhdGUpKV0uc29ydCgpO1xyXG4gIGNvbnN0IGVtb3Rpb25zID0gWy4uLm5ldyBTZXQoZGF0YS5tYXAoaXRlbSA9PiBpdGVtLmVtb3Rpb25OYW1lKSldO1xyXG4gIFxyXG4gIGNvbnN0IGRhdGFzZXRzID0gZW1vdGlvbnMubWFwKGVtb3Rpb24gPT4ge1xyXG4gICAgY29uc3QgZW1vdGlvbkRhdGEgPSBkYXRhLmZpbHRlcihpdGVtID0+IGl0ZW0uZW1vdGlvbk5hbWUgPT09IGVtb3Rpb24pO1xyXG4gICAgY29uc3QgY29sb3IgPSBlbW90aW9uRGF0YVswXT8uY29sb3IgfHwgJyNjY2MnO1xyXG4gICAgXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBkYXRhOiBkYXRlcy5tYXAoZGF0ZSA9PiB7XHJcbiAgICAgICAgY29uc3QgbWF0Y2hpbmdJdGVtID0gZW1vdGlvbkRhdGEuZmluZChpdGVtID0+IGl0ZW0uZGF0ZSA9PT0gZGF0ZSk7XHJcbiAgICAgICAgcmV0dXJuIG1hdGNoaW5nSXRlbSA/IG1hdGNoaW5nSXRlbS5jb3VudCA6IDA7XHJcbiAgICAgIH0pLFxyXG4gICAgICBjb2xvcjogKCkgPT4gY29sb3IsXHJcbiAgICAgIHN0cm9rZVdpZHRoOiAyLFxyXG4gICAgfTtcclxuICB9KTtcclxuXHJcbiAgY29uc3QgbGluZURhdGEgPSB7XHJcbiAgICBsYWJlbHM6IGRhdGVzLFxyXG4gICAgZGF0YXNldHMsXHJcbiAgICBsZWdlbmQ6IGVtb3Rpb25zLFxyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XHJcbiAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGl0bGV9PntnZXRDaGFydFRpdGxlKHRpbWVSYW5nZSl9IOqwkOyglSDrs4DtmZQ8L1RleHQ+XHJcbiAgICAgIDxMaW5lQ2hhcnRcclxuICAgICAgICBkYXRhPXtsaW5lRGF0YX1cclxuICAgICAgICB3aWR0aD17c2NyZWVuV2lkdGh9XHJcbiAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XHJcbiAgICAgICAgY2hhcnRDb25maWc9e2NoYXJ0Q29uZmlnfVxyXG4gICAgICAgIGJlemllclxyXG4gICAgICAgIHN0eWxlPXtzdHlsZXMuY2hhcnR9XHJcbiAgICAgIC8+XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmNvbnN0IGdldENoYXJ0VGl0bGUgPSAodGltZVJhbmdlOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xyXG4gIHN3aXRjaCAodGltZVJhbmdlKSB7XHJcbiAgICBjYXNlICdkYWlseSc6XHJcbiAgICAgIHJldHVybiAn7J286rCEJztcclxuICAgIGNhc2UgJ3dlZWtseSc6XHJcbiAgICAgIHJldHVybiAn7KO86rCEJztcclxuICAgIGNhc2UgJ21vbnRobHknOlxyXG4gICAgICByZXR1cm4gJ+yblOqwhCc7XHJcbiAgICBjYXNlICd5ZWFybHknOlxyXG4gICAgICByZXR1cm4gJ+yXsOqwhCc7XHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZXR1cm4gJyc7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgY2hhcnRDb25maWcgPSB7XHJcbiAgYmFja2dyb3VuZEdyYWRpZW50RnJvbTogJyNmZmZmZmYnLFxyXG4gIGJhY2tncm91bmRHcmFkaWVudFRvOiAnI2ZmZmZmZicsXHJcbiAgY29sb3I6IChvcGFjaXR5ID0gMSkgPT4gYHJnYmEoNzQsIDE0NCwgMjI2LCAke29wYWNpdHl9KWAsXHJcbiAgc3Ryb2tlV2lkdGg6IDIsXHJcbiAgZGVjaW1hbFBsYWNlczogMCxcclxuICBsYWJlbENvbG9yOiAob3BhY2l0eSA9IDEpID0+IGByZ2JhKDEwMiwgMTAyLCAxMDIsICR7b3BhY2l0eX0pYCxcclxuICBzdHlsZToge1xyXG4gICAgYm9yZGVyUmFkaXVzOiAxNixcclxuICB9LFxyXG4gIHByb3BzRm9yRG90czoge1xyXG4gICAgcjogJzUnLFxyXG4gICAgc3Ryb2tlV2lkdGg6ICcxJyxcclxuICAgIHN0cm9rZTogJyNmZmZmZmYnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgY29udGFpbmVyOiB7XHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZmZmZmZmJyxcclxuICAgIGJvcmRlclJhZGl1czogMTIsXHJcbiAgICBwYWRkaW5nOiAxNixcclxuICAgIG1hcmdpblZlcnRpY2FsOiA4LFxyXG4gICAgc2hhZG93Q29sb3I6ICcjMDAwJyxcclxuICAgIHNoYWRvd09mZnNldDogeyB3aWR0aDogMCwgaGVpZ2h0OiAxIH0sXHJcbiAgICBzaGFkb3dPcGFjaXR5OiAwLjEsXHJcbiAgICBzaGFkb3dSYWRpdXM6IDIsXHJcbiAgICBlbGV2YXRpb246IDIsXHJcbiAgfSxcclxuICB0aXRsZToge1xyXG4gICAgZm9udFNpemU6IDE2LFxyXG4gICAgZm9udFdlaWdodDogJzYwMCcsXHJcbiAgICBtYXJnaW5Cb3R0b206IDE2LFxyXG4gICAgY29sb3I6ICcjMzMzMzMzJyxcclxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgfSxcclxuICBjaGFydDoge1xyXG4gICAgbWFyZ2luVmVydGljYWw6IDgsXHJcbiAgICBib3JkZXJSYWRpdXM6IDgsXHJcbiAgfSxcclxuICBlbXB0eUNvbnRhaW5lcjoge1xyXG4gICAgaGVpZ2h0OiAyMDAsXHJcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgIGJhY2tncm91bmRDb2xvcjogJyNmZmZmZmYnLFxyXG4gICAgYm9yZGVyUmFkaXVzOiAxMixcclxuICAgIG1hcmdpblZlcnRpY2FsOiA4LFxyXG4gIH0sXHJcbiAgZW1wdHlUZXh0OiB7XHJcbiAgICBjb2xvcjogJyM5OTk5OTknLFxyXG4gICAgZm9udFNpemU6IDE0LFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRW1vdGlvbkNoYXJ0OyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEs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