{"version":3,"names":["_format","require","describe","it","expect","formatNumber","toBe","formatFileSize","longText","truncateText","shortText","formatPhoneNumber","formatCurrency","capitalize"],"sources":["format.test.ts"],"sourcesContent":["import { \r\n    formatNumber, \r\n    formatFileSize, \r\n    truncateText, \r\n    formatPhoneNumber,\r\n    formatCurrency,\r\n    capitalize\r\n  } from '../../../src/utils/format';\r\n  \r\n  describe('Format utils', () => {\r\n    describe('formatNumber', () => {\r\n      it('should format numbers correctly', () => {\r\n        expect(formatNumber(1000)).toBe('1,000');\r\n        expect(formatNumber(1000000)).toBe('1,000,000');\r\n        expect(formatNumber(1234.56)).toBe('1,234.56');\r\n      });\r\n  \r\n      it('should round to specified decimal places', () => {\r\n        expect(formatNumber(1234.5678, 2)).toBe('1,234.57');\r\n        expect(formatNumber(1234.5678, 0)).toBe('1,235');\r\n      });\r\n    });\r\n  \r\n    describe('formatFileSize', () => {\r\n      it('should format file sizes in bytes correctly', () => {\r\n        expect(formatFileSize(500)).toBe('500 B');\r\n        expect(formatFileSize(1024)).toBe('1.0 KB');\r\n        expect(formatFileSize(1048576)).toBe('1.0 MB');\r\n        expect(formatFileSize(1073741824)).toBe('1.0 GB');\r\n      });\r\n  \r\n      it('should handle decimal places correctly', () => {\r\n        expect(formatFileSize(1536, 1)).toBe('1.5 KB');\r\n        expect(formatFileSize(1536, 2)).toBe('1.50 KB');\r\n      });\r\n    });\r\n  \r\n    describe('truncateText', () => {\r\n      it('should truncate text to specified length', () => {\r\n        const longText = '이 텍스트는 너무 길어서 잘려야 합니다.';\r\n        expect(truncateText(longText, 10)).toBe('이 텍스트는...');\r\n      });\r\n  \r\n      it('should use custom ellipsis if provided', () => {\r\n        const longText = '이 텍스트는 너무 길어서 잘려야 합니다.';\r\n        expect(truncateText(longText, 10, '(...)')).toBe('이 텍스트는(...)');\r\n      });\r\n  \r\n      it('should not truncate text shorter than limit', () => {\r\n        const shortText = '짧은 텍스트';\r\n        expect(truncateText(shortText, 20)).toBe('짧은 텍스트');\r\n      });\r\n    });\r\n  \r\n    describe('formatPhoneNumber', () => {\r\n      it('should format Korean phone numbers correctly', () => {\r\n        expect(formatPhoneNumber('01012345678')).toBe('010-1234-5678');\r\n        expect(formatPhoneNumber('0212345678')).toBe('02-1234-5678');\r\n        expect(formatPhoneNumber('021234567')).toBe('02-123-4567');\r\n      });\r\n  \r\n      it('should handle numbers with existing hyphens', () => {\r\n        expect(formatPhoneNumber('010-1234-5678')).toBe('010-1234-5678');\r\n      });\r\n  \r\n      it('should handle invalid phone numbers', () => {\r\n        expect(formatPhoneNumber('123')).toBe('123');\r\n        expect(formatPhoneNumber('')).toBe('');\r\n      });\r\n    });\r\n  \r\n    describe('formatCurrency', () => {\r\n      it('should format currency amounts correctly', () => {\r\n        expect(formatCurrency(1000)).toBe('₩1,000');\r\n        expect(formatCurrency(1234.56)).toBe('₩1,235');\r\n      });\r\n  \r\n      it('should use specified currency symbol', () => {\r\n        expect(formatCurrency(1000, '$')).toBe('$1,000');\r\n        expect(formatCurrency(1000, '€')).toBe('€1,000');\r\n      });\r\n  \r\n      it('should handle decimal places correctly', () => {\r\n        expect(formatCurrency(1234.56, '₩', 2)).toBe('₩1,234.56');\r\n      });\r\n    });\r\n  \r\n    describe('capitalize', () => {\r\n      it('should capitalize first letter of a string', () => {\r\n        expect(capitalize('hello')).toBe('Hello');\r\n        expect(capitalize('world')).toBe('World');\r\n      });\r\n  \r\n      it('should handle empty strings', () => {\r\n        expect(capitalize('')).toBe('');\r\n      });\r\n  \r\n      it('should handle already capitalized strings', () => {\r\n        expect(capitalize('Hello')).toBe('Hello');\r\n      });\r\n    });\r\n  });"],"mappings":"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","ignoreList":[]}