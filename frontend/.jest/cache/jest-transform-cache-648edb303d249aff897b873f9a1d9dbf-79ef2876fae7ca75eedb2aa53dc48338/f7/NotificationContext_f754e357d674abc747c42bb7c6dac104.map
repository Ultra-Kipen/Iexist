{"version":3,"names":["_react","_interopRequireWildcard","require","_notificationService","_interopRequireDefault","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","NotificationContext","exports","createContext","undefined","useNotification","context","useContext","Error","NotificationProvider","_ref","children","_useState","useState","_useState2","_slicedToArray2","notifications","setNotifications","_useState3","_useState4","unreadCount","setUnreadCount","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","intervalRef","useRef","fetchNotifications","_ref2","_asyncToGenerator2","response","notificationService","getNotifications","data","notificationsData","Array","isArray","map","item","id","user_id","content","notification_type","related_id","is_read","created_at","unreadItems","filter","length","err","console","apply","arguments","markAsRead","_ref3","notificationId","_x","markAllAsRead","_ref4","deleteNotification","_ref5","_x2","useEffect","process","env","NODE_ENV","current","setInterval","clearInterval","jsx","Provider","value"],"sources":["NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode, useRef } from 'react';\r\nimport notificationService from '../services/api/notificationService';\r\n\r\ninterface Notification {\r\n  id: number;\r\n  user_id: number;\r\n  content: string;\r\n  notification_type: 'like' | 'comment' | 'challenge' | 'system';\r\n  related_id?: number;\r\n  is_read: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface NotificationContextType {\r\n  notifications: Notification[];\r\n  unreadCount: number;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  fetchNotifications: () => Promise<void>;\r\n  markAsRead: (notificationId: number) => Promise<void>;\r\n  markAllAsRead: () => Promise<void>;\r\n  deleteNotification: (notificationId: number) => Promise<void>;\r\n}\r\n\r\nexport const NotificationContext = createContext<NotificationContextType | undefined>(undefined);\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (context === undefined) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface NotificationProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const [unreadCount, setUnreadCount] = useState<number>(0);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const response = await notificationService.getNotifications();\r\n      if (response && response.data) {\r\n        // 명시적 타입 지정\r\n        const notificationsData: Notification[] = Array.isArray(response.data) \r\n        ? response.data.map((item: { id: any; user_id: any; content: any; notification_type: any; related_id: any; is_read: any; created_at: any; }) => ({\r\n            id: item.id,\r\n            user_id: item.user_id,\r\n            content: item.content,\r\n            notification_type: item.notification_type,\r\n            related_id: item.related_id,\r\n            is_read: !!item.is_read,\r\n            created_at: item.created_at\r\n          }))\r\n        : [];\r\n        setNotifications(notificationsData);\r\n        // 타입 안전한 방식으로 필터링\r\n        const unreadItems = notificationsData.filter(function(item) {\r\n          return item.is_read === false;\r\n        });\r\n        setUnreadCount(unreadItems.length);\r\n      }\r\n    } catch (err) {\r\n      setError('알림을 불러오는데 실패했습니다.');\r\n      console.error('알림 불러오기 오류:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const markAsRead = async (notificationId: number) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      await notificationService.markAsRead(notificationId);\r\n      await fetchNotifications();\r\n    } catch (err) {\r\n      setError('알림을 읽음 처리하는데 실패했습니다.');\r\n      console.error('알림 읽음 처리 오류:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      await notificationService.markAllAsRead();\r\n      await fetchNotifications();\r\n    } catch (err) {\r\n      setError('모든 알림을 읽음 처리하는데 실패했습니다.');\r\n      console.error('모든 알림 읽음 처리 오류:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteNotification = async (notificationId: number) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      await notificationService.deleteNotification(notificationId);\r\n      setNotifications(notifications.filter(n => n.id !== notificationId));\r\n      await fetchNotifications();\r\n    } catch (err) {\r\n      setError('알림을 삭제하는데 실패했습니다.');\r\n      console.error('알림 삭제 오류:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 초기 fetch\r\n    fetchNotifications();\r\n    \r\n    // 주기적으로 알림 업데이트 (예: 30초마다)\r\n    // 테스트 환경에서는 interval 생성 방지\r\n    if (process.env.NODE_ENV !== 'test') {\r\n      intervalRef.current = setInterval(() => {\r\n        fetchNotifications();\r\n      }, 30000);\r\n    }\r\n    \r\n    // 컴포넌트 언마운트 시 interval 정리\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{\r\n        notifications,\r\n        unreadCount,\r\n        isLoading,\r\n        error,\r\n        fetchNotifications,\r\n        markAsRead,\r\n        markAllAsRead,\r\n        deleteNotification,\r\n      }}\r\n    >\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]}