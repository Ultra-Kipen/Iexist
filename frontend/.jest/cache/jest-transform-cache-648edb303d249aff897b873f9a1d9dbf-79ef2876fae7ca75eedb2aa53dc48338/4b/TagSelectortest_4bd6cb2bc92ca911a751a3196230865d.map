{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_TagSelector","_jsxRuntime","mockTags","id","name","describe","it","_render","render","jsx","default","tags","selectedTags","onTagSelect","jest","fn","getByText","expect","toBeTruthy","_selectedTag$parent","_tagContainer$props","_render2","selectedTag","tagContainer","parent","props","style","toMatchObject","backgroundColor","borderColor","_textElement$parent","mockOnTagSelect","_render3","textElement","tagElement","fireEvent","press","toHaveBeenCalledWith","mockOnTagCreate","_render4","allowCreation","onTagCreate","getByPlaceholderText","_disabledTextElement$","_render5","maxSelected","disabledTextElement","disabledTag","_disabledTag$props","opacity"],"sources":["TagSelector.test.tsx"],"sourcesContent":["// __TESTS__/components/TagSelector.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { RenderAPI } from '@testing-library/react-native';\r\nimport TagSelector from '../../src/components/TagSelector';\r\n\r\nconst mockTags = [\r\n  { id: 1, name: '일상' },\r\n  { id: 2, name: '감정' },\r\n  { id: 3, name: '고민' }\r\n];\r\n\r\ndescribe('TagSelector 컴포넌트', () => {\r\n  it('태그 목록이 올바르게 렌더링되어야 합니다', () => {\r\n    const { getByText } = render(\r\n      <TagSelector\r\n        tags={mockTags}\r\n        selectedTags={[]}\r\n        onTagSelect={jest.fn()}\r\n      />\r\n    );\r\n    \r\n    expect(getByText('일상')).toBeTruthy();\r\n    expect(getByText('감정')).toBeTruthy();\r\n    expect(getByText('고민')).toBeTruthy();\r\n  });\r\n\r\n  it('선택된 태그는 시각적으로 구분되어야 합니다', () => {\r\n    const { getByText } = render(\r\n      <TagSelector\r\n        tags={mockTags}\r\n        selectedTags={[1]}\r\n        onTagSelect={jest.fn()}\r\n      />\r\n    );\r\n    \r\n    // 태그 컨테이너 스타일 확인 - any 타입 사용하여 TypeScript 오류 방지\r\n    const selectedTag: any = getByText('일상');\r\n    const tagContainer = selectedTag.parent?.parent;\r\n    expect(tagContainer?.props?.style).toMatchObject({ \r\n      backgroundColor: '#E1EFF9',\r\n      borderColor: '#4A90E2' \r\n    });\r\n  });\r\n\r\n  it('태그를 클릭하면 onTagSelect 콜백이 호출되어야 합니다', () => {\r\n    const mockOnTagSelect = jest.fn();\r\n    const { getByText } = render(\r\n      <TagSelector\r\n        tags={mockTags}\r\n        selectedTags={[]}\r\n        onTagSelect={mockOnTagSelect}\r\n      />\r\n    );\r\n    \r\n    // 상위 TouchableOpacity 요소 찾기 - any 타입 사용\r\n    const textElement: any = getByText('감정');\r\n    const tagElement = textElement.parent?.parent;\r\n    \r\n    // null 체크 추가\r\n    if (tagElement) {\r\n      fireEvent.press(tagElement);\r\n      expect(mockOnTagSelect).toHaveBeenCalledWith(2);\r\n    }\r\n  });\r\n\r\n  it('allowCreation=true일 때 태그 생성 UI가 표시되어야 합니다', () => {\r\n    const mockOnTagCreate = jest.fn();\r\n    const { getByPlaceholderText, getByText } = render(\r\n      <TagSelector\r\n        tags={mockTags}\r\n        selectedTags={[]}\r\n        onTagSelect={jest.fn()}\r\n        allowCreation={true}\r\n        onTagCreate={mockOnTagCreate}\r\n      />\r\n    );\r\n    \r\n    // 입력 필드와 추가 버튼 확인\r\n    expect(getByPlaceholderText('새 태그 입력')).toBeTruthy();\r\n    expect(getByText('추가')).toBeTruthy();\r\n  });\r\n\r\n  it('maxSelected를 초과하는 태그를 선택하려 하면 disabled 상태가 되어야 합니다', () => {\r\n    const { getByText } = render(\r\n      <TagSelector\r\n        tags={mockTags}\r\n        selectedTags={[1, 2]}\r\n        onTagSelect={jest.fn()}\r\n        maxSelected={2}\r\n      />\r\n    );\r\n    \r\n    // disabled 태그 스타일 확인 - any 타입 사용\r\n    const disabledTextElement: any = getByText('고민');\r\n    const disabledTag = disabledTextElement.parent?.parent;\r\n    \r\n    // null 체크 추가\r\n    if (disabledTag) {\r\n      expect(disabledTag.props?.style).toMatchObject({ \r\n        opacity: 0.5 \r\n      });\r\n    }\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}