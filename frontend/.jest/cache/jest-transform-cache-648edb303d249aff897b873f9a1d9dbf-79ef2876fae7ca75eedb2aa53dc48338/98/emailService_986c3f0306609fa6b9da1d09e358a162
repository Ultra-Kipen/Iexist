a6b0a396c6848bfbd6573dc130da9f66
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _client = _interopRequireDefault(require("./client"));
var emailService = {
  requestPasswordReset: function () {
    var _requestPasswordReset = (0, _asyncToGenerator2.default)(function* (email) {
      return _client.default.post('/auth/forgot-password', {
        email: email
      });
    });
    function requestPasswordReset(_x) {
      return _requestPasswordReset.apply(this, arguments);
    }
    return requestPasswordReset;
  }(),
  resetPassword: function () {
    var _resetPassword = (0, _asyncToGenerator2.default)(function* (token, newPassword) {
      return _client.default.post('/auth/reset-password', {
        token: token,
        new_password: newPassword
      });
    });
    function resetPassword(_x2, _x3) {
      return _resetPassword.apply(this, arguments);
    }
    return resetPassword;
  }(),
  requestVerificationCode: function () {
    var _requestVerificationCode = (0, _asyncToGenerator2.default)(function* (email) {
      return _client.default.post('/auth/request-verification', {
        email: email
      });
    });
    function requestVerificationCode(_x4) {
      return _requestVerificationCode.apply(this, arguments);
    }
    return requestVerificationCode;
  }(),
  verifyCode: function () {
    var _verifyCode = (0, _asyncToGenerator2.default)(function* (email, code) {
      return _client.default.post('/auth/verify-email', {
        email: email,
        code: code
      });
    });
    function verifyCode(_x5, _x6) {
      return _verifyCode.apply(this, arguments);
    }
    return verifyCode;
  }(),
  sendContactRequest: function () {
    var _sendContactRequest = (0, _asyncToGenerator2.default)(function* (name, email, subject, message) {
      return _client.default.post('/contact', {
        name: name,
        email: email,
        subject: subject,
        message: message
      });
    });
    function sendContactRequest(_x7, _x8, _x9, _x10) {
      return _sendContactRequest.apply(this, arguments);
    }
    return sendContactRequest;
  }()
};
var _default = exports.default = emailService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2xpZW50IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJlbWFpbFNlcnZpY2UiLCJyZXF1ZXN0UGFzc3dvcmRSZXNldCIsIl9yZXF1ZXN0UGFzc3dvcmRSZXNldCIsIl9hc3luY1RvR2VuZXJhdG9yMiIsImRlZmF1bHQiLCJlbWFpbCIsImNsaWVudCIsInBvc3QiLCJfeCIsImFwcGx5IiwiYXJndW1lbnRzIiwicmVzZXRQYXNzd29yZCIsIl9yZXNldFBhc3N3b3JkIiwidG9rZW4iLCJuZXdQYXNzd29yZCIsIm5ld19wYXNzd29yZCIsIl94MiIsIl94MyIsInJlcXVlc3RWZXJpZmljYXRpb25Db2RlIiwiX3JlcXVlc3RWZXJpZmljYXRpb25Db2RlIiwiX3g0IiwidmVyaWZ5Q29kZSIsIl92ZXJpZnlDb2RlIiwiY29kZSIsIl94NSIsIl94NiIsInNlbmRDb250YWN0UmVxdWVzdCIsIl9zZW5kQ29udGFjdFJlcXVlc3QiLCJuYW1lIiwic3ViamVjdCIsIm1lc3NhZ2UiLCJfeDciLCJfeDgiLCJfeDkiLCJfeDEwIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiZW1haWxTZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNlcnZpY2VzL2FwaS9lbWFpbFNlcnZpY2UudHNcclxuaW1wb3J0IGNsaWVudCBmcm9tICcuL2NsaWVudCc7XHJcblxyXG4vKipcclxuICog7J2066mU7J28IOq0gOugqCBBUEkg7ISc67mE7IqkXHJcbiAqL1xyXG5jb25zdCBlbWFpbFNlcnZpY2UgPSB7XHJcbiAgLyoqXHJcbiAgICog67mE67CA67KI7Zi4IOyerOyEpOyglSDsnbTrqZTsnbwg7JqU7LKtXHJcbiAgICogQHBhcmFtIGVtYWlsIOyCrOyaqeyekCDsnbTrqZTsnbxcclxuICAgKi9cclxuICByZXF1ZXN0UGFzc3dvcmRSZXNldDogYXN5bmMgKGVtYWlsOiBzdHJpbmcpID0+IHtcclxuICAgIHJldHVybiBjbGllbnQucG9zdCgnL2F1dGgvZm9yZ290LXBhc3N3b3JkJywgeyBlbWFpbCB9KTtcclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDruYTrsIDrsojtmLgg7J6s7ISk7KCVXHJcbiAgICogQHBhcmFtIHRva2VuIOyerOyEpOyglSDthqDtgbBcclxuICAgKiBAcGFyYW0gbmV3UGFzc3dvcmQg7IOIIOu5hOuwgOuyiO2YuFxyXG4gICAqL1xyXG4gIHJlc2V0UGFzc3dvcmQ6IGFzeW5jICh0b2tlbjogc3RyaW5nLCBuZXdQYXNzd29yZDogc3RyaW5nKSA9PiB7XHJcbiAgICByZXR1cm4gY2xpZW50LnBvc3QoJy9hdXRoL3Jlc2V0LXBhc3N3b3JkJywgeyB0b2tlbiwgbmV3X3Bhc3N3b3JkOiBuZXdQYXNzd29yZCB9KTtcclxuICB9LFxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOydtOuplOydvCDtmZXsnbgg7L2U65OcIOyalOyyrSAo7ZqM7JuQ6rCA7J6FIOyLnClcclxuICAgKiBAcGFyYW0gZW1haWwg7IKs7Jqp7J6QIOydtOuplOydvFxyXG4gICAqL1xyXG4gIHJlcXVlc3RWZXJpZmljYXRpb25Db2RlOiBhc3luYyAoZW1haWw6IHN0cmluZykgPT4ge1xyXG4gICAgcmV0dXJuIGNsaWVudC5wb3N0KCcvYXV0aC9yZXF1ZXN0LXZlcmlmaWNhdGlvbicsIHsgZW1haWwgfSk7XHJcbiAgfSxcclxuICBcclxuICAvKipcclxuICAgKiDsnbTrqZTsnbwg7ZmV7J24IOy9lOuTnCDqsoDspp1cclxuICAgKiBAcGFyYW0gZW1haWwg7IKs7Jqp7J6QIOydtOuplOydvFxyXG4gICAqIEBwYXJhbSBjb2RlIO2ZleyduCDsvZTrk5xcclxuICAgKi9cclxuICB2ZXJpZnlDb2RlOiBhc3luYyAoZW1haWw6IHN0cmluZywgY29kZTogc3RyaW5nKSA9PiB7XHJcbiAgICByZXR1cm4gY2xpZW50LnBvc3QoJy9hdXRoL3ZlcmlmeS1lbWFpbCcsIHsgZW1haWwsIGNvZGUgfSk7XHJcbiAgfSxcclxuICBcclxuICAvKipcclxuICAgKiDsl7Drnb0g7JqU7LKtICjqs6DqsJ0g7KeA7JuQKVxyXG4gICAqIEBwYXJhbSBuYW1lIOydtOumhFxyXG4gICAqIEBwYXJhbSBlbWFpbCDsnbTrqZTsnbxcclxuICAgKiBAcGFyYW0gc3ViamVjdCDsoJzrqqlcclxuICAgKiBAcGFyYW0gbWVzc2FnZSDrqZTsi5zsp4BcclxuICAgKi9cclxuICBzZW5kQ29udGFjdFJlcXVlc3Q6IGFzeW5jIChuYW1lOiBzdHJpbmcsIGVtYWlsOiBzdHJpbmcsIHN1YmplY3Q6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nKSA9PiB7XHJcbiAgICByZXR1cm4gY2xpZW50LnBvc3QoJy9jb250YWN0JywgeyBuYW1lLCBlbWFpbCwgc3ViamVjdCwgbWVzc2FnZSB9KTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBlbWFpbFNlcnZpY2U7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFLQSxJQUFNQyxZQUFZLEdBQUc7RUFLbkJDLG9CQUFvQjtJQUFBLElBQUFDLHFCQUFBLE9BQUFDLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxXQUFPQyxLQUFhLEVBQUs7TUFDN0MsT0FBT0MsZUFBTSxDQUFDQyxJQUFJLENBQUMsdUJBQXVCLEVBQUU7UUFBRUYsS0FBSyxFQUFMQTtNQUFNLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBQUEsU0FGREosb0JBQW9CQSxDQUFBTyxFQUFBO01BQUEsT0FBQU4scUJBQUEsQ0FBQU8sS0FBQSxPQUFBQyxTQUFBO0lBQUE7SUFBQSxPQUFwQlQsb0JBQW9CO0VBQUEsR0FFbkI7RUFPRFUsYUFBYTtJQUFBLElBQUFDLGNBQUEsT0FBQVQsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFLFdBQU9TLEtBQWEsRUFBRUMsV0FBbUIsRUFBSztNQUMzRCxPQUFPUixlQUFNLENBQUNDLElBQUksQ0FBQyxzQkFBc0IsRUFBRTtRQUFFTSxLQUFLLEVBQUxBLEtBQUs7UUFBRUUsWUFBWSxFQUFFRDtNQUFZLENBQUMsQ0FBQztJQUNsRixDQUFDO0lBQUEsU0FGREgsYUFBYUEsQ0FBQUssR0FBQSxFQUFBQyxHQUFBO01BQUEsT0FBQUwsY0FBQSxDQUFBSCxLQUFBLE9BQUFDLFNBQUE7SUFBQTtJQUFBLE9BQWJDLGFBQWE7RUFBQSxHQUVaO0VBTURPLHVCQUF1QjtJQUFBLElBQUFDLHdCQUFBLE9BQUFoQixrQkFBQSxDQUFBQyxPQUFBLEVBQUUsV0FBT0MsS0FBYSxFQUFLO01BQ2hELE9BQU9DLGVBQU0sQ0FBQ0MsSUFBSSxDQUFDLDRCQUE0QixFQUFFO1FBQUVGLEtBQUssRUFBTEE7TUFBTSxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUFBLFNBRkRhLHVCQUF1QkEsQ0FBQUUsR0FBQTtNQUFBLE9BQUFELHdCQUFBLENBQUFWLEtBQUEsT0FBQUMsU0FBQTtJQUFBO0lBQUEsT0FBdkJRLHVCQUF1QjtFQUFBLEdBRXRCO0VBT0RHLFVBQVU7SUFBQSxJQUFBQyxXQUFBLE9BQUFuQixrQkFBQSxDQUFBQyxPQUFBLEVBQUUsV0FBT0MsS0FBYSxFQUFFa0IsSUFBWSxFQUFLO01BQ2pELE9BQU9qQixlQUFNLENBQUNDLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtRQUFFRixLQUFLLEVBQUxBLEtBQUs7UUFBRWtCLElBQUksRUFBSkE7TUFBSyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUFBLFNBRkRGLFVBQVVBLENBQUFHLEdBQUEsRUFBQUMsR0FBQTtNQUFBLE9BQUFILFdBQUEsQ0FBQWIsS0FBQSxPQUFBQyxTQUFBO0lBQUE7SUFBQSxPQUFWVyxVQUFVO0VBQUEsR0FFVDtFQVNESyxrQkFBa0I7SUFBQSxJQUFBQyxtQkFBQSxPQUFBeEIsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFLFdBQU93QixJQUFZLEVBQUV2QixLQUFhLEVBQUV3QixPQUFlLEVBQUVDLE9BQWUsRUFBSztNQUMzRixPQUFPeEIsZUFBTSxDQUFDQyxJQUFJLENBQUMsVUFBVSxFQUFFO1FBQUVxQixJQUFJLEVBQUpBLElBQUk7UUFBRXZCLEtBQUssRUFBTEEsS0FBSztRQUFFd0IsT0FBTyxFQUFQQSxPQUFPO1FBQUVDLE9BQU8sRUFBUEE7TUFBUSxDQUFDLENBQUM7SUFDbkUsQ0FBQztJQUFBLFNBRkRKLGtCQUFrQkEsQ0FBQUssR0FBQSxFQUFBQyxHQUFBLEVBQUFDLEdBQUEsRUFBQUMsSUFBQTtNQUFBLE9BQUFQLG1CQUFBLENBQUFsQixLQUFBLE9BQUFDLFNBQUE7SUFBQTtJQUFBLE9BQWxCZ0Isa0JBQWtCO0VBQUE7QUFHcEIsQ0FBQztBQUFDLElBQUFTLFFBQUEsR0FBQUMsT0FBQSxDQUFBaEMsT0FBQSxHQUVhSixZQUFZIiwiaWdub3JlTGlzdCI6W119