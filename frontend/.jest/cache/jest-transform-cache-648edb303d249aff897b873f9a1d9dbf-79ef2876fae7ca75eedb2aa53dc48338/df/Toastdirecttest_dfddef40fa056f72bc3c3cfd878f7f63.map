{"version":3,"names":["_getJestObj","mock","StyleSheet","create","jest","fn","styles","View","Text","TouchableOpacity","_ref","onPress","children","type","props","Animated","_ref2","style","timing","start","cb","finished","Value","setValue","interpolate","Platform","OS","_Toast","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_require","useFakeTimers","describe","beforeEach","clearAllMocks","clearAllTimers","test","onClose","toast","Toast","visible","message","duration","position","testID","componentDidMount","fadeAnim","UNSAFE_componentWillReceiveProps","hideToast","runAllTimers","types","assign","getBackgroundColor","renderResult","render","expect","toHaveBeenCalled","result","toBeNull","not","icon","mockToast","show","hide","ToastController","setRef","toHaveBeenCalledTimes","rendered","toBe","toBeDefined","touchable","content","iconContainer","Array","isArray"],"sources":["Toast.direct.test.tsx"],"sourcesContent":["// __tests__/components/Toast.direct.test.tsx\r\nimport React from 'react';\r\nimport Toast, { ToastController } from '../../src/components/Toast';\r\n\r\n// 타이머 모킹\r\njest.useFakeTimers();\r\n\r\n// Toast 내부 메서드와 상태에 직접 접근하기 위한 모킹\r\njest.mock('react-native', () => ({\r\n  StyleSheet: {\r\n    create: jest.fn(styles => styles),\r\n  },\r\n  View: 'View',\r\n  Text: 'Text',\r\n  TouchableOpacity: ({ onPress, children }) => ({\r\n    type: 'TouchableOpacity',\r\n    props: { onPress, children },\r\n  }),\r\n  Animated: {\r\n    View: ({ children, style }) => ({\r\n      type: 'Animated.View',\r\n      props: { children, style },\r\n    }),\r\n    timing: jest.fn(() => ({\r\n      start: jest.fn(cb => {\r\n        if (cb) cb({ finished: true });\r\n      }),\r\n    })),\r\n    Value: jest.fn(() => ({\r\n      setValue: jest.fn(),\r\n      interpolate: jest.fn(() => ({})),\r\n    })),\r\n  },\r\n  Platform: { OS: 'android' },\r\n}));\r\n\r\ndescribe('Toast Direct Implementation Tests', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    jest.clearAllTimers();\r\n  });\r\n  \r\n  // 직접 컴포넌트 인스턴스에 접근\r\n  test('Test Toast internal implementation directly', () => {\r\n    // Toast 컴포넌트의 인스턴스 생성\r\n    const onClose = jest.fn();\r\n    const toast = new Toast({\r\n      visible: true,\r\n      message: '테스트 메시지',\r\n      duration: 1000,\r\n      onClose,\r\n      type: 'success',\r\n      position: 'bottom',\r\n      testID: 'toast',\r\n    });\r\n    \r\n    // 직접 컴포넌트 내부 메서드 호출\r\n    \r\n    // 1. componentDidMount 시뮬레이션\r\n    toast.componentDidMount && toast.componentDidMount();\r\n    \r\n    // 2. fadeAnim 설정 (애니메이션 관련)\r\n    if (toast.fadeAnim) {\r\n      toast.fadeAnim.setValue(0);\r\n    }\r\n    \r\n    // 3. useEffect 의존성 배열 변경 시뮬레이션\r\n    toast.UNSAFE_componentWillReceiveProps && toast.UNSAFE_componentWillReceiveProps({\r\n      visible: false,\r\n      message: '테스트 메시지',\r\n      duration: 1000,\r\n      onClose,\r\n    });\r\n    \r\n    // 4. 직접 hideToast 메서드 호출\r\n    toast.hideToast && toast.hideToast();\r\n    \r\n    // 5. 타이머 진행 시뮬레이션\r\n    jest.runAllTimers();\r\n    \r\n    // 6. getBackgroundColor 메서드 테스트\r\n    const types = ['success', 'error', 'warning', 'info'];\r\n    for (const type of types) {\r\n      toast.props = { ...toast.props, type };\r\n      toast.getBackgroundColor && toast.getBackgroundColor();\r\n    }\r\n    \r\n    // 7. 렌더링 로직 테스트\r\n    const renderResult = toast.render();\r\n    \r\n    // 호출 확인\r\n    expect(onClose).toHaveBeenCalled();\r\n  });\r\n  \r\n  // Toast 컴포넌트의 생명주기 테스트\r\n  test('Test Toast lifecycle methods', () => {\r\n    const onClose = jest.fn();\r\n    const toast = new Toast({\r\n      visible: false,\r\n      message: '테스트 메시지',\r\n      onClose,\r\n    });\r\n    \r\n    // 1. 초기 렌더링 (visible=false)\r\n    let result = toast.render();\r\n    expect(result).toBeNull();\r\n    \r\n    // 2. visible=true로 props 업데이트\r\n    toast.props = { ...toast.props, visible: true };\r\n    result = toast.render();\r\n    expect(result).not.toBeNull();\r\n    \r\n    // 3. 다른 props 업데이트\r\n    toast.props = { \r\n      ...toast.props, \r\n      type: 'error',\r\n      position: 'top',\r\n      icon: { type: 'Icon', props: {} }\r\n    };\r\n    result = toast.render();\r\n    \r\n    // 4. hideToast 호출\r\n    toast.hideToast && toast.hideToast();\r\n    jest.runAllTimers();\r\n    \r\n    expect(onClose).toHaveBeenCalled();\r\n  });\r\n  \r\n  // ToastController 테스트\r\n  test('Test ToastController directly', () => {\r\n    // 모킹된 토스트 인스턴스\r\n    const mockToast = {\r\n      show: jest.fn(),\r\n      hide: jest.fn()\r\n    };\r\n    \r\n    // ToastController에 참조 설정\r\n    ToastController.setRef(mockToast);\r\n    \r\n    // 다양한 props로 show 호출\r\n    ToastController.show({ message: '테스트' });\r\n    ToastController.show({ \r\n      message: '테스트', \r\n      type: 'success',\r\n      position: 'top',\r\n      duration: 2000,\r\n      icon: { type: 'Icon', props: {} }\r\n    });\r\n    \r\n    // hide 호출\r\n    ToastController.hide();\r\n    \r\n    // null 참조로 설정해도 에러 없이 동작하는지 확인\r\n    ToastController.setRef(null);\r\n    ToastController.show({ message: '테스트' });\r\n    ToastController.hide();\r\n    \r\n    expect(mockToast.show).toHaveBeenCalledTimes(2);\r\n    expect(mockToast.hide).toHaveBeenCalledTimes(1);\r\n  });\r\n  \r\n  // 직접 요소 렌더링 및 프로퍼티 검사\r\n  test('Test Toast rendered elements directly', () => {\r\n    const props = {\r\n      visible: true,\r\n      message: '테스트 메시지',\r\n      type: 'success',\r\n      position: 'top',\r\n      icon: { type: 'Icon', props: {} },\r\n      testID: 'toast',\r\n    };\r\n    \r\n    const toast = new Toast(props);\r\n    const rendered = toast.render();\r\n    \r\n    // rendered 요소의 프로퍼티 검사\r\n    expect(rendered).not.toBeNull();\r\n    expect(rendered.props.testID).toBe('toast');\r\n    expect(rendered.props.style).toBeDefined();\r\n    \r\n    // 내부 요소 검사\r\n    const touchable = rendered.props.children;\r\n    expect(touchable.type).toBe('TouchableOpacity');\r\n    \r\n    // 아이콘 존재 확인\r\n    const content = touchable.props.children;\r\n    const iconContainer = Array.isArray(content) ? content[0] : null;\r\n    expect(iconContainer).not.toBeNull();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}