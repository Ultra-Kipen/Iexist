{"version":3,"names":["_getJestObj","mock","originalModule","jest","requireActual","Object","assign","useTheme","colors","primary","background","Provider","_ref","children","List","Item","props","title","_jsxRuntime","jsx","Text","Icon","icon","_interopRequireDefault","require","_react","_reactNative","_reactNativePaper","_ChallengeScreen","_require","renderWithProvider","component","render","mockConsoleLog","fn","console","log","describe","beforeEach","mockClear","test","_renderWithProvider","default","getByText","expect","toBeTruthy","_renderWithProvider2","_renderWithProvider3","_renderWithProvider4","_renderWithProvider5","_renderWithProvider6","getAllByText","joinButtons","toHaveLength","fireEvent","press","toHaveBeenCalledWith","toHaveBeenCalledTimes","_renderWithProvider7","progressTexts","length","toBe","_renderWithProvider8","toHaveBeenLastCalledWith","_renderWithProvider9","_renderWithProvider10"],"sources":["ChallengeScreen.unit.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\n// ChallengeScreen 컴포넌트 임포트\r\nimport ChallengeScreen from '../../../src/screens/ChallengeScreen';\r\n// React Native Paper 모킹\r\njest.mock('react-native-paper', () => {\r\n  const originalModule = jest.requireActual('react-native-paper');\r\n  return {\r\n    ...originalModule,\r\n    useTheme: () => ({\r\n      colors: {\r\n        primary: '#6200ee',\r\n        background: '#ffffff',\r\n      },\r\n    }),\r\n    Provider: function Provider({ children }: { children: React.ReactNode }): React.ReactNode { \r\n      return children; \r\n    },\r\n    List: {\r\n      Item: function Item(props: { title: string; left?: (props: { color: string; size: number }) => React.ReactNode }) { \r\n        const { title } = props;\r\n        return <originalModule.Text>{title}</originalModule.Text>; \r\n      },\r\n      Icon: function Icon(props: { icon: string }) { \r\n        return <originalModule.Text>{props.icon}</originalModule.Text>; \r\n      }\r\n    },\r\n  };\r\n});\r\n\r\nconst renderWithProvider = (component: React.ReactElement) => {\r\n  return render(\r\n    <PaperProvider>\r\n      {component}\r\n    </PaperProvider>\r\n  );\r\n};\r\n// handleJoinChallenge 함수의 호출을 모니터링하기 위한 모킹\r\nconst mockConsoleLog = jest.fn();\r\nconsole.log = mockConsoleLog;\r\n\r\ndescribe('ChallengeScreen 단위 테스트', () => {\r\n  beforeEach(() => {\r\n    mockConsoleLog.mockClear();\r\n  });\r\n\r\n  test('각 챌린지의 제목이 올바르게 표시되는지 확인', () => {\r\n   \r\n    \r\n    const { getByText } = renderWithProvider(<ChallengeScreen />);\r\n    expect(getByText('7일간의 감사 일기')).toBeTruthy();\r\n    expect(getByText('30일 긍정 에너지 나누기')).toBeTruthy();\r\n    expect(getByText('21일 명상 습관 만들기')).toBeTruthy();\r\n  });\r\n  \r\n  test('각 챌린지의 설명이 올바르게 표시되는지 확인', () => {\r\n    const { getByText } = renderWithProvider(<ChallengeScreen />);\r\n    \r\n    expect(getByText('매일 감사한 일 3가지를 기록해보세요.')).toBeTruthy();\r\n    expect(getByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.')).toBeTruthy();\r\n    expect(getByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.')).toBeTruthy();\r\n  });\r\n  \r\n  test('각 챌린지의 참여자 수가 올바르게 표시되는지 확인', () => {\r\n    const { getByText } = renderWithProvider(<ChallengeScreen />);\r\n    \r\n    expect(getByText('참여자: 128명')).toBeTruthy();\r\n    expect(getByText('참여자: 56명')).toBeTruthy();\r\n    expect(getByText('참여자: 89명')).toBeTruthy();\r\n  });\r\n  \r\n  test('각 챌린지의 기간이 올바르게 표시되는지 확인', () => {\r\n    const { getByText } = renderWithProvider(<ChallengeScreen />);\r\n    \r\n    expect(getByText('기간: 7일')).toBeTruthy();\r\n    expect(getByText('기간: 30일')).toBeTruthy();\r\n    expect(getByText('기간: 21일')).toBeTruthy();\r\n  });\r\n  \r\n  test('각 챌린지의 진행률이 올바르게 표시되는지 확인', () => {\r\n    const { getByText } = renderWithProvider(<ChallengeScreen />);\r\n    \r\n    expect(getByText('40% 완료')).toBeTruthy();\r\n    expect(getByText('20% 완료')).toBeTruthy();\r\n    expect(getByText('60% 완료')).toBeTruthy();\r\n  });\r\n  \r\n  test('참여하기 버튼이 올바르게 동작하는지 확인', () => {\r\n    const { getAllByText } = renderWithProvider(<ChallengeScreen />);\r\n    \r\n    const joinButtons = getAllByText('참여하기');\r\n    expect(joinButtons).toHaveLength(3);\r\n    \r\n    // 첫 번째 버튼 클릭\r\n    fireEvent.press(joinButtons[0]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 1);\r\n    \r\n    // 두 번째 버튼 클릭\r\n    fireEvent.press(joinButtons[1]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 2);\r\n    \r\n    // 세 번째 버튼 클릭\r\n    fireEvent.press(joinButtons[2]);\r\n    expect(mockConsoleLog).toHaveBeenCalledWith('Joining challenge:', 3);\r\n    \r\n    expect(mockConsoleLog).toHaveBeenCalledTimes(3);\r\n  });\r\n  \r\n  test('진행률이 올바르게 표시되는지 확인', () => {\r\n    const { getAllByText } = renderWithProvider(<ChallengeScreen />);\r\n    \r\n    // 진행률 텍스트 확인\r\n    const progressTexts = [\r\n      getAllByText('40% 완료')[0],\r\n      getAllByText('20% 완료')[0],\r\n      getAllByText('60% 완료')[0]\r\n    ];\r\n    \r\n    expect(progressTexts.length).toBe(3);\r\n  });\r\n  \r\n  test('핸들러 함수가 올바른 챌린지 ID를 전달받는지 확인', () => {\r\n    const { getAllByText } = renderWithProvider(<ChallengeScreen />);\r\n    \r\n    const joinButtons = getAllByText('참여하기');\r\n    \r\n    // 각 버튼 클릭 시 올바른 ID가 전달되는지 확인\r\n    fireEvent.press(joinButtons[0]);\r\n    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 1);\r\n    \r\n    fireEvent.press(joinButtons[1]);\r\n    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 2);\r\n    \r\n    fireEvent.press(joinButtons[2]);\r\n    expect(mockConsoleLog).toHaveBeenLastCalledWith('Joining challenge:', 3);\r\n  });\r\n  \r\n  test('컴포넌트 렌더링 시 헤더 텍스트가 표시되는지 확인', () => {\r\n    const { getByText } = renderWithProvider(<ChallengeScreen />);\r\n    expect(getByText('현재 진행 중인 챌린지')).toBeTruthy();\r\n  });\r\n  \r\n  test('모든 챌린지 카드의 정보가 한 번에 표시되는지 확인', () => {\r\n    const { getByText } = renderWithProvider(<ChallengeScreen />);\r\n    \r\n    // 모든 챌린지 정보 확인\r\n    // 첫 번째 챌린지\r\n    expect(getByText('7일간의 감사 일기')).toBeTruthy();\r\n    expect(getByText('매일 감사한 일 3가지를 기록해보세요.')).toBeTruthy();\r\n    expect(getByText('40% 완료')).toBeTruthy();\r\n    expect(getByText('참여자: 128명')).toBeTruthy();\r\n    expect(getByText('기간: 7일')).toBeTruthy();\r\n    \r\n    // 두 번째 챌린지\r\n    expect(getByText('30일 긍정 에너지 나누기')).toBeTruthy();\r\n    expect(getByText('하루에 한 번 주변 사람에게 긍정적인 말을 해보세요.')).toBeTruthy();\r\n    expect(getByText('20% 완료')).toBeTruthy();\r\n    expect(getByText('참여자: 56명')).toBeTruthy();\r\n    expect(getByText('기간: 30일')).toBeTruthy();\r\n    \r\n    // 세 번째 챌린지\r\n    expect(getByText('21일 명상 습관 만들기')).toBeTruthy();\r\n    expect(getByText('매일 10분씩 명상을 하고 느낀 점을 공유해보세요.')).toBeTruthy();\r\n    expect(getByText('60% 완료')).toBeTruthy();\r\n    expect(getByText('참여자: 89명')).toBeTruthy();\r\n    expect(getByText('기간: 21일')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}