{"version":3,"names":["_getJestObj","mock","useTheme","jest","fn","mockReturnValue","colors","primary","background","SegmentedButtons","Card","Button","Text","ActivityIndicator","getEmotionStats","mockResolvedValue","emotions","id","name","count","color","mostFrequent","getEmotionHistory","date","getUserPosts","imageUrl","content","createdAt","useNavigation","navigate","goBack","useRoute","params","_interopRequireDefault","require","Object","defineProperty","exports","value","_asyncToGenerator2","_require","describe","it","emotionService","postService","mockLoadData","period","limit","expect","toHaveBeenCalledWith","navigation","navigateToDetail","postId","navigateToGraph","data","loadAllData","_ref","default","success","_x","apply","arguments","then","result","toEqual"],"sources":["ReviewScreen.integration.test.tsx"],"sourcesContent":["// root/frontend/tests/integration/screens/ReviewScreen.integration.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\n\r\n// 단순하게 모킹 - 문자열만 사용\r\njest.mock('react-native-paper', () => ({\r\n  useTheme: jest.fn().mockReturnValue({\r\n    colors: { primary: '#000', background: '#fff' }\r\n  }),\r\n  SegmentedButtons: 'SegmentedButtons',\r\n  Card: 'Card',\r\n  Button: 'Button',\r\n  Text: 'Text',\r\n  ActivityIndicator: 'ActivityIndicator'\r\n}));\r\n\r\n// API 서비스 모킹\r\njest.mock('../../../src/services/api/emotionService', () => ({\r\n  getEmotionStats: jest.fn().mockResolvedValue({\r\n    emotions: [\r\n      { id: 1, name: '행복', count: 5, color: '#FFD700' },\r\n      { id: 5, name: '슬픔', count: 2, color: '#4682B4' },\r\n      { id: 6, name: '불안', count: 1, color: '#DDA0DD' }\r\n    ],\r\n    mostFrequent: { id: 1, name: '행복', count: 5, color: '#FFD700' }\r\n  }),\r\n  getEmotionHistory: jest.fn().mockResolvedValue([\r\n    { date: '2025-05-01', emotions: [{ id: 1, name: '행복', color: '#FFD700' }] },\r\n    { date: '2025-05-02', emotions: [{ id: 5, name: '슬픔', color: '#4682B4' }] },\r\n    { date: '2025-05-03', emotions: [{ id: 1, name: '행복', color: '#FFD700' }] }\r\n  ])\r\n}));\r\n\r\njest.mock('../../../src/services/api/postService', () => ({\r\n  getUserPosts: jest.fn().mockResolvedValue([\r\n    { id: 1, imageUrl: 'https://example.com/1.jpg', content: '좋은 하루', createdAt: '2025-05-03' },\r\n    { id: 2, imageUrl: 'https://example.com/2.jpg', content: '힘든 하루', createdAt: '2025-05-02' },\r\n    { id: 3, imageUrl: 'https://example.com/3.jpg', content: '평범한 하루', createdAt: '2025-05-01' },\r\n    { id: 4, imageUrl: 'https://example.com/4.jpg', content: '즐거운 하루', createdAt: '2025-04-30' },\r\n    { id: 5, imageUrl: 'https://example.com/5.jpg', content: '지친 하루', createdAt: '2025-04-29' },\r\n    { id: 6, imageUrl: 'https://example.com/6.jpg', content: '특별한 하루', createdAt: '2025-04-28' }\r\n  ])\r\n}));\r\n\r\n// 네비게이션 모킹\r\njest.mock('@react-navigation/native', () => ({\r\n  useNavigation: jest.fn().mockReturnValue({\r\n    navigate: jest.fn(),\r\n    goBack: jest.fn()\r\n  }),\r\n  useRoute: jest.fn().mockReturnValue({\r\n    params: {}\r\n  })\r\n}));\r\n\r\n// ReviewScreen 모킹 - 단순하게 모킹\r\njest.mock('../../../src/screens/ReviewScreen', () => 'ReviewScreen');\r\n\r\ndescribe('ReviewScreen 통합 테스트', () => {\r\n  // 기본적인 테스트 케이스\r\n  it('서비스 모듈을 올바르게 호출해야 함', () => {\r\n    const emotionService = require('../../../src/services/api/emotionService');\r\n    const postService = require('../../../src/services/api/postService');\r\n    \r\n    // 모형 함수 생성\r\n    const mockLoadData = () => {\r\n      postService.getUserPosts({\r\n        period: 'weekly',\r\n        limit: 20\r\n      });\r\n      emotionService.getEmotionStats({\r\n        period: 'weekly'\r\n      });\r\n    };\r\n    \r\n    // 함수 실행\r\n    mockLoadData();\r\n    \r\n    // API 호출 확인\r\n    expect(postService.getUserPosts).toHaveBeenCalledWith({\r\n      period: 'weekly',\r\n      limit: 20\r\n    });\r\n    \r\n    expect(emotionService.getEmotionStats).toHaveBeenCalledWith({\r\n      period: 'weekly'\r\n    });\r\n  });\r\n\r\n  it('네비게이션 기능이 올바르게 작동해야 함', () => {\r\n    const navigation = require('@react-navigation/native').useNavigation();\r\n    \r\n    // 네비게이션 함수 호출\r\n    const navigateToDetail = (postId) => {\r\n      navigation.navigate('PostDetail', { postId });\r\n    };\r\n    \r\n    // 함수 실행\r\n    navigateToDetail(5);\r\n    \r\n    // 네비게이션 호출 확인\r\n    expect(navigation.navigate).toHaveBeenCalledWith('PostDetail', { postId: 5 });\r\n  });\r\n\r\n  it('화면 전환 시 네비게이션 함수가 호출되어야 함', () => {\r\n    const navigation = require('@react-navigation/native').useNavigation();\r\n    \r\n    // 그래프 화면으로 이동 함수\r\n    const navigateToGraph = (data) => {\r\n      navigation.navigate('EmotionGraph', data);\r\n    };\r\n    \r\n    // 함수 실행\r\n    navigateToGraph({ period: 'weekly', emotions: [] });\r\n    \r\n    // 네비게이션 호출 확인\r\n    expect(navigation.navigate).toHaveBeenCalledWith('EmotionGraph', { \r\n      period: 'weekly', \r\n      emotions: [] \r\n    });\r\n  });\r\n\r\n  it('데이터 로딩 함수가 올바른 순서로 호출되어야 함', () => {\r\n    const emotionService = require('../../../src/services/api/emotionService');\r\n    const postService = require('../../../src/services/api/postService');\r\n    \r\n    // API 호출 순서 테스트\r\n    const loadAllData = async (period) => {\r\n      await postService.getUserPosts({ period, limit: 20 });\r\n      await emotionService.getEmotionStats({ period });\r\n      return { success: true };\r\n    };\r\n    \r\n    // 함수 실행\r\n    return loadAllData('monthly').then(result => {\r\n      // 결과 확인\r\n      expect(result).toEqual({ success: true });\r\n      \r\n      // API 호출 확인\r\n      expect(postService.getUserPosts).toHaveBeenCalledWith({\r\n        period: 'monthly',\r\n        limit: 20\r\n      });\r\n      \r\n      expect(emotionService.getEmotionStats).toHaveBeenCalledWith({\r\n        period: 'monthly'\r\n      });\r\n    });\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}