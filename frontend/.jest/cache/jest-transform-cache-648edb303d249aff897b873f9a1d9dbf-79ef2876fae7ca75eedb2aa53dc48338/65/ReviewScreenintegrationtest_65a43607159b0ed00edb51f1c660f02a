14f44e0f88a1a2d80b4d672042a9f32a
_getJestObj().mock('react-native-paper', function () {
  return {
    useTheme: jest.fn().mockReturnValue({
      colors: {
        primary: '#000',
        background: '#fff'
      }
    }),
    SegmentedButtons: 'SegmentedButtons',
    Card: 'Card',
    Button: 'Button',
    Text: 'Text',
    ActivityIndicator: 'ActivityIndicator'
  };
});
_getJestObj().mock("../../../src/services/api/emotionService", function () {
  return {
    getEmotionStats: jest.fn().mockResolvedValue({
      emotions: [{
        id: 1,
        name: '행복',
        count: 5,
        color: '#FFD700'
      }, {
        id: 5,
        name: '슬픔',
        count: 2,
        color: '#4682B4'
      }, {
        id: 6,
        name: '불안',
        count: 1,
        color: '#DDA0DD'
      }],
      mostFrequent: {
        id: 1,
        name: '행복',
        count: 5,
        color: '#FFD700'
      }
    }),
    getEmotionHistory: jest.fn().mockResolvedValue([{
      date: '2025-05-01',
      emotions: [{
        id: 1,
        name: '행복',
        color: '#FFD700'
      }]
    }, {
      date: '2025-05-02',
      emotions: [{
        id: 5,
        name: '슬픔',
        color: '#4682B4'
      }]
    }, {
      date: '2025-05-03',
      emotions: [{
        id: 1,
        name: '행복',
        color: '#FFD700'
      }]
    }])
  };
});
_getJestObj().mock("../../../src/services/api/postService", function () {
  return {
    getUserPosts: jest.fn().mockResolvedValue([{
      id: 1,
      imageUrl: 'https://example.com/1.jpg',
      content: '좋은 하루',
      createdAt: '2025-05-03'
    }, {
      id: 2,
      imageUrl: 'https://example.com/2.jpg',
      content: '힘든 하루',
      createdAt: '2025-05-02'
    }, {
      id: 3,
      imageUrl: 'https://example.com/3.jpg',
      content: '평범한 하루',
      createdAt: '2025-05-01'
    }, {
      id: 4,
      imageUrl: 'https://example.com/4.jpg',
      content: '즐거운 하루',
      createdAt: '2025-04-30'
    }, {
      id: 5,
      imageUrl: 'https://example.com/5.jpg',
      content: '지친 하루',
      createdAt: '2025-04-29'
    }, {
      id: 6,
      imageUrl: 'https://example.com/6.jpg',
      content: '특별한 하루',
      createdAt: '2025-04-28'
    }])
  };
});
_getJestObj().mock('@react-navigation/native', function () {
  return {
    useNavigation: jest.fn().mockReturnValue({
      navigate: jest.fn(),
      goBack: jest.fn()
    }),
    useRoute: jest.fn().mockReturnValue({
      params: {}
    })
  };
});
_getJestObj().mock("../../../src/screens/ReviewScreen", function () {
  return 'ReviewScreen';
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('ReviewScreen 통합 테스트', function () {
  it('서비스 모듈을 올바르게 호출해야 함', function () {
    var emotionService = require("../../../src/services/api/emotionService");
    var postService = require("../../../src/services/api/postService");
    var mockLoadData = function mockLoadData() {
      postService.getUserPosts({
        period: 'weekly',
        limit: 20
      });
      emotionService.getEmotionStats({
        period: 'weekly'
      });
    };
    mockLoadData();
    expect(postService.getUserPosts).toHaveBeenCalledWith({
      period: 'weekly',
      limit: 20
    });
    expect(emotionService.getEmotionStats).toHaveBeenCalledWith({
      period: 'weekly'
    });
  });
  it('네비게이션 기능이 올바르게 작동해야 함', function () {
    var navigation = require('@react-navigation/native').useNavigation();
    var navigateToDetail = function navigateToDetail(postId) {
      navigation.navigate('PostDetail', {
        postId: postId
      });
    };
    navigateToDetail(5);
    expect(navigation.navigate).toHaveBeenCalledWith('PostDetail', {
      postId: 5
    });
  });
  it('화면 전환 시 네비게이션 함수가 호출되어야 함', function () {
    var navigation = require('@react-navigation/native').useNavigation();
    var navigateToGraph = function navigateToGraph(data) {
      navigation.navigate('EmotionGraph', data);
    };
    navigateToGraph({
      period: 'weekly',
      emotions: []
    });
    expect(navigation.navigate).toHaveBeenCalledWith('EmotionGraph', {
      period: 'weekly',
      emotions: []
    });
  });
  it('데이터 로딩 함수가 올바른 순서로 호출되어야 함', function () {
    var emotionService = require("../../../src/services/api/emotionService");
    var postService = require("../../../src/services/api/postService");
    var loadAllData = function () {
      var _ref = (0, _asyncToGenerator2.default)(function* (period) {
        yield postService.getUserPosts({
          period: period,
          limit: 20
        });
        yield emotionService.getEmotionStats({
          period: period
        });
        return {
          success: true
        };
      });
      return function loadAllData(_x) {
        return _ref.apply(this, arguments);
      };
    }();
    return loadAllData('monthly').then(function (result) {
      expect(result).toEqual({
        success: true
      });
      expect(postService.getUserPosts).toHaveBeenCalledWith({
        period: 'monthly',
        limit: 20
      });
      expect(emotionService.getEmotionStats).toHaveBeenCalledWith({
        period: 'monthly'
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,