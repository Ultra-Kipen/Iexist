ede888400a1687c6dd807a1a787434f1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _client = _interopRequireDefault(require("./client"));
function cov_giqm4om5l() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\services\\api\\authService.ts";
  var hash = "9aa7e6ea10e4f80e8780c879fa8d99ed0a953576";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\services\\api\\authService.ts",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "1": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 74
        }
      },
      "2": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 70
        }
      },
      "3": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 48
        }
      },
      "4": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 84
        }
      },
      "5": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 69
        }
      },
      "6": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 81
        }
      },
      "7": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 49
        }
      },
      "8": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 10
          }
        },
        loc: {
          start: {
            line: 31,
            column: 50
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 31
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        },
        loc: {
          start: {
            line: 35,
            column: 42
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 10
          },
          end: {
            line: 39,
            column: 11
          }
        },
        loc: {
          start: {
            line: 39,
            column: 22
          },
          end: {
            line: 41,
            column: 3
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 17
          }
        },
        loc: {
          start: {
            line: 43,
            column: 44
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 18
          },
          end: {
            line: 47,
            column: 19
          }
        },
        loc: {
          start: {
            line: 47,
            column: 43
          },
          end: {
            line: 49,
            column: 3
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 17
          },
          end: {
            line: 51,
            column: 18
          }
        },
        loc: {
          start: {
            line: 51,
            column: 63
          },
          end: {
            line: 53,
            column: 3
          }
        },
        line: 51
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 55,
            column: 14
          },
          end: {
            line: 55,
            column: 15
          }
        },
        loc: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 57,
            column: 3
          }
        },
        line: 55
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 18
          }
        },
        loc: {
          start: {
            line: 59,
            column: 38
          },
          end: {
            line: 61,
            column: 3
          }
        },
        line: 59
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9aa7e6ea10e4f80e8780c879fa8d99ed0a953576"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_giqm4om5l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_giqm4om5l();
var authService = (cov_giqm4om5l().s[0]++, {
  login: function () {
    var _login = (0, _asyncToGenerator2.default)(function* (credentials) {
      cov_giqm4om5l().f[0]++;
      cov_giqm4om5l().s[1]++;
      return yield _client.default.post('/auth/login', credentials);
    });
    function login(_x) {
      return _login.apply(this, arguments);
    }
    return login;
  }(),
  register: function () {
    var _register = (0, _asyncToGenerator2.default)(function* (data) {
      cov_giqm4om5l().f[1]++;
      cov_giqm4om5l().s[2]++;
      return yield _client.default.post('/auth/register', data);
    });
    function register(_x2) {
      return _register.apply(this, arguments);
    }
    return register;
  }(),
  logout: function () {
    var _logout = (0, _asyncToGenerator2.default)(function* () {
      cov_giqm4om5l().f[2]++;
      cov_giqm4om5l().s[3]++;
      return yield _client.default.post('/auth/logout');
    });
    function logout() {
      return _logout.apply(this, arguments);
    }
    return logout;
  }(),
  refreshToken: function () {
    var _refreshToken = (0, _asyncToGenerator2.default)(function* (oldToken) {
      cov_giqm4om5l().f[3]++;
      cov_giqm4om5l().s[4]++;
      return yield _client.default.post('/auth/refresh', {
        token: oldToken
      });
    });
    function refreshToken(_x3) {
      return _refreshToken.apply(this, arguments);
    }
    return refreshToken;
  }(),
  forgotPassword: function () {
    var _forgotPassword = (0, _asyncToGenerator2.default)(function* (email) {
      cov_giqm4om5l().f[4]++;
      cov_giqm4om5l().s[5]++;
      return yield _client.default.post('/users/forgot-password', {
        email: email
      });
    });
    function forgotPassword(_x4) {
      return _forgotPassword.apply(this, arguments);
    }
    return forgotPassword;
  }(),
  resetPassword: function () {
    var _resetPassword = (0, _asyncToGenerator2.default)(function* (token, newPassword) {
      cov_giqm4om5l().f[5]++;
      cov_giqm4om5l().s[6]++;
      return yield _client.default.post('/users/reset-password', {
        token: token,
        newPassword: newPassword
      });
    });
    function resetPassword(_x5, _x6) {
      return _resetPassword.apply(this, arguments);
    }
    return resetPassword;
  }(),
  getProfile: function () {
    var _getProfile = (0, _asyncToGenerator2.default)(function* () {
      cov_giqm4om5l().f[6]++;
      cov_giqm4om5l().s[7]++;
      return yield _client.default.get('/users/profile');
    });
    function getProfile() {
      return _getProfile.apply(this, arguments);
    }
    return getProfile;
  }(),
  updateProfile: function () {
    var _updateProfile = (0, _asyncToGenerator2.default)(function* (data) {
      cov_giqm4om5l().f[7]++;
      cov_giqm4om5l().s[8]++;
      return yield _client.default.put('/users/profile', data);
    });
    function updateProfile(_x7) {
      return _updateProfile.apply(this, arguments);
    }
    return updateProfile;
  }()
});
var _default = exports.default = authService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,