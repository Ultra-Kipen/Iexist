affa2502c4898248cd8a990f6b8ec34c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MockStatisticsScreen = exports.MockPostScreen = exports.MockMyPostsScreen = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _postService = _interopRequireDefault(require("../../src/services/api/postService"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var MockPostScreen = exports.MockPostScreen = function MockPostScreen(_ref) {
  var route = _ref.route,
    navigation = _ref.navigation;
  var _ref2 = (route == null ? void 0 : route.params) || {
      postId: 1
    },
    postId = _ref2.postId;
  (0, _react.useEffect)(function () {
    _postService.default.getPostById(postId);
    _postService.default.getComments(postId);
  }, [postId]);
  var handleAddComment = function handleAddComment() {
    _postService.default.addComment(postId, {
      content: '테스트 댓글입니다.',
      is_anonymous: false
    });
  };
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
      children: "\uAC8C\uC2DC\uBB3C \uC0C1\uC138 \uD654\uBA74"
    }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
      children: ["\uAC8C\uC2DC\uBB3C ID: ", postId]
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      children: "\uD14C\uC2A4\uD2B8 \uAC8C\uC2DC\uBB3C"
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      children: "\uB108\uBB34 \uC88B\uB124\uC694!"
    }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
      placeholder: "\uB313\uAE00\uC744 \uC785\uB825\uD558\uC138\uC694...",
      testID: "comment-input"
    }), (0, _jsxRuntime.jsx)(_reactNative.Button, {
      title: "\uAC8C\uC2DC",
      onPress: handleAddComment,
      testID: "submit-comment"
    })]
  });
};
var MockMyPostsScreen = exports.MockMyPostsScreen = function MockMyPostsScreen(_ref3) {
  var navigation = _ref3.navigation;
  (0, _react.useEffect)(function () {
    _postService.default.getMyPosts();
  }, []);
  var handleDeletePost = function handleDeletePost(postId) {
    _postService.default.deletePost(postId);
  };
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
      children: "\uB0B4 \uAC8C\uC2DC\uBB3C \uD654\uBA74"
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      testID: "post-item",
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        children: "\uAC8C\uC2DC\uBB3C 1"
      }), (0, _jsxRuntime.jsx)(_reactNative.Button, {
        title: "\uC0AD\uC81C",
        onPress: function onPress() {
          return handleDeletePost(1);
        },
        testID: "delete-button"
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.Button, {
      title: "\uC0C8\uB85C\uACE0\uCE68",
      onPress: function onPress() {
        return _postService.default.getMyPosts();
      },
      testID: "refresh-button"
    })]
  });
};
var MockStatisticsScreen = exports.MockStatisticsScreen = function MockStatisticsScreen(_ref4) {
  var navigation = _ref4.navigation;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
      children: "\uAC10\uC815 \uD1B5\uACC4"
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      testID: "emotion-chart",
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        children: "\uADF8\uB798\uD504 \uC601\uC5ED"
      })
    }), (0, _jsxRuntime.jsx)(_reactNative.Button, {
      title: "\uC8FC\uAC04",
      onPress: function onPress() {},
      testID: "weekly-button"
    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
      children: "\uC8FC\uAC04 \uAC10\uC815 \uD1B5\uACC4"
    })]
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,