b5e24605a80cfccb9fd65a1f11d4f5a9
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
var Modal = function Modal(_ref) {
  var isVisible = _ref.isVisible,
    onClose = _ref.onClose,
    title = _ref.title,
    children = _ref.children,
    footer = _ref.footer,
    _ref$animationType = _ref.animationType,
    animationType = _ref$animationType === void 0 ? 'fade' : _ref$animationType,
    _ref$closeOnBackdropP = _ref.closeOnBackdropPress,
    closeOnBackdropPress = _ref$closeOnBackdropP === void 0 ? true : _ref$closeOnBackdropP;
  if (!isVisible) return null;
  var handleBackdropPress = function handleBackdropPress() {
    if (closeOnBackdropPress) {
      onClose();
    }
  };
  var styles = {
    backdrop: {
      position: 'fixed',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      backgroundColor: 'rgba(0, 0, 0, 0.5)',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      zIndex: 1000
    },
    modalContainer: {
      width: '85%',
      maxWidth: '500px',
      backgroundColor: 'white',
      borderRadius: '10px',
      overflow: 'hidden',
      boxShadow: '0 2px 10px rgba(0, 0, 0, 0.25)'
    },
    header: {
      display: 'flex',
      justifyContent: 'space-between',
      alignItems: 'center',
      padding: '15px',
      borderBottom: '1px solid #f0f0f0'
    },
    headerText: {
      margin: 0,
      fontSize: '18px',
      fontWeight: 'bold',
      color: '#333'
    },
    closeButton: {
      background: 'none',
      border: 'none',
      fontSize: '24px',
      color: '#999',
      cursor: 'pointer',
      padding: '5px',
      lineHeight: 1
    },
    content: {
      padding: '15px'
    },
    footer: {
      padding: '15px',
      borderTop: '1px solid #f0f0f0',
      display: 'flex',
      justifyContent: 'flex-end'
    }
  };
  return (0, _jsxRuntime.jsx)("div", {
    style: styles.backdrop,
    onClick: handleBackdropPress,
    "data-testid": "modal-backdrop",
    children: (0, _jsxRuntime.jsxs)("div", {
      style: styles.modalContainer,
      onClick: function onClick(e) {
        return e.stopPropagation();
      },
      "data-testid": "modal-container",
      children: [title && (0, _jsxRuntime.jsxs)("div", {
        style: styles.header,
        "data-testid": "modal-header",
        children: [(0, _jsxRuntime.jsx)("h3", {
          style: styles.headerText,
          children: title
        }), (0, _jsxRuntime.jsx)("button", {
          style: styles.closeButton,
          onClick: onClose,
          "data-testid": "modal-close-button",
          children: "\xD7"
        })]
      }), (0, _jsxRuntime.jsx)("div", {
        style: styles.content,
        "data-testid": "modal-content-container",
        children: children
      }), footer && (0, _jsxRuntime.jsx)("div", {
        style: styles.footer,
        "data-testid": "modal-footer",
        children: footer
      })]
    })
  });
};
var _default = exports.default = Modal;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,