7ac7bcc34901546e457ae766cfe8f55f
_getJestObj().mock('react-native', function () {
  return {
    View: 'View',
    Text: 'Text',
    StyleSheet: {
      create: function create(styles) {
        return styles;
      }
    },
    ScrollView: 'ScrollView',
    KeyboardAvoidingView: 'KeyboardAvoidingView',
    TouchableWithoutFeedback: 'TouchableWithoutFeedback',
    Keyboard: {
      dismiss: jest.fn()
    },
    Platform: {
      OS: 'ios',
      select: jest.fn(function (obj) {
        return obj.ios;
      })
    }
  };
});
_getJestObj().mock("../../src/hooks/useTheme", function () {
  return {
    useTheme: function useTheme() {
      return {
        theme: {
          colors: {
            background: '#ffffff'
          },
          dark: false
        }
      };
    }
  };
});
_getJestObj().mock("../../src/components/LoadingIndicator", function () {
  return 'LoadingIndicator';
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _FormLayout = _interopRequireDefault(require("../../src/layouts/FormLayout"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('FormLayout', function () {
  it('renders without crashing', function () {
    var component = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
      children: (0, _jsxRuntime.jsx)("text", {
        children: "\uD3FC \uB0B4\uC6A9"
      })
    }));
    expect(component).toBeDefined();
  });
  it('shows loading indicator when loading is true', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
        loading: true,
        children: (0, _jsxRuntime.jsx)("text", {
          children: "\uD3FC \uB0B4\uC6A9"
        })
      })),
      container = _render.container;
    expect(container).toBeDefined();
  });
  it('renders with header and footer', function () {
    var component = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
      header: (0, _jsxRuntime.jsx)("text", {
        children: "\uD3FC \uD5E4\uB354"
      }),
      footer: (0, _jsxRuntime.jsx)("text", {
        children: "\uD3FC \uD478\uD130"
      }),
      children: (0, _jsxRuntime.jsx)("text", {
        children: "\uD3FC \uB0B4\uC6A9"
      })
    }));
    expect(component).toBeDefined();
  });
  it('renders with avoidKeyboard=false', function () {
    var component = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
      avoidKeyboard: false,
      children: (0, _jsxRuntime.jsx)("text", {
        children: "\uD3FC \uB0B4\uC6A9"
      })
    }));
    expect(component).toBeDefined();
  });
  it('applies custom styles', function () {
    var component = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_FormLayout.default, {
      style: {
        backgroundColor: 'red'
      },
      contentContainerStyle: {
        padding: 20
      },
      children: (0, _jsxRuntime.jsx)("text", {
        children: "\uD3FC \uB0B4\uC6A9"
      })
    }));
    expect(component).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,