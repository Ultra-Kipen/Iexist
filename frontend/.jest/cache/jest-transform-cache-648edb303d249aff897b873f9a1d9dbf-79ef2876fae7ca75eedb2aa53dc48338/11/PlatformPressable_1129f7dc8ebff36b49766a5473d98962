e6e96466764fdf65bcc056d69a3e143d
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PlatformPressable = PlatformPressable;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _native = require("@react-navigation/native");
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["disabled", "onPress", "onPressIn", "onPressOut", "android_ripple", "pressColor", "pressOpacity", "hoverEffect", "style", "children"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var AnimatedPressable = _reactNative.Animated.createAnimatedComponent(_reactNative.Pressable);
var ANDROID_VERSION_LOLLIPOP = 21;
var ANDROID_SUPPORTS_RIPPLE = _reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP;
var useNativeDriver = _reactNative.Platform.OS !== 'web';
function PlatformPressable(_ref) {
  var disabled = _ref.disabled,
    onPress = _ref.onPress,
    onPressIn = _ref.onPressIn,
    onPressOut = _ref.onPressOut,
    android_ripple = _ref.android_ripple,
    pressColor = _ref.pressColor,
    _ref$pressOpacity = _ref.pressOpacity,
    pressOpacity = _ref$pressOpacity === void 0 ? 0.3 : _ref$pressOpacity,
    hoverEffect = _ref.hoverEffect,
    style = _ref.style,
    children = _ref.children,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _useTheme = (0, _native.useTheme)(),
    dark = _useTheme.dark;
  var _React$useState = React.useState(function () {
      return new _reactNative.Animated.Value(1);
    }),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),
    opacity = _React$useState2[0];
  var animateTo = function animateTo(toValue, duration) {
    if (ANDROID_SUPPORTS_RIPPLE) {
      return;
    }
    _reactNative.Animated.timing(opacity, {
      toValue: toValue,
      duration: duration,
      easing: _reactNative.Easing.inOut(_reactNative.Easing.quad),
      useNativeDriver: useNativeDriver
    }).start();
  };
  var handlePress = function handlePress(e) {
    if (_reactNative.Platform.OS === 'web' && rest.href != null) {
      var _e$currentTarget;
      var hasModifierKey = e.metaKey || e.altKey || e.ctrlKey || e.shiftKey;
      var isLeftClick = e.button == null || e.button === 0;
      var isSelfTarget = [undefined, null, '', 'self'].includes((_e$currentTarget = e.currentTarget) == null ? void 0 : _e$currentTarget.target);
      if (!hasModifierKey && isLeftClick && isSelfTarget) {
        e.preventDefault();
        onPress == null || onPress(e);
      }
    } else {
      onPress == null || onPress(e);
    }
  };
  var handlePressIn = function handlePressIn(e) {
    animateTo(pressOpacity, 0);
    onPressIn == null || onPressIn(e);
  };
  var handlePressOut = function handlePressOut(e) {
    animateTo(1, 200);
    onPressOut == null || onPressOut(e);
  };
  return (0, _jsxRuntime.jsxs)(AnimatedPressable, Object.assign({
    accessible: true,
    accessibilityRole: _reactNative.Platform.OS === 'web' && rest.href != null ? 'link' : 'button',
    onPress: disabled ? undefined : handlePress,
    onPressIn: handlePressIn,
    onPressOut: handlePressOut,
    android_ripple: ANDROID_SUPPORTS_RIPPLE ? Object.assign({
      color: pressColor !== undefined ? pressColor : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)'
    }, android_ripple) : undefined,
    style: [{
      cursor: _reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'ios' ? 'pointer' : 'auto',
      opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1
    }, style]
  }, rest, {
    children: [(0, _jsxRuntime.jsx)(HoverEffect, Object.assign({}, hoverEffect)), children]
  }));
}
var css = String.raw;
var CLASS_NAME = `__react-navigation_elements_Pressable_hover`;
var CSS_TEXT = css`
  .${CLASS_NAME} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    background-color: var(--overlay-color);
    opacity: 0;
    transition: opacity 0.15s;
  }

  a:hover > .${CLASS_NAME}, button:hover > .${CLASS_NAME} {
    opacity: var(--overlay-hover-opacity);
  }

  a:active > .${CLASS_NAME}, button:active > .${CLASS_NAME} {
    opacity: var(--overlay-active-opacity);
  }
`;
var HoverEffect = function HoverEffect(_ref2) {
  var color = _ref2.color,
    _ref2$hoverOpacity = _ref2.hoverOpacity,
    hoverOpacity = _ref2$hoverOpacity === void 0 ? 0.08 : _ref2$hoverOpacity,
    _ref2$activeOpacity = _ref2.activeOpacity,
    activeOpacity = _ref2$activeOpacity === void 0 ? 0.16 : _ref2$activeOpacity;
  if (_reactNative.Platform.OS !== 'web' || color == null) {
    return null;
  }
  return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [(0, _jsxRuntime.jsx)("style", {
      href: CLASS_NAME,
      precedence: "elements",
      children: CSS_TEXT
    }), (0, _jsxRuntime.jsx)("div", {
      className: CLASS_NAME,
      style: {
        '--overlay-color': color,
        '--overlay-hover-opacity': hoverOpacity,
        '--overlay-active-opacity': activeOpacity
      }
    })]
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,