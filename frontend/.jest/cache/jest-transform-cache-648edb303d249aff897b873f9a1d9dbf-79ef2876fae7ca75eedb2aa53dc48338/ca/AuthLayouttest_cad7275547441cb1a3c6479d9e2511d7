436a1569f8ab87bb13376dd708303be5
_getJestObj().mock("../../src/hooks/useTheme", function () {
  return {
    useTheme: function useTheme() {
      return {
        theme: {
          colors: {
            background: '#ffffff'
          },
          dark: false
        }
      };
    }
  };
});
_getJestObj().mock("../../src/components/LoadingIndicator", function () {
  var React = require('react');
  var ReactNative = require('react-native');
  return {
    __esModule: true,
    default: function _default() {
      return React.createElement(ReactNative.View, {
        testID: 'loading-indicator'
      });
    }
  };
});
_getJestObj().mock('react-native/Libraries/Image/Image', function () {
  var React = require('react');
  return function (props) {
    return React.createElement('Image', Object.assign({}, props, {
      testID: props.testID || 'image'
    }));
  };
});
_getJestObj().mock('react-native/Libraries/Image/ImageBackground', function () {
  var React = require('react');
  return function (props) {
    return React.createElement('ImageBackground', Object.assign({}, props, {
      testID: props.testID || 'image-background'
    }), props.children);
  };
});
_getJestObj().mock("../../assets/images/logo.png", function () {
  return 'logo-path';
}, {
  virtual: true
});
_getJestObj().mock("../../assets/images/auth-background.jpg", function () {
  return 'background-path';
}, {
  virtual: true
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _reactNative2 = require("react-native");
var _AuthLayout = _interopRequireDefault(require("../../src/layouts/AuthLayout"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('AuthLayout', function () {
  it('renders children correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render.getByText;
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('shows loading indicator when loading is true', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        loading: true,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByTestId = _render2.getByTestId,
      queryByText = _render2.queryByText;
    expect(getByTestId('loading-indicator')).toBeTruthy();
    expect(queryByText('인증 내용')).toBeNull();
  });
  it('renders title and footer when provided', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        title: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uC81C\uBAA9"
        }),
        footer: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uD478\uD130"
        }),
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByText = _render3.getByText;
    expect(getByText('인증 제목')).toBeTruthy();
    expect(getByText('인증 푸터')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('renders with background image when imageBackground is true', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        imageBackground: true,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      getByTestId = _render4.getByTestId,
      getByText = _render4.getByText;
    expect(getByTestId('image-background')).toBeTruthy();
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('does not render logo when logoVisible is false', function () {
    var _render5 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        logoVisible: false,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      queryByTestId = _render5.queryByTestId,
      getByText = _render5.getByText;
    expect(getByText('인증 내용')).toBeTruthy();
  });
  it('renders with default background when imageBackground is false', function () {
    var _render6 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AuthLayout.default, {
        imageBackground: false,
        children: (0, _jsxRuntime.jsx)(_reactNative2.Text, {
          children: "\uC778\uC99D \uB0B4\uC6A9"
        })
      })),
      queryByTestId = _render6.queryByTestId,
      getByText = _render6.getByText;
    expect(getByText('인증 내용')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ1c2VUaGVtZSIsInRoZW1lIiwiY29sb3JzIiwiYmFja2dyb3VuZCIsImRhcmsiLCJSZWFjdCIsInJlcXVpcmUiLCJSZWFjdE5hdGl2ZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY3JlYXRlRWxlbWVudCIsIlZpZXciLCJ0ZXN0SUQiLCJwcm9wcyIsIk9iamVjdCIsImFzc2lnbiIsImNoaWxkcmVuIiwidmlydHVhbCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3QiLCJfcmVhY3ROYXRpdmUiLCJfcmVhY3ROYXRpdmUyIiwiX0F1dGhMYXlvdXQiLCJfanN4UnVudGltZSIsIl9yZXF1aXJlIiwiamVzdCIsImRlc2NyaWJlIiwiaXQiLCJfcmVuZGVyIiwicmVuZGVyIiwianN4IiwiVGV4dCIsImdldEJ5VGV4dCIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJfcmVuZGVyMiIsImxvYWRpbmciLCJnZXRCeVRlc3RJZCIsInF1ZXJ5QnlUZXh0IiwidG9CZU51bGwiLCJfcmVuZGVyMyIsInRpdGxlIiwiZm9vdGVyIiwiX3JlbmRlcjQiLCJpbWFnZUJhY2tncm91bmQiLCJfcmVuZGVyNSIsImxvZ29WaXNpYmxlIiwicXVlcnlCeVRlc3RJZCIsIl9yZW5kZXI2Il0sInNvdXJjZXMiOlsiQXV0aExheW91dC50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0ZXN0cy9sYXlvdXRzL0F1dGhMYXlvdXQudGVzdC50c3hcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IEF1dGhMYXlvdXQgZnJvbSAnLi4vLi4vc3JjL2xheW91dHMvQXV0aExheW91dCc7XHJcblxyXG4vLyB1c2VUaGVtZSDrqqjtgrlcclxuamVzdC5tb2NrKCcuLi8uLi9zcmMvaG9va3MvdXNlVGhlbWUnLCAoKSA9PiAoe1xyXG4gIHVzZVRoZW1lOiAoKSA9PiAoe1xyXG4gICAgdGhlbWU6IHtcclxuICAgICAgY29sb3JzOiB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJyNmZmZmZmYnLFxyXG4gICAgICB9LFxyXG4gICAgICBkYXJrOiBmYWxzZSxcclxuICAgIH0sXHJcbiAgfSksXHJcbn0pKTtcclxuXHJcbi8vIExvYWRpbmdJbmRpY2F0b3Ig66qo7YK5XHJcbmplc3QubW9jaygnLi4vLi4vc3JjL2NvbXBvbmVudHMvTG9hZGluZ0luZGljYXRvcicsICgpID0+IHtcclxuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbiAgY29uc3QgUmVhY3ROYXRpdmUgPSByZXF1aXJlKCdyZWFjdC1uYXRpdmUnKTtcclxuICByZXR1cm4ge1xyXG4gICAgX19lc01vZHVsZTogdHJ1ZSxcclxuICAgIGRlZmF1bHQ6ICgpID0+IFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3ROYXRpdmUuVmlldywgeyB0ZXN0SUQ6ICdsb2FkaW5nLWluZGljYXRvcicgfSksXHJcbiAgfTtcclxufSk7XHJcblxyXG4vLyBJbWFnZUJhY2tncm91bmTsmYAgSW1hZ2Ug66qo7YK5XHJcbmplc3QubW9jaygncmVhY3QtbmF0aXZlL0xpYnJhcmllcy9JbWFnZS9JbWFnZScsICgpID0+IHtcclxuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbiAgcmV0dXJuIChwcm9wczogeyB0ZXN0SUQ6IGFueTsgfSkgPT4ge1xyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ0ltYWdlJywge1xyXG4gICAgICAuLi5wcm9wcyxcclxuICAgICAgdGVzdElEOiBwcm9wcy50ZXN0SUQgfHwgJ2ltYWdlJyxcclxuICAgIH0pO1xyXG4gIH07XHJcbn0pO1xyXG5cclxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUvTGlicmFyaWVzL0ltYWdlL0ltYWdlQmFja2dyb3VuZCcsICgpID0+IHtcclxuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcbiAgcmV0dXJuIChwcm9wczogeyB0ZXN0SUQ6IGFueTsgY2hpbGRyZW46IGFueTsgfSkgPT4ge1xyXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ0ltYWdlQmFja2dyb3VuZCcsIHtcclxuICAgICAgLi4ucHJvcHMsXHJcbiAgICAgIHRlc3RJRDogcHJvcHMudGVzdElEIHx8ICdpbWFnZS1iYWNrZ3JvdW5kJyxcclxuICAgIH0sIHByb3BzLmNoaWxkcmVuKTtcclxuICB9O1xyXG59KTtcclxuXHJcbi8vIGFzc2V0cy9pbWFnZXMg66qo7YK5XHJcbmplc3QubW9jaygnLi4vLi4vYXNzZXRzL2ltYWdlcy9sb2dvLnBuZycsICgpID0+ICdsb2dvLXBhdGgnLCB7IHZpcnR1YWw6IHRydWUgfSk7XHJcbmplc3QubW9jaygnLi4vLi4vYXNzZXRzL2ltYWdlcy9hdXRoLWJhY2tncm91bmQuanBnJywgKCkgPT4gJ2JhY2tncm91bmQtcGF0aCcsIHsgdmlydHVhbDogdHJ1ZSB9KTtcclxuXHJcbmRlc2NyaWJlKCdBdXRoTGF5b3V0JywgKCkgPT4ge1xyXG4gIGl0KCdyZW5kZXJzIGNoaWxkcmVuIGNvcnJlY3RseScsICgpID0+IHtcclxuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSByZW5kZXIoXHJcbiAgICAgIDxBdXRoTGF5b3V0PlxyXG4gICAgICAgIDxUZXh0PuyduOymnSDrgrTsmqk8L1RleHQ+XHJcbiAgICAgIDwvQXV0aExheW91dD5cclxuICAgICk7XHJcbiAgICBcclxuICAgIGV4cGVjdChnZXRCeVRleHQoJ+yduOymnSDrgrTsmqknKSkudG9CZVRydXRoeSgpO1xyXG4gIH0pO1xyXG4gIFxyXG4gIGl0KCdzaG93cyBsb2FkaW5nIGluZGljYXRvciB3aGVuIGxvYWRpbmcgaXMgdHJ1ZScsICgpID0+IHtcclxuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQsIHF1ZXJ5QnlUZXh0IH0gPSByZW5kZXIoXHJcbiAgICAgIDxBdXRoTGF5b3V0IGxvYWRpbmc9e3RydWV9PlxyXG4gICAgICAgIDxUZXh0PuyduOymnSDrgrTsmqk8L1RleHQ+XHJcbiAgICAgIDwvQXV0aExheW91dD5cclxuICAgICk7XHJcbiAgICBcclxuICAgIGV4cGVjdChnZXRCeVRlc3RJZCgnbG9hZGluZy1pbmRpY2F0b3InKSkudG9CZVRydXRoeSgpO1xyXG4gICAgZXhwZWN0KHF1ZXJ5QnlUZXh0KCfsnbjspp0g64K07JqpJykpLnRvQmVOdWxsKCk7XHJcbiAgfSk7XHJcbiAgXHJcbiAgaXQoJ3JlbmRlcnMgdGl0bGUgYW5kIGZvb3RlciB3aGVuIHByb3ZpZGVkJywgKCkgPT4ge1xyXG4gICAgY29uc3QgeyBnZXRCeVRleHQgfSA9IHJlbmRlcihcclxuICAgICAgPEF1dGhMYXlvdXRcclxuICAgICAgICB0aXRsZT17PFRleHQ+7J247KadIOygnOuqqTwvVGV4dD59XHJcbiAgICAgICAgZm9vdGVyPXs8VGV4dD7snbjspp0g7ZG47YSwPC9UZXh0Pn1cclxuICAgICAgPlxyXG4gICAgICAgIDxUZXh0PuyduOymnSDrgrTsmqk8L1RleHQ+XHJcbiAgICAgIDwvQXV0aExheW91dD5cclxuICAgICk7XHJcbiAgICBcclxuICAgIGV4cGVjdChnZXRCeVRleHQoJ+yduOymnSDsoJzrqqknKSkudG9CZVRydXRoeSgpO1xyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgn7J247KadIO2RuO2EsCcpKS50b0JlVHJ1dGh5KCk7XHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCfsnbjspp0g64K07JqpJykpLnRvQmVUcnV0aHkoKTtcclxuICB9KTtcclxuICBcclxuICBpdCgncmVuZGVycyB3aXRoIGJhY2tncm91bmQgaW1hZ2Ugd2hlbiBpbWFnZUJhY2tncm91bmQgaXMgdHJ1ZScsICgpID0+IHtcclxuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQsIGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8QXV0aExheW91dCBpbWFnZUJhY2tncm91bmQ9e3RydWV9PlxyXG4gICAgICAgIDxUZXh0PuyduOymnSDrgrTsmqk8L1RleHQ+XHJcbiAgICAgIDwvQXV0aExheW91dD5cclxuICAgICk7XHJcbiAgICBcclxuICAgIGV4cGVjdChnZXRCeVRlc3RJZCgnaW1hZ2UtYmFja2dyb3VuZCcpKS50b0JlVHJ1dGh5KCk7XHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCfsnbjspp0g64K07JqpJykpLnRvQmVUcnV0aHkoKTtcclxuICB9KTtcclxuICBcclxuICBpdCgnZG9lcyBub3QgcmVuZGVyIGxvZ28gd2hlbiBsb2dvVmlzaWJsZSBpcyBmYWxzZScsICgpID0+IHtcclxuICAgIGNvbnN0IHsgcXVlcnlCeVRlc3RJZCwgZ2V0QnlUZXh0IH0gPSByZW5kZXIoXHJcbiAgICAgIDxBdXRoTGF5b3V0IGxvZ29WaXNpYmxlPXtmYWxzZX0+XHJcbiAgICAgICAgPFRleHQ+7J247KadIOuCtOyaqTwvVGV4dD5cclxuICAgICAgPC9BdXRoTGF5b3V0PlxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgLy8g66Gc6rOgIOydtOuvuOyngOqwgCDroIzrjZTrp4HrkJjsp4Ag7JWK7JWY64qU7KeAIO2ZleyduFxyXG4gICAgLy8g7Jes6riw7ISc64qUIOqwhOuLqO2eiCDrgrTsmqnsnbQg66CM642U66eB65CY64qU7KeA66eMIO2ZleyduFxyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgn7J247KadIOuCtOyaqScpKS50b0JlVHJ1dGh5KCk7XHJcbiAgfSk7XHJcbiAgXHJcbiAgaXQoJ3JlbmRlcnMgd2l0aCBkZWZhdWx0IGJhY2tncm91bmQgd2hlbiBpbWFnZUJhY2tncm91bmQgaXMgZmFsc2UnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB7IHF1ZXJ5QnlUZXN0SWQsIGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxyXG4gICAgICA8QXV0aExheW91dCBpbWFnZUJhY2tncm91bmQ9e2ZhbHNlfT5cclxuICAgICAgICA8VGV4dD7snbjspp0g64K07JqpPC9UZXh0PlxyXG4gICAgICA8L0F1dGhMYXlvdXQ+XHJcbiAgICApO1xyXG4gICAgXHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCfsnbjspp0g64K07JqpJykpLnRvQmVUcnV0aHkoKTtcclxuICB9KTtcclxufSk7Il0sIm1hcHBpbmdzIjoiQUFPQUEsV0FBQSxHQUFLQyxJQUFJLDZCQUE2QjtFQUFBLE9BQU87SUFDM0NDLFFBQVEsRUFBRSxTQUFWQSxRQUFRQSxDQUFBO01BQUEsT0FBUztRQUNmQyxLQUFLLEVBQUU7VUFDTEMsTUFBTSxFQUFFO1lBQ05DLFVBQVUsRUFBRTtVQUNkLENBQUM7VUFDREMsSUFBSSxFQUFFO1FBQ1I7TUFDRixDQUFDO0lBQUE7RUFDSCxDQUFDO0FBQUEsQ0FBQyxDQUFDO0FBR0hOLFdBQUEsR0FBS0MsSUFBSSwwQ0FBMEMsWUFBTTtFQUN2RCxJQUFNTSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7RUFDOUIsSUFBTUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsY0FBYyxDQUFDO0VBQzNDLE9BQU87SUFDTEUsVUFBVSxFQUFFLElBQUk7SUFDaEJDLE9BQU8sRUFBRSxTQUFUQSxRQUFPQSxDQUFBO01BQUEsT0FBUUosS0FBSyxDQUFDSyxhQUFhLENBQUNILFdBQVcsQ0FBQ0ksSUFBSSxFQUFFO1FBQUVDLE1BQU0sRUFBRTtNQUFvQixDQUFDLENBQUM7SUFBQTtFQUN2RixDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBR0ZkLFdBQUEsR0FBS0MsSUFBSSxDQUFDLG9DQUFvQyxFQUFFLFlBQU07RUFDcEQsSUFBTU0sS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0VBQzlCLE9BQU8sVUFBQ08sS0FBdUIsRUFBSztJQUNsQyxPQUFPUixLQUFLLENBQUNLLGFBQWEsQ0FBQyxPQUFPLEVBQUFJLE1BQUEsQ0FBQUMsTUFBQSxLQUM3QkYsS0FBSztNQUNSRCxNQUFNLEVBQUVDLEtBQUssQ0FBQ0QsTUFBTSxJQUFJO0lBQU8sRUFDaEMsQ0FBQztFQUNKLENBQUM7QUFDSCxDQUFDLENBQUM7QUFFRmQsV0FBQSxHQUFLQyxJQUFJ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