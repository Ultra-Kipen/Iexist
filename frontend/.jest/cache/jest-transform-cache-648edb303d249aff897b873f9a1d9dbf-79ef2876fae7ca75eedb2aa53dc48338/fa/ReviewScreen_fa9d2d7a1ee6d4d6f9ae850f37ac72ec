8fd551abb95d42157eee0db8165d7e71
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativePaper = require("react-native-paper");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var ReviewScreen = function ReviewScreen() {
  var _useState = (0, _react.useState)('weekly'),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    period = _useState2[0],
    setPeriod = _useState2[1];
  var theme = (0, _reactNativePaper.useTheme)();
  return (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_reactNativePaper.SegmentedButtons, {
      value: period,
      onValueChange: setPeriod,
      buttons: [{
        value: 'weekly',
        label: '주간'
      }, {
        value: 'monthly',
        label: '월간'
      }],
      style: styles.segmentedButtons
    }), (0, _jsxRuntime.jsxs)(_reactNativePaper.Title, {
      style: styles.title,
      children: ["\uB098\uC758 ", period === 'weekly' ? '주간' : '월간', " \uAE30\uB85D"]
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.imageGrid,
      children: [1, 2, 3, 4, 5, 6].map(function (item) {
        return (0, _jsxRuntime.jsx)(_reactNativePaper.Card, {
          style: styles.imageCard,
          children: (0, _jsxRuntime.jsx)(_reactNativePaper.Card.Cover, {
            source: {
              uri: `https://picsum.photos/300?random=${item}`
            }
          })
        }, item);
      })
    }), (0, _jsxRuntime.jsx)(_reactNativePaper.Button, {
      mode: "contained",
      onPress: function onPress() {
        return console.log('Show emotion graph');
      },
      style: styles.graphButton,
      children: "\uAC10\uC815 \uBCC0\uD654 \uADF8\uB798\uD504 \uBCF4\uAE30"
    }), (0, _jsxRuntime.jsx)(_reactNativePaper.Card, {
      style: styles.statsCard,
      children: (0, _jsxRuntime.jsxs)(_reactNativePaper.Card.Content, {
        children: [(0, _jsxRuntime.jsxs)(_reactNativePaper.Title, {
          children: ["\uC774\uBC88 ", period === 'weekly' ? '주' : '달', "\uC758 \uD1B5\uACC4"]
        }), (0, _jsxRuntime.jsx)(_reactNativePaper.Paragraph, {
          children: "\uAC00\uC7A5 \uB9CE\uC774 \uB290\uB080 \uAC10\uC815: \uD589\uBCF5"
        }), (0, _jsxRuntime.jsx)(_reactNativePaper.Paragraph, {
          children: "\uAC8C\uC2DC\uBB3C \uC218: 7\uAC1C"
        }), (0, _jsxRuntime.jsx)(_reactNativePaper.Paragraph, {
          children: "\uBC1B\uC740 \uACF5\uAC10: 23\uAC1C"
        })]
      })
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    padding: 16
  },
  segmentedButtons: {
    marginBottom: 16
  },
  title: {
    marginBottom: 16
  },
  imageGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between'
  },
  imageCard: {
    width: '48%',
    marginBottom: 16
  },
  graphButton: {
    marginVertical: 16
  },
  statsCard: {
    marginBottom: 16
  }
});
var _default = exports.default = ReviewScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfcmVhY3ROYXRpdmVQYXBlciIsIl9qc3hSdW50aW1lIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiUmV2aWV3U2NyZWVuIiwiX3VzZVN0YXRlIiwidXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkyIiwicGVyaW9kIiwic2V0UGVyaW9kIiwidGhlbWUiLCJ1c2VUaGVtZSIsImpzeHMiLCJTY3JvbGxWaWV3Iiwic3R5bGUiLCJzdHlsZXMiLCJjb250YWluZXIiLCJjaGlsZHJlbiIsImpzeCIsIlNlZ21lbnRlZEJ1dHRvbnMiLCJ2YWx1ZSIsIm9uVmFsdWVDaGFuZ2UiLCJidXR0b25zIiwibGFiZWwiLCJzZWdtZW50ZWRCdXR0b25zIiwiVGl0bGUiLCJ0aXRsZSIsIlZpZXciLCJpbWFnZUdyaWQiLCJtYXAiLCJpdGVtIiwiQ2FyZCIsImltYWdlQ2FyZCIsIkNvdmVyIiwic291cmNlIiwidXJpIiwiQnV0dG9uIiwibW9kZSIsIm9uUHJlc3MiLCJjb25zb2xlIiwibG9nIiwiZ3JhcGhCdXR0b24iLCJzdGF0c0NhcmQiLCJDb250ZW50IiwiUGFyYWdyYXBoIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImZsZXgiLCJwYWRkaW5nIiwibWFyZ2luQm90dG9tIiwiZmxleERpcmVjdGlvbiIsImZsZXhXcmFwIiwianVzdGlmeUNvbnRlbnQiLCJ3aWR0aCIsIm1hcmdpblZlcnRpY2FsIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiUmV2aWV3U2NyZWVuLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFZpZXcsIFNjcm9sbFZpZXcsIFN0eWxlU2hlZXQsIEltYWdlIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHtcclxuICAgIFNlZ21lbnRlZEJ1dHRvbnMsXHJcbiAgICBDYXJkLFxyXG4gICAgQnV0dG9uLFxyXG4gICAgVGl0bGUsXHJcbiAgICBQYXJhZ3JhcGgsXHJcbiAgICB1c2VUaGVtZVxyXG59IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XHJcblxyXG5jb25zdCBSZXZpZXdTY3JlZW4gPSAoKSA9PiB7XHJcbiAgICBjb25zdCBbcGVyaW9kLCBzZXRQZXJpb2RdID0gdXNlU3RhdGUoJ3dlZWtseScpO1xyXG4gICAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPFNjcm9sbFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxyXG4gICAgICAgICAgICA8U2VnbWVudGVkQnV0dG9uc1xyXG4gICAgICAgICAgICAgICAgdmFsdWU9e3BlcmlvZH1cclxuICAgICAgICAgICAgICAgIG9uVmFsdWVDaGFuZ2U9e3NldFBlcmlvZH1cclxuICAgICAgICAgICAgICAgIGJ1dHRvbnM9e1tcclxuICAgICAgICAgICAgICAgICAgICB7IHZhbHVlOiAnd2Vla2x5JywgbGFiZWw6ICfso7zqsIQnIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgeyB2YWx1ZTogJ21vbnRobHknLCBsYWJlbDogJ+yblOqwhCcgfSxcclxuICAgICAgICAgICAgICAgIF19XHJcbiAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLnNlZ21lbnRlZEJ1dHRvbnN9XHJcbiAgICAgICAgICAgIC8+XHJcblxyXG4gICAgICAgICAgICA8VGl0bGUgc3R5bGU9e3N0eWxlcy50aXRsZX0+64KY7J2YIHtwZXJpb2QgPT09ICd3ZWVrbHknID8gJ+yjvOqwhCcgOiAn7JuU6rCEJ30g6riw66GdPC9UaXRsZT5cclxuXHJcbiAgICAgICAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuaW1hZ2VHcmlkfT5cclxuICAgICAgICAgICAgICAgIHtbMSwgMiwgMywgNCwgNSwgNl0ubWFwKChpdGVtKSA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgPENhcmQga2V5PXtpdGVtfSBzdHlsZT17c3R5bGVzLmltYWdlQ2FyZH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxDYXJkLkNvdmVyIHNvdXJjZT17eyB1cmk6IGBodHRwczovL3BpY3N1bS5waG90b3MvMzAwP3JhbmRvbT0ke2l0ZW19YCB9fSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvQ2FyZD5cclxuICAgICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICA8L1ZpZXc+XHJcblxyXG4gICAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICAgICAgICBtb2RlPVwiY29udGFpbmVkXCJcclxuICAgICAgICAgICAgICAgIG9uUHJlc3M9eygpID0+IGNvbnNvbGUubG9nKCdTaG93IGVtb3Rpb24gZ3JhcGgnKX1cclxuICAgICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuZ3JhcGhCdXR0b259XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIOqwkOyglSDrs4DtmZQg6re4656Y7ZSEIOuztOq4sFxyXG4gICAgICAgICAgICA8L0J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgIDxDYXJkIHN0eWxlPXtzdHlsZXMuc3RhdHNDYXJkfT5cclxuICAgICAgICAgICAgICAgIDxDYXJkLkNvbnRlbnQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPFRpdGxlPuydtOuyiCB7cGVyaW9kID09PSAnd2Vla2x5JyA/ICfso7wnIDogJ+uLrCd97J2YIO2GteqzhDwvVGl0bGU+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBhcmFncmFwaD7qsIDsnqUg66eO7J20IOuKkOuCgCDqsJDsoJU6IO2WieuztTwvUGFyYWdyYXBoPlxyXG4gICAgICAgICAgICAgICAgICAgIDxQYXJhZ3JhcGg+6rKM7Iuc66y8IOyImDogN+qwnDwvUGFyYWdyYXBoPlxyXG4gICAgICAgICAgICAgICAgICAgIDxQYXJhZ3JhcGg+67Cb7J2AIOqzteqwkDogMjPqsJw8L1BhcmFncmFwaD5cclxuICAgICAgICAgICAgICAgIDwvQ2FyZC5Db250ZW50PlxyXG4gICAgICAgICAgICA8L0NhcmQ+XHJcbiAgICAgICAgPC9TY3JvbGxWaWV3PlxyXG4gICAgKTtcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICAgIGNvbnRhaW5lcjoge1xyXG4gICAgICAgIGZsZXg6IDEsXHJcbiAgICAgICAgcGFkZGluZzogMTYsXHJcbiAgICB9LFxyXG4gICAgc2VnbWVudGVkQnV0dG9uczoge1xyXG4gICAgICAgIG1hcmdpbkJvdHRvbTogMTYsXHJcbiAgICB9LFxyXG4gICAgdGl0bGU6IHtcclxuICAgICAgICBtYXJnaW5Cb3R0b206IDE2LFxyXG4gICAgfSxcclxuICAgIGltYWdlR3JpZDoge1xyXG4gICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxyXG4gICAgICAgIGZsZXhXcmFwOiAnd3JhcCcsXHJcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcclxuICAgIH0sXHJcbiAgICBpbWFnZUNhcmQ6IHtcclxuICAgICAgICB3aWR0aDogJzQ4JScsXHJcbiAgICAgICAgbWFyZ2luQm90dG9tOiAxNixcclxuICAgIH0sXHJcbiAgICBncmFwaEJ1dHRvbjoge1xyXG4gICAgICAgIG1hcmdpblZlcnRpY2FsOiAxNixcclxuICAgIH0sXHJcbiAgICBzdGF0c0NhcmQ6IHtcclxuICAgICAgICBtYXJnaW5Cb3R0b206IDE2LFxyXG4gICAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSZXZpZXdTY3JlZW47Il0s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