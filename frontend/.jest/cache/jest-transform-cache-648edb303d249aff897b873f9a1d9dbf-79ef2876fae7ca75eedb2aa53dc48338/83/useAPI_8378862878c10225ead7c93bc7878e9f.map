{"version":3,"names":["_react","require","_client","_interopRequireDefault","cov_pekx7u6ht","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","useAPI","url","method","arguments","length","undefined","options","_ref","useState","data","loading","error","_ref2","_slicedToArray2","default","state","setState","execute","useCallback","_ref3","_asyncToGenerator2","payload","prev","Object","assign","response","client","get","params","post","put","delete","Error","responseData","onSuccess","errorObj","onError","_x","apply","reset","_default","exports"],"sources":["useAPI.ts"],"sourcesContent":["// hooks/useAPI.ts\r\nimport { useState, useCallback } from 'react';\r\nimport client from '../services/api/client';\r\n\r\ninterface UseAPIOptions {\r\n  onSuccess?: (data: any) => void;\r\n  onError?: (error: Error) => void;\r\n  immediate?: boolean;\r\n}\r\n\r\ninterface APIState<T> {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: Error | null;\r\n}\r\n\r\nexport function useAPI<T = any, P = any>(\r\n  url: string,\r\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' = 'GET',\r\n  options?: UseAPIOptions\r\n) {\r\n  const [state, setState] = useState<APIState<T>>({\r\n    data: null,\r\n    loading: false,\r\n    error: null,\r\n  });\r\n  \r\n  const execute = useCallback(async (payload?: P) => {\r\n    setState(prev => ({ ...prev, loading: true, error: null }));\r\n    \r\n    try {\r\n      let response;\r\n      \r\n      switch (method) {\r\n        case 'GET':\r\n          // GET 메서드의 경우 파라미터를 명시적으로 전달\r\n          response = await client.get<T>(url, { params: payload });\r\n          break;\r\n        case 'POST':\r\n          response = await client.post<T>(url, payload);\r\n          break;\r\n        case 'PUT':\r\n          response = await client.put<T>(url, payload);\r\n          break;\r\n        case 'DELETE':\r\n          response = await client.delete<T>(url, { params: payload });\r\n          break;\r\n        default:\r\n          throw new Error(`지원되지 않는 메서드: ${method}`);\r\n      }\r\n      \r\n      const responseData = (response as any).data || response;\r\n      \r\n      setState({\r\n        data: responseData,\r\n        loading: false,\r\n        error: null,\r\n      });\r\n      \r\n      options?.onSuccess?.(responseData);\r\n      \r\n      return responseData;\r\n    } catch (error) {\r\n      const errorObj = error instanceof Error \r\n        ? error \r\n        : new Error('알 수 없는 오류가 발생했습니다');\r\n      \r\n      setState({\r\n        data: null,\r\n        loading: false,\r\n        error: errorObj,\r\n      });\r\n      \r\n      options?.onError?.(errorObj);\r\n      \r\n      throw errorObj;\r\n    }\r\n  }, [url, method, options]);\r\n  \r\n  const reset = useCallback(() => {\r\n    setState({\r\n      data: null,\r\n      loading: false,\r\n      error: null,\r\n    });\r\n  }, []);\r\n  \r\n  return {\r\n    ...state,\r\n    execute,\r\n    reset,\r\n  };\r\n}\r\n\r\nexport default useAPI;"],"mappings":";;;;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA4C,SAAAG,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAA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","ignoreList":[]}