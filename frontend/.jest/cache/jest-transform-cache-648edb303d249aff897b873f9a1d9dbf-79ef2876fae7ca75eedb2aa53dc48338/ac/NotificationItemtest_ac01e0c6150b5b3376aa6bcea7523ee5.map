{"version":3,"names":["_getJestObj","mock","jest","fn","_ref","name","useNotification","markAsRead","mockResolvedValue","undefined","deleteNotification","useNavigation","navigate","_interopRequireDefault","require","_react","_reactNative","_reactNative2","_NotificationItem","_jsxRuntime","_require","spyOn","Alert","mockImplementation","describe","mockNotification","id","user_id","content","notification_type","related_id","is_read","created_at","Date","toISOString","mockOnPress","beforeEach","clearAllMocks","it","_render","render","jsx","default","notification","onPress","getByText","expect","toBeTruthy","types","type","expectedIcon","forEach","_ref2","Object","assign","_render2","UNSAFE_root","iconElements","findAll","node","props","length","toBeGreaterThan","fiveMinutesAgo","setMinutes","getMinutes","_render3","_render4","getByTestId","readNotification","_render5","queryByTestId","toBeNull","_render6","notificationItem","fireEvent","press","toHaveBeenCalledTimes","_render7","alert","toHaveBeenCalledWith","arrayContaining","objectContaining","text"],"sources":["NotificationItem.test.tsx"],"sourcesContent":["// tests/components/NotificationItem.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { Alert, Text } from 'react-native';\r\nimport NotificationItem from '../../src/components/NotificationItem';\r\n\r\n// 모듈 모킹 수정\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => {\r\n  return jest.fn(({ name }) => {\r\n    return '<Icon name=\"' + name + '\" />';\r\n  });\r\n});\r\n\r\njest.mock('../../src/contexts/NotificationContext', () => ({\r\n  useNotification: () => ({\r\n    markAsRead: jest.fn().mockResolvedValue(undefined),\r\n    deleteNotification: jest.fn().mockResolvedValue(undefined),\r\n  }),\r\n}));\r\n\r\njest.mock('@react-navigation/native', () => ({\r\n  useNavigation: () => ({\r\n    navigate: jest.fn(),\r\n  }),\r\n}));\r\n\r\n// Alert.alert 모킹\r\njest.spyOn(Alert, 'alert').mockImplementation(jest.fn());\r\n\r\ndescribe('NotificationItem', () => {\r\n  const mockNotification = {\r\n    id: 1,\r\n    user_id: 1,\r\n    content: '새로운 댓글이 달렸습니다.',\r\n    notification_type: 'comment' as const,\r\n    related_id: 123,\r\n    is_read: false,\r\n    created_at: new Date().toISOString(),\r\n  };\r\n\r\n  const mockOnPress = jest.fn();\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n  it('renders notification content correctly', () => {\r\n    const { getByText } = render(\r\n      <NotificationItem notification={mockNotification} onPress={mockOnPress} />\r\n    );\r\n    \r\n    expect(getByText('새로운 댓글이 달렸습니다.')).toBeTruthy();\r\n    expect(getByText('방금 전')).toBeTruthy();\r\n  });\r\n\r\n  it('displays different icon based on notification type', () => {\r\n    const types = [\r\n      { type: 'like' as const, expectedIcon: 'heart-outline' },\r\n      { type: 'comment' as const, expectedIcon: 'comment-outline' },\r\n      { type: 'challenge' as const, expectedIcon: 'trophy-outline' },\r\n      { type: 'system' as const, expectedIcon: 'bell-outline' },\r\n    ];\r\n    \r\n    types.forEach(({ type, expectedIcon }) => {\r\n      const notification = { ...mockNotification, notification_type: type };\r\n      const { UNSAFE_root } = render(\r\n        <NotificationItem notification={notification} />\r\n      );\r\n      \r\n      // @ts-ignore\r\n      const iconElements = UNSAFE_root.findAll(node => \r\n        node.props && node.props.name === expectedIcon\r\n      );\r\n      \r\n      expect(iconElements.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n  it('formats relative time correctly', () => {\r\n    // 5분 전 날짜 생성\r\n    const fiveMinutesAgo = new Date();\r\n    fiveMinutesAgo.setMinutes(fiveMinutesAgo.getMinutes() - 5);\r\n    \r\n    const notification = {\r\n      ...mockNotification,\r\n      created_at: fiveMinutesAgo.toISOString(),\r\n    };\r\n    \r\n    const { getByText } = render(<NotificationItem notification={notification} />);\r\n    expect(getByText('5분 전')).toBeTruthy();\r\n  });\r\n\r\n  it('displays unread indicator for unread notifications', () => {\r\n    const { getByTestId } = render(\r\n      <NotificationItem notification={mockNotification} />\r\n    );\r\n    \r\n    // View 컴포넌트에 testID를 추가해야 함\r\n    expect(getByTestId('unread-indicator')).toBeTruthy();\r\n  });\r\n\r\n  it('does not display unread indicator for read notifications', () => {\r\n    const readNotification = {\r\n      ...mockNotification,\r\n      is_read: true,\r\n    };\r\n    \r\n    const { queryByTestId } = render(\r\n      <NotificationItem notification={readNotification} />\r\n    );\r\n    \r\n    expect(queryByTestId('unread-indicator')).toBeNull();\r\n  });\r\n\r\n// tests/components/NotificationItem.test.tsx - onPress 테스트 수정\r\nit('calls onPress when notification is tapped', () => {\r\n  const { getByTestId } = render(\r\n    <NotificationItem \r\n      notification={mockNotification} \r\n      onPress={mockOnPress} \r\n    />\r\n  );\r\n  \r\n  const notificationItem = getByTestId('notification-item');\r\n  fireEvent.press(notificationItem);\r\n  \r\n  // 비동기 작업을 고려하여 수정\r\n  expect(mockOnPress).toHaveBeenCalledTimes(1);\r\n});\r\n\r\n  it('shows alert when long pressed', () => {\r\n    const { getByTestId } = render(\r\n      <NotificationItem notification={mockNotification} />\r\n    );\r\n    \r\n    fireEvent(getByTestId('notification-item'), 'onLongPress');\r\n    \r\n    expect(Alert.alert).toHaveBeenCalledWith(\r\n      '알림 삭제',\r\n      '이 알림을 삭제하시겠습니까?',\r\n      expect.arrayContaining([\r\n        expect.objectContaining({ text: '취소' }),\r\n        expect.objectContaining({ text: '삭제' }),\r\n      ])\r\n    );\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}