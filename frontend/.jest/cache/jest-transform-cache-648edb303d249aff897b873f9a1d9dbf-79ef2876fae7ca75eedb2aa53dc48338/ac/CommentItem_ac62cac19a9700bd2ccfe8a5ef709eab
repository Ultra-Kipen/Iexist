cfb05bd843078f2e7b322e9133b69aac
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function cov_y91xgdjio() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\components\\CommentItem.tsx";
  var hash = "0817dcaa44d58f763b10310cd19a58c733fd0ede";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\components\\CommentItem.tsx",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 48
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "1": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "2": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 35,
          column: 8
        }
      },
      "3": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 58,
          column: 4
        }
      },
      "4": {
        start: {
          line: 61,
          column: 15
        },
        end: {
          line: 99,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 48
          },
          end: {
            line: 16,
            column: 49
          }
        },
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 23,
            column: 15
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 14
          },
          end: {
            line: 23,
            column: 15
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 36
          },
          end: {
            line: 25,
            column: 40
          }
        }, {
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 25,
            column: 51
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 35,
            column: 8
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 6
          },
          end: {
            line: 34,
            column: 48
          }
        }, {
          start: {
            line: 35,
            column: 6
          },
          end: {
            line: 35,
            column: 8
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 9
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 9
          },
          end: {
            line: 46,
            column: 15
          }
        }, {
          start: {
            line: 47,
            column: 10
          },
          end: {
            line: 49,
            column: 29
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 48
          },
          end: {
            line: 48,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 64
          },
          end: {
            line: 48,
            column: 73
          }
        }, {
          start: {
            line: 48,
            column: 76
          },
          end: {
            line: 48,
            column: 78
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 9
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 9
          },
          end: {
            line: 51,
            column: 16
          }
        }, {
          start: {
            line: 52,
            column: 10
          },
          end: {
            line: 54,
            column: 29
          }
        }],
        line: 51
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0817dcaa44d58f763b10310cd19a58c733fd0ede"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_y91xgdjio = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y91xgdjio();
cov_y91xgdjio().s[0]++;
var CommentItem = function CommentItem(_ref) {
  var content = _ref.content,
    userName = _ref.userName,
    isAnonymous = _ref.isAnonymous,
    createdAt = _ref.createdAt,
    onReply = _ref.onReply,
    onLike = _ref.onLike,
    _ref$likeCount = _ref.likeCount,
    likeCount = _ref$likeCount === void 0 ? (cov_y91xgdjio().b[0][0]++, 0) : _ref$likeCount;
  cov_y91xgdjio().f[0]++;
  var displayName = (cov_y91xgdjio().s[1]++, isAnonymous ? (cov_y91xgdjio().b[1][0]++, '익명') : (cov_y91xgdjio().b[1][1]++, userName));
  var formattedDate = (cov_y91xgdjio().s[2]++, createdAt ? (cov_y91xgdjio().b[2][0]++, new Date(createdAt).toLocaleDateString('ko-KR', {
    year: 'numeric',
    month: '2-digit',
    day: '2-digit',
    hour: '2-digit',
    minute: '2-digit',
    hour12: false
  }).replace(/\./g, '.').replace(/\s/g, ' ')) : (cov_y91xgdjio().b[2][1]++, ''));
  cov_y91xgdjio().s[3]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.header,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.userName,
        children: displayName
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.date,
        children: formattedDate
      })]
    }), "// content \uBD80\uBD84\uC5D0 testID \uCD94\uAC00", (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.content,
      testID: "content",
      children: content
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.footer,
      children: [(cov_y91xgdjio().b[3][0]++, onLike) && (cov_y91xgdjio().b[3][1]++, (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        onPress: onLike,
        style: styles.button,
        children: (0, _jsxRuntime.jsxs)(_reactNative.Text, {
          style: styles.buttonText,
          children: ["\uACF5\uAC10 ", likeCount > 0 ? (cov_y91xgdjio().b[4][0]++, likeCount) : (cov_y91xgdjio().b[4][1]++, '')]
        })
      })), (cov_y91xgdjio().b[5][0]++, onReply) && (cov_y91xgdjio().b[5][1]++, (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        onPress: onReply,
        style: styles.button,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.buttonText,
          children: "\uB2F5\uAE00"
        })
      }))]
    })]
  });
};
var styles = (cov_y91xgdjio().s[4]++, _reactNative.StyleSheet.create({
  container: {
    padding: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#EEEEEE',
    backgroundColor: '#FFFFFF'
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 6
  },
  userName: {
    fontWeight: '600',
    fontSize: 14,
    color: '#333333'
  },
  date: {
    fontSize: 12,
    color: '#999999'
  },
  content: {
    fontSize: 14,
    lineHeight: 20,
    color: '#333333',
    marginBottom: 8
  },
  footer: {
    flexDirection: 'row',
    justifyContent: 'flex-start'
  },
  button: {
    marginRight: 16
  },
  buttonText: {
    fontSize: 12,
    color: '#666666'
  }
}));
var _default = exports.default = CommentItem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9qc3hSdW50aW1lIiwiY292X3k5MXhnZGppbyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJDb21tZW50SXRlbSIsIl9yZWYiLCJjb250ZW50IiwidXNlck5hbWUiLCJpc0Fub255bW91cyIsImNyZWF0ZWRBdCIsIm9uUmVwbHkiLCJvbkxpa2UiLCJfcmVmJGxpa2VDb3VudCIsImxpa2VDb3VudCIsImRpc3BsYXlOYW1lIiwiZm9ybWF0dGVkRGF0ZSIsIkRhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJob3VyIiwibWludXRlIiwiaG91cjEyIiwicmVwbGFjZSIsImpzeHMiLCJWaWV3Iiwic3R5bGUiLCJzdHlsZXMiLCJjb250YWluZXIiLCJjaGlsZHJlbiIsImhlYWRlciIsImpzeCIsIlRleHQiLCJkYXRlIiwidGVzdElEIiwiZm9vdGVyIiwiVG91Y2hhYmxlT3BhY2l0eSIsIm9uUHJlc3MiLCJidXR0b24iLCJidXR0b25UZXh0IiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsInBhZGRpbmciLCJib3JkZXJCb3R0b21XaWR0aCIsImJvcmRlckJvdHRvbUNvbG9yIiwiYmFja2dyb3VuZENvbG9yIiwiZmxleERpcmVjdGlvbiIsImp1c3RpZnlDb250ZW50IiwibWFyZ2luQm90dG9tIiwiZm9udFdlaWdodCIsImZvbnRTaXplIiwiY29sb3IiLCJsaW5lSGVpZ2h0IiwibWFyZ2luUmlnaHQiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiQ29tbWVudEl0ZW0udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb21wb25lbnRzL0NvbW1lbnRJdGVtLnRzeFxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBTdHlsZVNoZWV0LCBUb3VjaGFibGVPcGFjaXR5IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuXHJcbmludGVyZmFjZSBDb21tZW50SXRlbVByb3BzIHtcclxuICBpZDogbnVtYmVyO1xyXG4gIGNvbnRlbnQ6IHN0cmluZztcclxuICB1c2VyTmFtZTogc3RyaW5nO1xyXG4gIGlzQW5vbnltb3VzOiBib29sZWFuO1xyXG4gIGNyZWF0ZWRBdDogc3RyaW5nO1xyXG4gIG9uUmVwbHk/OiAoKSA9PiB2b2lkO1xyXG4gIG9uTGlrZT86ICgpID0+IHZvaWQ7XHJcbiAgbGlrZUNvdW50PzogbnVtYmVyO1xyXG59XHJcblxyXG5jb25zdCBDb21tZW50SXRlbTogUmVhY3QuRkM8Q29tbWVudEl0ZW1Qcm9wcz4gPSAoe1xyXG4gIGNvbnRlbnQsXHJcbiAgdXNlck5hbWUsXHJcbiAgaXNBbm9ueW1vdXMsXHJcbiAgY3JlYXRlZEF0LFxyXG4gIG9uUmVwbHksXHJcbiAgb25MaWtlLFxyXG4gIGxpa2VDb3VudCA9IDAsXHJcbn0pID0+IHtcclxuICBjb25zdCBkaXNwbGF5TmFtZSA9IGlzQW5vbnltb3VzID8gJ+ydteuqhScgOiB1c2VyTmFtZTtcclxuICBjb25zdCBmb3JtYXR0ZWREYXRlID0gY3JlYXRlZEF0IFxyXG4gICAgPyBuZXcgRGF0ZShjcmVhdGVkQXQpLnRvTG9jYWxlRGF0ZVN0cmluZygna28tS1InLCB7XHJcbiAgICAgICAgeWVhcjogJ251bWVyaWMnLFxyXG4gICAgICAgIG1vbnRoOiAnMi1kaWdpdCcsXHJcbiAgICAgICAgZGF5OiAnMi1kaWdpdCcsXHJcbiAgICAgICAgaG91cjogJzItZGlnaXQnLFxyXG4gICAgICAgIG1pbnV0ZTogJzItZGlnaXQnLFxyXG4gICAgICAgIGhvdXIxMjogZmFsc2UsXHJcbiAgICAgIH0pLnJlcGxhY2UoL1xcLi9nLCAnLicpLnJlcGxhY2UoL1xccy9nLCAnICcpXHJcbiAgICA6ICcnO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxyXG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmhlYWRlcn0+XHJcbiAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy51c2VyTmFtZX0+e2Rpc3BsYXlOYW1lfTwvVGV4dD5cclxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmRhdGV9Pntmb3JtYXR0ZWREYXRlfTwvVGV4dD5cclxuICAgICAgPC9WaWV3PlxyXG4gICAgICAvLyBjb250ZW50IOu2gOu2hOyXkCB0ZXN0SUQg7LaU6rCAXHJcbjxUZXh0IHN0eWxlPXtzdHlsZXMuY29udGVudH0gdGVzdElEPVwiY29udGVudFwiPntjb250ZW50fTwvVGV4dD5cclxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5mb290ZXJ9PlxyXG4gICAgICAgIHtvbkxpa2UgJiYgKFxyXG4gICAgICAgICAgPFRvdWNoYWJsZU9wYWNpdHkgb25QcmVzcz17b25MaWtlfSBzdHlsZT17c3R5bGVzLmJ1dHRvbn0+XHJcbiAgICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuYnV0dG9uVGV4dH0+6rO16rCQIHtsaWtlQ291bnQgPiAwID8gbGlrZUNvdW50IDogJyd9PC9UZXh0PlxyXG4gICAgICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxyXG4gICAgICAgICl9XHJcbiAgICAgICAge29uUmVwbHkgJiYgKFxyXG4gICAgICAgICAgPFRvdWNoYWJsZU9wYWNpdHkgb25QcmVzcz17b25SZXBseX0gc3R5bGU9e3N0eWxlcy5idXR0b259PlxyXG4gICAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmJ1dHRvblRleHR9PuuLteq4gDwvVGV4dD5cclxuICAgICAgICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cclxuICAgICAgICApfVxyXG4gICAgICA8L1ZpZXc+XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBjb250YWluZXI6IHtcclxuICAgIHBhZGRpbmc6IDEyLFxyXG4gICAgYm9yZGVyQm90dG9tV2lkdGg6IDEsXHJcbiAgICBib3JkZXJCb3R0b21Db2xvcjogJyNFRUVFRUUnLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI0ZGRkZGRicsXHJcbiAgfSxcclxuICBoZWFkZXI6IHtcclxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxyXG4gICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcclxuICAgIG1hcmdpbkJvdHRvbTogNixcclxuICB9LFxyXG4gIHVzZXJOYW1lOiB7XHJcbiAgICBmb250V2VpZ2h0OiAnNjAwJyxcclxuICAgIGZvbnRTaXplOiAxNCxcclxuICAgIGNvbG9yOiAnIzMzMzMzMycsXHJcbiAgfSxcclxuICBkYXRlOiB7XHJcbiAgICBmb250U2l6ZTogMTIsXHJcbiAgICBjb2xvcjogJyM5OTk5OTknLFxyXG4gIH0sXHJcbiAgY29udGVudDoge1xyXG4gICAgZm9udFNpemU6IDE0LFxyXG4gICAgbGluZUhlaWdodDogMjAsXHJcbiAgICBjb2xvcjogJyMzMzMzMzMnLFxyXG4gICAgbWFyZ2luQm90dG9tOiA4LFxyXG4gIH0sXHJcbiAgZm9vdGVyOiB7XHJcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcclxuICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXHJcbiAgfSxcclxuICBidXR0b246IHtcclxuICAgIG1hcmdpblJpZ2h0OiAxNixcclxuICB9LFxyXG4gIGJ1dHRvblRleHQ6IHtcclxuICAgIGZvbnRTaXplOiAxMixcclxuICAgIGNvbG9yOiAnIzY2NjY2NicsXHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb21tZW50SXRlbTsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQXdFLElBQUFFLFdBQUEsR0FBQUYsT0FBQTtBQUFBLFNBQUFHLGNBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFVLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFB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