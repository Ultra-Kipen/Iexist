0b9164697013c4c2d16503d048796bd0
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMemoizedCallback = useMemoizedCallback;
var _react = require("react");
function cov_1bctzn1wze() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\hooks\\useMemoizedCallback.ts";
  var hash = "70264fd12be1268587e166fbcc9eee894dccadf3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\hooks\\useMemoizedCallback.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "1": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 20,
          column: 17
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "3": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 25,
          column: 16
        }
      },
      "4": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "useMemoizedCallback",
        decl: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 35
          }
        },
        loc: {
          start: {
            line: 14,
            column: 5
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 22
          }
        },
        loc: {
          start: {
            line: 23,
            column: 49
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 23
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "70264fd12be1268587e166fbcc9eee894dccadf3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1bctzn1wze = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bctzn1wze();
function useMemoizedCallback(callback, deps) {
  cov_1bctzn1wze().f[0]++;
  var callbackRef = (cov_1bctzn1wze().s[0]++, (0, _react.useRef)(callback));
  cov_1bctzn1wze().s[1]++;
  (0, _react.useEffect)(function () {
    cov_1bctzn1wze().f[1]++;
    cov_1bctzn1wze().s[2]++;
    callbackRef.current = callback;
  }, [callback]);
  cov_1bctzn1wze().s[3]++;
  return (0, _react.useCallback)(function () {
    cov_1bctzn1wze().f[2]++;
    cov_1bctzn1wze().s[4]++;
    return callbackRef.current.apply(callbackRef, arguments);
  }, deps);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiY292XzFiY3R6bjF3emUiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJ1c2VNZW1vaXplZENhbGxiYWNrIiwiY2FsbGJhY2siLCJkZXBzIiwiY2FsbGJhY2tSZWYiLCJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJjdXJyZW50IiwidXNlQ2FsbGJhY2siLCJhcHBseSIsImFyZ3VtZW50cyJdLCJzb3VyY2VzIjpbInVzZU1lbW9pemVkQ2FsbGJhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlRWZmZWN0LCBEZXBlbmRlbmN5TGlzdCB9IGZyb20gJ3JlYWN0JztcclxuXHJcbi8qKlxyXG4gKiB1c2VDYWxsYmFja+ydmCDtmZXsnqUg67KE7KCE7Jy866GcLCDtlajsiJgg64K067aA7JeQ7IScIOyCrOyaqe2VmOuKlCDqsJLrk6TsnYQg7Lqh7LKY7ZWY6rOgXHJcbiAqIO2YhOyerCDroIzrjZTrp4Eg7Iuc7KCQ7J2YIOy1nOyLoCDqsJLsnYQg7ZWt7IOBIOycoOyngO2VqeuLiOuLpC5cclxuICogXHJcbiAqIEBwYXJhbSBjYWxsYmFjayDrqZTrqqjsnbTsoJzsnbTshZjtlaAg7L2c67CxIO2VqOyImFxyXG4gKiBAcGFyYW0gZGVwcyDsnZjsobTshLEg67Cw7Je0XHJcbiAqIEByZXR1cm5zIOuplOuqqOydtOygnOydtOyFmOuQnCDsvZzrsLEg7ZWo7IiYXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlTWVtb2l6ZWRDYWxsYmFjazxUIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBhbnk+KFxyXG4gIGNhbGxiYWNrOiBULFxyXG4gIGRlcHM6IERlcGVuZGVuY3lMaXN0XHJcbik6IFQge1xyXG4gIGNvbnN0IGNhbGxiYWNrUmVmID0gdXNlUmVmPFQ+KGNhbGxiYWNrKTtcclxuXHJcbiAgLy8g7L2c67CxIO2VqOyImCDssLjsobAg7JeF642w7J207Yq4XHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNhbGxiYWNrUmVmLmN1cnJlbnQgPSBjYWxsYmFjaztcclxuICB9LCBbY2FsbGJhY2tdKTtcclxuXHJcbiAgLy8g7JWI7KCV7KCB7J24IO2VqOyImCDssLjsobAg67CY7ZmYXHJcbiAgcmV0dXJuIHVzZUNhbGxiYWNrKCguLi5hcmdzOiBQYXJhbWV0ZXJzPFQ+KSA9PiB7XHJcbiAgICByZXR1cm4gY2FsbGJhY2tSZWYuY3VycmVudCguLi5hcmdzKTtcclxuICB9LCBkZXBzKSBhcyBUO1xyXG59Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQXVFLFNBQUFDLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWxCLElBQUE7RUFBQTtFQUFBLElBQUFtQixRQUFBLEdBQUFsQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWdCLFFBQUEsQ0FBQXBCLElBQUEsS0FBQW9CLFFBQUEsQ0FBQXBCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFtQixRQUFBLENBQUFwQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFnQixjQUFBLEdBQUFELFFBQUEsQ0FBQXBCLElBQUE7RUFBQTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBc0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXRCLGNBQUE7QUFVaEUsU0FBU3VCLG1CQUFtQkEsQ0FDakNDLFFBQVcsRUFDWEMsSUFBb0IsRUFDakI7RUFBQXpCLGNBQUEsR0FBQWtCLENBQUE7RUFDSCxJQUFNUSxXQUFXLElBQUExQixjQUFBLEdBQUFpQixDQUFBLE9BQUcsSUFBQVUsYUFBTSxFQUFJSCxRQUFRLENBQUM7RUFBQ3hCLGNBQUEsR0FBQWlCLENBQUE7RUFHeEMsSUFBQVcsZ0JBQVMsRUFBQyxZQUFNO0lBQUE1QixjQUFBLEdBQUFrQixDQUFBO0lBQUFsQixjQUFBLEdBQUFpQixDQUFBO0lBQ2RTLFdBQVcsQ0FBQ0csT0FBTyxHQUFHTCxRQUFRO0VBQ2hDLENBQUMsRUFBRSxDQUFDQSxRQUFRLENBQUMsQ0FBQztFQUFDeEIsY0FBQSxHQUFBaUIsQ0FBQTtFQUdmLE9BQU8sSUFBQWEsa0JBQVcsRUFBQyxZQUE0QjtJQUFBOUIsY0FBQSxHQUFBa0IsQ0FBQTtJQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQTtJQUM3QyxPQUFPUyxXQUFXLENBQUNHLE9BQU8sQ0FBQUUsS0FBQSxDQUFuQkwsV0FBVyxFQUFBTSxTQUFnQixDQUFDO0VBQ3JDLENBQUMsRUFBRVAsSUFBSSxDQUFDO0FBQ1YiLCJpZ25vcmVMaXN0IjpbXX0=