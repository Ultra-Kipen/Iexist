{"version":3,"names":["_react","require","cov_1bctzn1wze","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","useMemoizedCallback","callback","deps","callbackRef","useRef","useEffect","current","useCallback","apply","arguments"],"sources":["useMemoizedCallback.ts"],"sourcesContent":["import { useCallback, useRef, useEffect, DependencyList } from 'react';\r\n\r\n/**\r\n * useCallback의 확장 버전으로, 함수 내부에서 사용하는 값들을 캡처하고\r\n * 현재 렌더링 시점의 최신 값을 항상 유지합니다.\r\n * \r\n * @param callback 메모이제이션할 콜백 함수\r\n * @param deps 의존성 배열\r\n * @returns 메모이제이션된 콜백 함수\r\n */\r\nexport function useMemoizedCallback<T extends (...args: any[]) => any>(\r\n  callback: T,\r\n  deps: DependencyList\r\n): T {\r\n  const callbackRef = useRef<T>(callback);\r\n\r\n  // 콜백 함수 참조 업데이트\r\n  useEffect(() => {\r\n    callbackRef.current = callback;\r\n  }, [callback]);\r\n\r\n  // 안정적인 함수 참조 반환\r\n  return useCallback((...args: Parameters<T>) => {\r\n    return callbackRef.current(...args);\r\n  }, deps) as T;\r\n}"],"mappings":"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","ignoreList":[]}