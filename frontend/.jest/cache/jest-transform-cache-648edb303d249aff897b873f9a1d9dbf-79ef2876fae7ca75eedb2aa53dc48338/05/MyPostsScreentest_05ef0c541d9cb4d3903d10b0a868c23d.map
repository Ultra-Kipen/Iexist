{"version":3,"names":["_getJestObj","mock","getMyPosts","jest","fn","Promise","resolve","data","posts","post_id","content","emotion_summary","like_count","comment_count","created_at","deletePost","success","Button","Chip","Portal","Card","Dialog","SafeAreaView","useNavigation","navigate","mockNavigate","goBack","addListener","mockAddListener","_interopRequireDefault","require","_MyPostsScreen","_require","describe","it","expect","MyPostsScreen","toBeDefined"],"sources":["MyPostsScreen.test.tsx"],"sourcesContent":["// __TESTS__/screens/MyPostsScreen.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport MyPostsScreen from '../../src/screens/MyPostsScreen';\r\n\r\n// 서비스 모킹\r\njest.mock('../../src/services/api/postService', () => ({\r\n  getMyPosts: jest.fn(() => Promise.resolve({\r\n    data: {\r\n      posts: [\r\n        {\r\n          post_id: 1,\r\n          content: '첫 번째 테스트 게시물입니다.',\r\n          emotion_summary: '행복',\r\n          like_count: 5,\r\n          comment_count: 2,\r\n          created_at: '2025-03-01T12:00:00Z',\r\n        }\r\n      ]\r\n    }\r\n  })),\r\n  deletePost: jest.fn(() => Promise.resolve({ data: { success: true } }))\r\n}));\r\n\r\n// 컴포넌트 모킹\r\n// 각 컴포넌트를 개별적으로 모킹\r\njest.mock('react-native-paper', () => {\r\n  return {\r\n    // 기본 컴포넌트\r\n    Button: 'Button',\r\n    Chip: 'Chip',\r\n    Portal: 'Portal',\r\n    \r\n    // 중첩 구조를 가진 컴포넌트를 객체가 아닌 함수로 모킹\r\n    Card: function() {\r\n      return 'Card';\r\n    },\r\n    Dialog: function() {\r\n      return 'Dialog';\r\n    }\r\n  };\r\n});\r\n\r\n// Card와 Dialog 하위 컴포넌트를 개별적으로 모킹\r\njest.mock('react-native-paper/lib/commonjs/components/Card/CardContent', () => 'CardContent');\r\njest.mock('react-native-paper/lib/commonjs/components/Card/CardActions', () => 'CardActions');\r\njest.mock('react-native-paper/lib/commonjs/components/Dialog/DialogTitle', () => 'DialogTitle');\r\njest.mock('react-native-paper/lib/commonjs/components/Dialog/DialogContent', () => 'DialogContent');\r\njest.mock('react-native-paper/lib/commonjs/components/Dialog/DialogActions', () => 'DialogActions');\r\n\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'Icon');\r\njest.mock('react-native-safe-area-context', () => ({ SafeAreaView: 'SafeAreaView' }));\r\n\r\n// 네비게이션 모킹\r\nconst mockNavigate = jest.fn();\r\nconst mockAddListener = jest.fn(() => jest.fn());\r\n\r\njest.mock('@react-navigation/native', () => ({\r\n  useNavigation: () => ({\r\n    navigate: mockNavigate,\r\n    goBack: jest.fn(),\r\n    addListener: mockAddListener,\r\n  }),\r\n}));\r\n\r\n// 간단한 테스트\r\ndescribe('MyPostsScreen', () => {\r\n  it('imports without crashing', () => {\r\n    expect(MyPostsScreen).toBeDefined();\r\n  });\r\n\r\n  // 더 복잡한 테스트는 나중에 추가\r\n});"],"mappings":"AAMAA,WAAA,GAAKC,IAAI,uCAAuC;EAAA,OAAO;IACrDC,UAAU,EAAEC,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC;QACxCC,IAAI,EAAE;UACJC,KAAK,EAAE,CACL;YACEC,OAAO,EAAE,CAAC;YACVC,OAAO,EAAE,kBAAkB;YAC3BC,eAAe,EAAE,IAAI;YACrBC,UAAU,EAAE,CAAC;YACbC,aAAa,EAAE,CAAC;YAChBC,UAAU,EAAE;UACd,CAAC;QAEL;MACF,CAAC,CAAC;IAAA,EAAC;IACHC,UAAU,EAAEZ,IAAI,CAACC,EAAE,CAAC;MAAA,OAAMC,OAAO,CAACC,OAAO,CAAC;QAAEC,IAAI,EAAE;UAAES,OAAO,EAAE;QAAK;MAAE,CAAC,CAAC;IAAA;EACxE,CAAC;AAAA,CAAC,CAAC;AAIHhB,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE,YAAM;EACpC,OAAO;IAELgB,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,QAAQ;IAGhBC,IAAI,EAAE,SAANA,IAAIA,CAAA,EAAa;MACf,OAAO,MAAM;IACf,CAAC;IACDC,MAAM,EAAE,SAARA,MAAMA,CAAA,EAAa;MACjB,OAAO,QAAQ;IACjB;EACF,CAAC;AACH,CAAC,CAAC;AAGFrB,WAAA,GAAKC,IAAI,CAAC,6DAA6D,EAAE;EAAA,OAAM,aAAa;AAAA,EAAC;AAC7FD,WAAA,GAAKC,IAAI,CAAC,6DAA6D,EAAE;EAAA,OAAM,aAAa;AAAA,EAAC;AAC7FD,WAAA,GAAKC,IAAI,CAAC,+DAA+D,EAAE;EAAA,OAAM,aAAa;AAAA,EAAC;AAC/FD,WAAA,GAAKC,IAAI,CAAC,iEAAiE,EAAE;EAAA,OAAM,eAAe;AAAA,EAAC;AACnGD,WAAA,GAAKC,IAAI,CAAC,iEAAiE,EAAE;EAAA,OAAM,eAAe;AAAA,EAAC;AAEnGD,WAAA,GAAKC,IAAI,CAAC,kDAAkD,EAAE;EAAA,OAAM,MAAM;AAAA,EAAC;AAC3ED,WAAA,GAAKC,IAAI,CAAC,gCAAgC,EAAE;EAAA,OAAO;IAAEqB,YAAY,EAAE;EAAe,CAAC;AAAA,CAAC,CAAC;AAMrFtB,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE;EAAA,OAAO;IAC3CsB,aAAa,EAAE,SAAfA,aAAaA,CAAA;MAAA,OAAS;QACpBC,QAAQ,EAAEC,YAAY;QACtBC,MAAM,EAAEvB,IAAI,CAACC,EAAE,CAAC,CAAC;QACjBuB,WAAW,EAAEC;MACf,CAAC;IAAA;EACH,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AA5DJ,IAAAC,cAAA,GAAAF,sBAAA,CAAAC,OAAA;AAA4D,SAAA9B,YAAA;EAAA,IAAAgC,QAAA,GAAAF,OAAA;IAAA3B,IAAA,GAAA6B,QAAA,CAAA7B,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAmD5D,IAAMsB,YAAY,GAAGtB,IAAI,CAACC,EAAE,CAAC,CAAC;AAC9B,IAAMwB,eAAe,GAAGzB,IAAI,CAACC,EAAE,CAAC;EAAA,OAAMD,IAAI,CAACC,EAAE,CAAC,CAAC;AAAA,EAAC;AAWhD6B,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,EAAE,CAAC,0BAA0B,EAAE,YAAM;IACnCC,MAAM,CAACC,sBAAa,CAAC,CAACC,WAAW,CAAC,CAAC;EACrC,CAAC,CAAC;AAGJ,CAAC,CAAC","ignoreList":[]}