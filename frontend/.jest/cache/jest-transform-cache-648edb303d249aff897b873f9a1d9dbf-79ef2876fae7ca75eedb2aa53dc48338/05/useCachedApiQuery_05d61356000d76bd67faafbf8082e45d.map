{"version":3,"names":["_react","require","_useCache2","useCachedApiQuery","endpoint","params","options","arguments","length","undefined","ttl","_options$autoLoad","autoLoad","onError","onSuccess","fetchData","useCallback","_asyncToGenerator2","default","queryString","URLSearchParams","toString","response","fetch","ok","Error","status","result","json","success","error","data","cacheKey","JSON","stringify","_useCache","useCache","loading","refetch","invalidateCache"],"sources":["useCachedApiQuery.ts"],"sourcesContent":["import { useCallback } from 'react';\r\nimport { useCache } from './useCache';\r\nimport { ApiResponse } from '../types/api';\r\n\r\ninterface ApiQueryOptions {\r\n  /** 캐시 유효 시간 (밀리초) */\r\n  ttl?: number;\r\n  /** 자동 로딩 여부 */\r\n  autoLoad?: boolean;\r\n  /** 에러 핸들링 함수 */\r\n  onError?: (error: Error) => void;\r\n  /** 성공 핸들링 함수 */\r\n  onSuccess?: <T>(data: T) => void;\r\n}\r\n\r\n/**\r\n * API 요청을 캐싱하는 훅\r\n * @param endpoint API 엔드포인트\r\n * @param params API 파라미터 객체\r\n * @param options 캐시 옵션\r\n */\r\nexport function useCachedApiQuery<T = any, P = Record<string, any>>(\r\n  endpoint: string,\r\n  params?: P,\r\n  options: ApiQueryOptions = {}\r\n) {\r\n  const { ttl, autoLoad = true, onError, onSuccess } = options;\r\n  \r\n  // API 요청 함수\r\n  const fetchData = useCallback(async (): Promise<T> => {\r\n    const queryString = params \r\n      ? `?${new URLSearchParams(params as any).toString()}` \r\n      : '';\r\n    const response = await fetch(`${endpoint}${queryString}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`API 요청 오류: ${response.status}`);\r\n    }\r\n    \r\n    const result = await response.json() as ApiResponse<T>;\r\n    \r\n    if (!result.success) {\r\n      throw new Error(result.error || '알 수 없는 오류가 발생했습니다.');\r\n    }\r\n    \r\n    // 성공 콜백\r\n    if (onSuccess && result.data) {\r\n      onSuccess(result.data);\r\n    }\r\n    \r\n    // data가 없는 경우에 대한 처리 추가\r\n    if (result.data === undefined) {\r\n      throw new Error('API 응답에 데이터가 없습니다.');\r\n    }\r\n    \r\n    return result.data;\r\n  }, [endpoint, params, onSuccess]);\r\n  \r\n  // 캐시 키 생성\r\n  const cacheKey = `api:${endpoint}:${JSON.stringify(params || {})}`;\r\n  \r\n  const { \r\n    data, \r\n    loading, \r\n    error, \r\n    refetch, \r\n    invalidateCache \r\n  } = useCache<T>(cacheKey, fetchData, { ttl, autoLoad });\r\n  \r\n  // 에러 핸들링\r\n  if (error && onError) {\r\n    onError(error);\r\n  }\r\n  \r\n  return { \r\n    data, \r\n    loading, \r\n    error, \r\n    refetch, \r\n    invalidateCache \r\n  };\r\n}"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAoBO,SAASE,iBAAiBA,CAC/BC,QAAgB,EAChBC,MAAU,EAEV;EAAA,IADAC,OAAwB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE7B,IAAQG,GAAG,GAA0CJ,OAAO,CAApDI,GAAG;IAAAC,iBAAA,GAA0CL,OAAO,CAA/CM,QAAQ;IAARA,QAAQ,GAAAD,iBAAA,cAAG,IAAI,GAAAA,iBAAA;IAAEE,OAAO,GAAgBP,OAAO,CAA9BO,OAAO;IAAEC,SAAS,GAAKR,OAAO,CAArBQ,SAAS;EAGhD,IAAMC,SAAS,GAAG,IAAAC,kBAAW,MAAAC,kBAAA,CAAAC,OAAA,EAAC,aAAwB;IACpD,IAAMC,WAAW,GAAGd,MAAM,GACtB,IAAI,IAAIe,eAAe,CAACf,MAAa,CAAC,CAACgB,QAAQ,CAAC,CAAC,EAAE,GACnD,EAAE;IACN,IAAMC,QAAQ,SAASC,KAAK,CAAC,GAAGnB,QAAQ,GAAGe,WAAW,EAAE,CAAC;IAEzD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAClD;IAEA,IAAMC,MAAM,SAASL,QAAQ,CAACM,IAAI,CAAC,CAAmB;IAEtD,IAAI,CAACD,MAAM,CAACE,OAAO,EAAE;MACnB,MAAM,IAAIJ,KAAK,CAACE,MAAM,CAACG,KAAK,IAAI,oBAAoB,CAAC;IACvD;IAGA,IAAIhB,SAAS,IAAIa,MAAM,CAACI,IAAI,EAAE;MAC5BjB,SAAS,CAACa,MAAM,CAACI,IAAI,CAAC;IACxB;IAGA,IAAIJ,MAAM,CAACI,IAAI,KAAKtB,SAAS,EAAE;MAC7B,MAAM,IAAIgB,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,OAAOE,MAAM,CAACI,IAAI;EACpB,CAAC,GAAE,CAAC3B,QAAQ,EAAEC,MAAM,EAAES,SAAS,CAAC,CAAC;EAGjC,IAAMkB,QAAQ,GAAG,OAAO5B,QAAQ,IAAI6B,IAAI,CAACC,SAAS,CAAC7B,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE;EAElE,IAAA8B,SAAA,GAMI,IAAAC,mBAAQ,EAAIJ,QAAQ,EAAEjB,SAAS,EAAE;MAAEL,GAAG,EAAHA,GAAG;MAAEE,QAAQ,EAARA;IAAS,CAAC,CAAC;IALrDmB,IAAI,GAAAI,SAAA,CAAJJ,IAAI;IACJM,OAAO,GAAAF,SAAA,CAAPE,OAAO;IACPP,KAAK,GAAAK,SAAA,CAALL,KAAK;IACLQ,OAAO,GAAAH,SAAA,CAAPG,OAAO;IACPC,eAAe,GAAAJ,SAAA,CAAfI,eAAe;EAIjB,IAAIT,KAAK,IAAIjB,OAAO,EAAE;IACpBA,OAAO,CAACiB,KAAK,CAAC;EAChB;EAEA,OAAO;IACLC,IAAI,EAAJA,IAAI;IACJM,OAAO,EAAPA,OAAO;IACPP,KAAK,EAALA,KAAK;IACLQ,OAAO,EAAPA,OAAO;IACPC,eAAe,EAAfA;EACF,CAAC;AACH","ignoreList":[]}