{"version":3,"names":["_getJestObj","mock","alert","jest","fn","Text","Chip","Button","TextInput","ActivityIndicator","getAllEmotions","recordEmotions","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_EmotionLogScreen","_emotionService","_jsxRuntime","_require","describe","mockNavigation","goBack","mockEmotions","emotion_id","name","icon","color","beforeEach","clearAllMocks","emotionService","mockResolvedValue","data","status","it","default","_render","render","jsx","navigation","getByTestId","waitFor","expect","toBeTruthy","_render2","toHaveBeenCalled","mockRejectedValue","Error","toHaveBeenCalledWith"],"sources":["EmotionLogScreen.unit.test.tsx"],"sourcesContent":["// EmotionLogScreen.unit.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\r\nimport EmotionLogScreen from '../../../src/screens/EmotionLogScreen';\r\nimport emotionService from '../../../src/services/api/emotionService';\r\n\r\n// Alert 모킹 - 별도 파일 경로로 직접 모킹\r\njest.mock('react-native/Libraries/Alert/Alert', () => ({\r\n  alert: jest.fn()\r\n}));\r\n\r\n// 간단한 문자열 모킹 사용\r\njest.mock('react-native-paper', () => ({\r\n  Text: 'Text',\r\n  Chip: 'Chip',\r\n  Button: 'Button',\r\n  TextInput: 'TextInput',\r\n  ActivityIndicator: 'ActivityIndicator'\r\n}));\r\n\r\n// MaterialCommunityIcons 모킹\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'MaterialCommunityIcons');\r\n\r\n// emotionService 모킹\r\njest.mock('../../../src/services/api/emotionService', () => ({\r\n  getAllEmotions: jest.fn(),\r\n  recordEmotions: jest.fn(),\r\n}));\r\n\r\ndescribe('EmotionLogScreen', () => {\r\n  const mockNavigation = {\r\n    goBack: jest.fn(),\r\n  };\r\n\r\n  const mockEmotions = [\r\n    { \r\n      emotion_id: 1, \r\n      name: '행복', \r\n      icon: 'happy-icon', \r\n      color: '#FFD700' \r\n    },\r\n    { \r\n      emotion_id: 2, \r\n      name: '슬픔', \r\n      icon: 'sad-icon', \r\n      color: '#4682B4' \r\n    }\r\n  ];\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // 모든 테스트에 대한 기본 모킹 설정\r\n    (emotionService.getAllEmotions as jest.Mock).mockResolvedValue({\r\n      data: { \r\n        status: 'success', \r\n        data: mockEmotions \r\n      }\r\n    });\r\n  });\r\n\r\n  it('renders the screen correctly', async () => {\r\n    const { getByTestId } = render(\r\n      <EmotionLogScreen navigation={mockNavigation} />\r\n    );\r\n\r\n    // 화면이 렌더링되는지만 확인\r\n    await waitFor(() => {\r\n      expect(getByTestId('emotion-submit-button')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  it('calls recordEmotions when submit button is pressed', async () => {\r\n    // recordEmotions 성공 모킹\r\n    (emotionService.recordEmotions as jest.Mock).mockResolvedValue({\r\n      data: { status: 'success' }\r\n    });\r\n\r\n    const { getByTestId } = render(\r\n      <EmotionLogScreen navigation={mockNavigation} />\r\n    );\r\n    \r\n    // 감정 기록 버튼이 렌더링될 때까지 대기\r\n    await waitFor(() => {\r\n      expect(getByTestId('emotion-submit-button')).toBeTruthy();\r\n    });\r\n    \r\n    // API 호출 확인\r\n    expect(emotionService.getAllEmotions).toHaveBeenCalled();\r\n  });\r\n\r\n  it('handles API error', async () => {\r\n    // getAllEmotions 실패 모킹\r\n    (emotionService.getAllEmotions as jest.Mock).mockRejectedValue(new Error('API 에러'));\r\n\r\n    render(<EmotionLogScreen navigation={mockNavigation} />);\r\n\r\n    // Alert.alert가 호출되었는지 확인\r\n    await waitFor(() => {\r\n      expect(require('react-native/Libraries/Alert/Alert').alert).toHaveBeenCalledWith(\r\n        '오류', \r\n        '감정 데이터를 불러오는 중 오류가 발생했습니다.'\r\n      );\r\n    });\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}