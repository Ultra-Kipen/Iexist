{"version":3,"names":["_getJestObj","mock","getItem","jest","fn","mockResolvedValue","setItem","undefined","removeItem","login","register","logout","getAllEmotions","data","getDailyEmotionCheck","recordEmotions","Text","Button","Card","TextInput","ActivityIndicator","IconButton","Surface","Dialog","Portal","useTheme","colors","primary","surface","_interopRequireDefault","require","_react","_reactNative","_reactNative2","_HomeScreen","_AuthContext","_EmotionContext","_jsxRuntime","_require","describe","originalDimensionsGet","Dimensions","get","afterEach","test","dim","width","height","scale","fontScale","dimensions","expect","toBe","_render","render","jsx","AuthProvider","children","EmotionProvider","default","getByText","toHaveBeenCalled","_render2","toJSON","_render3","_render4"],"sources":["ResponsiveRendering.test.tsx"],"sourcesContent":["// __tests__/responsive/ResponsiveRendering.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport { Dimensions } from 'react-native';\r\nimport HomeScreen from '../../src/screens/HomeScreen';\r\nimport { AuthProvider } from '../../src/contexts/AuthContext';\r\nimport { EmotionProvider } from '../../src/contexts/EmotionContext';\r\n\r\n// AsyncStorage 모킹\r\njest.mock('@react-native-async-storage/async-storage', () => ({\r\n  getItem: jest.fn().mockResolvedValue(null),\r\n  setItem: jest.fn().mockResolvedValue(undefined),\r\n  removeItem: jest.fn().mockResolvedValue(undefined),\r\n}));\r\n\r\n// API 서비스 모킹\r\njest.mock('../../src/services/api/authService', () => ({\r\n  login: jest.fn(),\r\n  register: jest.fn(),\r\n  logout: jest.fn(),\r\n}));\r\n\r\njest.mock('../../src/services/api/emotionService', () => ({\r\n  getAllEmotions: jest.fn().mockResolvedValue({ data: [] }),\r\n  getDailyEmotionCheck: jest.fn().mockResolvedValue({ data: [] }),\r\n  recordEmotions: jest.fn().mockResolvedValue(undefined),\r\n}));\r\n\r\n// react-native-paper 모킹 - 최소한의 모킹만 제공\r\njest.mock('react-native-paper', () => {\r\n  return {\r\n    // 기본적인 컴포넌트들\r\n    Text: 'MockedPaperText',\r\n    Button: 'MockedButton',\r\n    Card: 'MockedCard',\r\n    TextInput: 'MockedTextInput',\r\n    ActivityIndicator: 'MockedActivityIndicator',\r\n    IconButton: 'MockedIconButton',\r\n    Surface: 'MockedSurface',\r\n    \r\n    // 복합 컴포넌트들\r\n    Dialog: 'MockedDialog',\r\n    Portal: 'MockedPortal',\r\n    \r\n    // 테마\r\n    useTheme: () => ({\r\n      colors: {\r\n        primary: '#6200ee',\r\n        surface: '#ffffff'\r\n      }\r\n    }),\r\n  };\r\n});\r\n\r\n// vector-icons 모킹\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'MockedIcon');\r\n\r\n// HomeScreen 모킹 - 실제 모듈 대신 간단한 대체 구현 사용\r\njest.mock('../../src/screens/HomeScreen', () => 'MockedHomeScreen');\r\n\r\ndescribe('Responsive Rendering Tests', () => {\r\n  // 원래의 Dimensions.get 함수 저장\r\n  const originalDimensionsGet = Dimensions.get;\r\n  \r\n  afterEach(() => {\r\n    // 각 테스트 후 Dimensions.get 복원\r\n    Dimensions.get = originalDimensionsGet;\r\n  });\r\n  \r\n  test('화면 크기를 모킹할 수 있어야 함', () => {\r\n    // 화면 크기 모킹\r\n    Dimensions.get = jest.fn((dim) => {\r\n      if (dim === 'window' || dim === 'screen') {\r\n        return { width: 375, height: 812, scale: 1, fontScale: 1 };\r\n      }\r\n      return originalDimensionsGet(dim);\r\n    });\r\n    \r\n    const dimensions = Dimensions.get('window');\r\n    expect(dimensions.width).toBe(375);\r\n    expect(dimensions.height).toBe(812);\r\n  });\r\n  \r\n  test('작은 화면에서 렌더링 성공', () => {\r\n    // 작은 화면 모킹\r\n    Dimensions.get = jest.fn((dim) => {\r\n      if (dim === 'window' || dim === 'screen') {\r\n        return { width: 320, height: 568, scale: 1, fontScale: 1 };\r\n      }\r\n      return originalDimensionsGet(dim);\r\n    });\r\n    \r\n    const { getByText } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 모킹된 HomeScreen이 렌더링되었는지 확인\r\n    expect(Dimensions.get).toHaveBeenCalled();\r\n  });\r\n  \r\n  test('중간 화면에서 렌더링 성공', () => {\r\n    // 중간 화면 모킹\r\n    Dimensions.get = jest.fn((dim) => {\r\n      if (dim === 'window' || dim === 'screen') {\r\n        return { width: 375, height: 812, scale: 1, fontScale: 1 };\r\n      }\r\n      return originalDimensionsGet(dim);\r\n    });\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 렌더링 성공 확인\r\n    expect(Dimensions.get).toHaveBeenCalled();\r\n  });\r\n  \r\n  test('큰 화면에서 렌더링 성공', () => {\r\n    // 태블릿 크기 모킹\r\n    Dimensions.get = jest.fn((dim) => {\r\n      if (dim === 'window' || dim === 'screen') {\r\n        return { width: 768, height: 1024, scale: 1, fontScale: 1 };\r\n      }\r\n      return originalDimensionsGet(dim);\r\n    });\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 렌더링 성공 확인\r\n    expect(Dimensions.get).toHaveBeenCalled();\r\n  });\r\n  \r\n  test('가로 모드에서 렌더링 성공', () => {\r\n    // 가로 모드 모킹\r\n    Dimensions.get = jest.fn((dim) => {\r\n      if (dim === 'window' || dim === 'screen') {\r\n        return { width: 812, height: 375, scale: 1, fontScale: 1 };\r\n      }\r\n      return originalDimensionsGet(dim);\r\n    });\r\n    \r\n    const { toJSON } = render(\r\n      <AuthProvider>\r\n        <EmotionProvider>\r\n          <HomeScreen />\r\n        </EmotionProvider>\r\n      </AuthProvider>\r\n    );\r\n    \r\n    // 렌더링 성공 확인\r\n    expect(Dimensions.get).toHaveBeenCalled();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}