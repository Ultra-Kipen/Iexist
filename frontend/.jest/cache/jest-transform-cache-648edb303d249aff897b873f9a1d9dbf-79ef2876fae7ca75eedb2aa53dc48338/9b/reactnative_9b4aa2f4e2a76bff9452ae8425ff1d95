d401b4efd33a298a1f572c9853177fd2
'use strict';
var DevMenuMock = {
  show: jest.fn(),
  debugRemotely: jest.fn()
};
module.exports = {
  View: 'View',
  Text: 'Text',
  TouchableOpacity: 'TouchableOpacity',
  Image: 'Image',
  ScrollView: 'ScrollView',
  TextInput: 'TextInput',
  TurboModuleRegistry: {
    get: jest.fn(function () {
      return null;
    }),
    getEnforcing: jest.fn(function (name) {
      if (name === 'DevMenu') {
        return DevMenuMock;
      }
      return null;
    })
  },
  DevMenu: DevMenuMock,
  StyleSheet: {
    create: jest.fn(function (styles) {
      return styles;
    }),
    flatten: jest.fn(function (style) {
      return style;
    }),
    hairlineWidth: 1
  },
  Platform: {
    OS: 'android',
    select: jest.fn(function (obj) {
      return obj.android || obj.default;
    }),
    Version: {
      SDK_INT: 28
    }
  },
  Dimensions: {
    get: jest.fn(function () {
      return {
        width: 375,
        height: 667
      };
    }),
    addEventListener: jest.fn(),
    removeEventListener: jest.fn()
  },
  Alert: {
    alert: jest.fn()
  },
  NativeModules: {
    DevMenu: DevMenuMock,
    NativeAnimatedHelper: {
      startAnimatingNode: jest.fn(),
      stopAnimation: jest.fn()
    },
    RNCNetInfo: {
      getCurrentState: jest.fn(function () {
        return Promise.resolve();
      }),
      addListener: jest.fn(),
      removeListeners: jest.fn()
    },
    StatusBarManager: {
      HEIGHT: 42,
      setStyle: jest.fn(),
      setHidden: jest.fn()
    }
  },
  Animated: {
    Value: jest.fn(function () {
      return {
        setValue: jest.fn(),
        interpolate: jest.fn(function () {
          return {
            interpolate: jest.fn()
          };
        })
      };
    }),
    timing: jest.fn(function () {
      return {
        start: jest.fn(function (callback) {
          return callback && callback({
            finished: true
          });
        })
      };
    }),
    spring: jest.fn(function () {
      return {
        start: jest.fn(function (callback) {
          return callback && callback({
            finished: true
          });
        })
      };
    }),
    View: 'Animated.View',
    Text: 'Animated.Text',
    Image: 'Animated.Image',
    createAnimatedComponent: jest.fn(function (comp) {
      return comp;
    })
  },
  Keyboard: {
    dismiss: jest.fn(),
    addListener: jest.fn(function () {
      return {
        remove: jest.fn()
      };
    })
  },
  LayoutAnimation: {
    configureNext: jest.fn(),
    create: jest.fn(),
    Types: {},
    Properties: {}
  },
  UIManager: {
    measure: jest.fn(),
    measureInWindow: jest.fn()
  },
  NativeEventEmitter: jest.fn(function () {
    return {
      addListener: jest.fn(),
      removeListeners: jest.fn()
    };
  }),
  useWindowDimensions: jest.fn(function () {
    return {
      width: 375,
      height: 667
    };
  }),
  PixelRatio: {
    get: jest.fn(function () {
      return 2;
    }),
    getFontScale: jest.fn(function () {
      return 1;
    }),
    getPixelSizeForLayoutSize: jest.fn(function (size) {
      return size * 2;
    }),
    roundToNearestPixel: jest.fn(function (size) {
      return size;
    })
  },
  BackHandler: {
    addEventListener: jest.fn(function () {
      return {
        remove: jest.fn()
      };
    }),
    removeEventListener: jest.fn()
  },
  AppState: {
    addEventListener: jest.fn(function () {
      return {
        remove: jest.fn()
      };
    }),
    removeEventListener: jest.fn(),
    currentState: 'active'
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,