adfde3e175c7069053832af9af625132
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EntryExitTransition = void 0;
exports.combineTransition = combineTransition;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _index = require("../../animation/index.js");
var _index2 = require("../../logger/index.js");
var _index3 = require("../animationBuilder/index.js");
var _Fade = require("../defaultAnimations/Fade.js");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var EntryExitTransition = exports.EntryExitTransition = function (_BaseAnimationBuilder) {
  function EntryExitTransition() {
    var _this;
    (0, _classCallCheck2.default)(this, EntryExitTransition);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, EntryExitTransition, [].concat(args));
    _this.enteringV = _Fade.FadeIn;
    _this.exitingV = _Fade.FadeOut;
    _this.build = function () {
      var delayFunction = _this.getDelayFunction();
      var callback = _this.callbackV;
      var delay = _this.getDelay();
      var enteringAnimation = _this.enteringV.build();
      var exitingAnimation = _this.exitingV.build();
      var exitingDuration = _this.exitingV.getDuration();
      return function (values) {
        'worklet';

        var enteringValues = enteringAnimation(values);
        var exitingValues = exitingAnimation(values);
        var animations = {
          transform: []
        };
        for (var prop of Object.keys(exitingValues.animations)) {
          if (prop === 'transform') {
            if (!Array.isArray(exitingValues.animations.transform)) {
              continue;
            }
            exitingValues.animations.transform.forEach(function (value, index) {
              for (var transformProp of Object.keys(value)) {
                animations.transform.push((0, _defineProperty2.default)({}, transformProp, delayFunction(delay, (0, _index.withSequence)(value[transformProp], (0, _index.withTiming)(exitingValues.initialValues.transform ? exitingValues.initialValues.transform[index][transformProp] : 0, {
                  duration: 0
                })))));
              }
            });
          } else {
            var sequence = enteringValues.animations[prop] !== undefined ? [exitingValues.animations[prop], (0, _index.withTiming)(enteringValues.initialValues[prop], {
              duration: 0
            }), enteringValues.animations[prop]] : [exitingValues.animations[prop], (0, _index.withTiming)(Object.keys(values).includes(prop) ? values[prop] : exitingValues.initialValues[prop], {
              duration: 0
            })];
            animations[prop] = delayFunction(delay, _index.withSequence.apply(void 0, sequence));
          }
        }
        for (var _prop of Object.keys(enteringValues.animations)) {
          if (_prop === 'transform') {
            if (!Array.isArray(enteringValues.animations.transform)) {
              continue;
            }
            enteringValues.animations.transform.forEach(function (value, index) {
              for (var transformProp of Object.keys(value)) {
                animations.transform.push((0, _defineProperty2.default)({}, transformProp, delayFunction(delay + exitingDuration, (0, _index.withSequence)((0, _index.withTiming)(enteringValues.initialValues.transform ? enteringValues.initialValues.transform[index][transformProp] : 0, {
                  duration: exitingDuration
                }), value[transformProp]))));
              }
            });
          } else if (animations[_prop] !== undefined) {
            continue;
          } else {
            animations[_prop] = delayFunction(delay, (0, _index.withSequence)((0, _index.withTiming)(enteringValues.initialValues[_prop], {
              duration: 0
            }), enteringValues.animations[_prop]));
          }
        }
        var mergedTransform = (Array.isArray(exitingValues.initialValues.transform) ? exitingValues.initialValues.transform : []).concat((Array.isArray(enteringValues.animations.transform) ? enteringValues.animations.transform : []).map(function (value) {
          var objectKeys = Object.keys(value);
          if ((objectKeys == null ? void 0 : objectKeys.length) < 1) {
            _index2.logger.error(`\${value} is not a valid Transform object`);
            return value;
          }
          var transformProp = objectKeys[0];
          var current = value[transformProp].current;
          if (typeof current === 'string') {
            if (current.includes('deg')) {
              return (0, _defineProperty2.default)({}, transformProp, '0deg');
            } else {
              return (0, _defineProperty2.default)({}, transformProp, '0');
            }
          } else if (transformProp.includes('translate')) {
            return (0, _defineProperty2.default)({}, transformProp, 0);
          } else {
            return (0, _defineProperty2.default)({}, transformProp, 1);
          }
        }));
        return {
          initialValues: Object.assign({}, exitingValues.initialValues, {
            originX: values.currentOriginX,
            originY: values.currentOriginY,
            width: values.currentWidth,
            height: values.currentHeight,
            transform: mergedTransform
          }),
          animations: Object.assign({
            originX: delayFunction(delay + exitingDuration, (0, _index.withTiming)(values.targetOriginX, {
              duration: exitingDuration
            })),
            originY: delayFunction(delay + exitingDuration, (0, _index.withTiming)(values.targetOriginY, {
              duration: exitingDuration
            })),
            width: delayFunction(delay + exitingDuration, (0, _index.withTiming)(values.targetWidth, {
              duration: exitingDuration
            })),
            height: delayFunction(delay + exitingDuration, (0, _index.withTiming)(values.targetHeight, {
              duration: exitingDuration
            }))
          }, animations),
          callback: callback
        };
      };
    };
    return _this;
  }
  (0, _inherits2.default)(EntryExitTransition, _BaseAnimationBuilder);
  return (0, _createClass2.default)(EntryExitTransition, [{
    key: "entering",
    value: function entering(animation) {
      this.enteringV = animation;
      return this;
    }
  }, {
    key: "exiting",
    value: function exiting(animation) {
      this.exitingV = animation;
      return this;
    }
  }], [{
    key: "createInstance",
    value: function createInstance() {
      return new EntryExitTransition();
    }
  }, {
    key: "entering",
    value: function entering(animation) {
      var instance = this.createInstance();
      return instance.entering(animation);
    }
  }, {
    key: "exiting",
    value: function exiting(animation) {
      var instance = this.createInstance();
      return instance.exiting(animation);
    }
  }]);
}(_index3.BaseAnimationBuilder);
EntryExitTransition.presetName = 'EntryExitTransition';
function combineTransition(exiting, entering) {
  return EntryExitTransition.entering(entering).exiting(exiting);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,