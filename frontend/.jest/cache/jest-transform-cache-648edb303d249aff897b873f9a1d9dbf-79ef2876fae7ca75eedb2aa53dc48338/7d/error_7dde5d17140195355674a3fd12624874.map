{"version":3,"names":["handleApiError","exports","error","cov_2e4dy3e7re","f","s","response","b","data","message","isNetworkError","networkErrorMessages","some","msg","toLowerCase","includes","formatErrorMessage","customRules","arguments","length","undefined","test","ApiError","_Error","statusCode","_this","_classCallCheck2","default","_callSuper","name","Object","setPrototypeOf","prototype","_inherits2","_createClass2","_wrapNativeSuper2","Error","createErrorHandler","onError","defaultMessage"],"sources":["error.ts"],"sourcesContent":["import { AxiosError } from 'axios';\r\n\r\n/**\r\n * API 에러를 처리하고 사용자에게 표시할 메시지를 반환합니다.\r\n * @param error API 에러 객체\r\n * @returns 적절한 오류 메시지\r\n */\r\nexport const handleApiError = (error: any): string => {\r\n  // API 응답에서 메시지 추출\r\n  if (error.response) {\r\n    if (error.response.data && error.response.data.message) {\r\n      return error.response.data.message;\r\n    }\r\n    \r\n    if (error.response.data && error.response.data.error && error.response.data.error.message) {\r\n      return error.response.data.error.message;\r\n    }\r\n  }\r\n  \r\n  // 네트워크 오류 확인\r\n  if (isNetworkError(error)) {\r\n    return '네트워크 연결에 문제가 있습니다. 인터넷 연결을 확인해주세요.';\r\n  }\r\n  \r\n  // 기본 오류 메시지\r\n  return '오류가 발생했습니다. 다시 시도해주세요.';\r\n};\r\n\r\n/**\r\n * 네트워크 관련 오류인지 확인합니다.\r\n * @param error 오류 객체\r\n * @returns 네트워크 오류 여부\r\n */\r\nexport const isNetworkError = (error: any): boolean => {\r\n  if (!error || !error.message) {\r\n    return false;\r\n  }\r\n  \r\n  const networkErrorMessages = [\r\n    'Network Error',\r\n    'Failed to fetch',\r\n    'ECONNREFUSED',\r\n    'Connection refused',\r\n    'timeout'\r\n  ];\r\n  \r\n  return networkErrorMessages.some(msg => \r\n    error.message.toLowerCase().includes(msg.toLowerCase())\r\n  );\r\n};\r\n\r\n/**\r\n * 오류 메시지를 포맷팅합니다.\r\n * @param message 오류 메시지 또는 코드\r\n * @param customRules 커스텀 포맷팅 규칙\r\n * @returns 포맷팅된 오류 메시지\r\n */\r\nexport const formatErrorMessage = (message: string, customRules: Record<string, string> = {}): string => {\r\n  // 커스텀 규칙이 있다면 적용\r\n  if (message in customRules) {\r\n    return customRules[message];\r\n  }\r\n  \r\n  // 오류 코드 형식인지 확인 (ERR_로 시작하는 경우)\r\n  if (/^ERR_[A-Z0-9_]+$/.test(message)) {\r\n    if (message === 'ERR_AUTH_001') {\r\n      return '인증 오류가 발생했습니다. (ERR_AUTH_001)';\r\n    }\r\n    return `오류가 발생했습니다. (${message})`;\r\n  }\r\n  \r\n  return message;\r\n};\r\n\r\n/**\r\n * API 오류 클래스\r\n */\r\nexport class ApiError extends Error {\r\n  statusCode: number;\r\n  data?: any;\r\n  \r\n  constructor(message: string, statusCode: number, data?: any) {\r\n    super(message);\r\n    this.name = 'ApiError';\r\n    this.statusCode = statusCode;\r\n    this.data = data;\r\n    \r\n    // Error 객체 프로토타입 체인 유지를 위한 설정\r\n    Object.setPrototypeOf(this, ApiError.prototype);\r\n  }\r\n}\r\n\r\n/**\r\n * 오류 처리 함수를 생성합니다.\r\n * @param onError 오류 처리 콜백 함수\r\n * @param defaultMessage 기본 오류 메시지\r\n * @returns 오류 처리 함수\r\n */\r\nexport const createErrorHandler = (onError: (message: string) => void, defaultMessage: string) => {\r\n  return (error: any) => {\r\n    if (error instanceof Error) {\r\n      onError(error.message);\r\n    } else if (error.response && error.response.data && error.response.data.message) {\r\n      onError(error.response.data.message);\r\n    } else {\r\n      onError(defaultMessage);\r\n    }\r\n  };\r\n};"],"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","ignoreList":[]}