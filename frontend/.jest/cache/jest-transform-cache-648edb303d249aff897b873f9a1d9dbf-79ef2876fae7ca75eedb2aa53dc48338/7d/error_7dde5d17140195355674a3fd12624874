f29b345de89be864b2a313914796cda4
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNetworkError = exports.handleApiError = exports.formatErrorMessage = exports.createErrorHandler = exports.ApiError = void 0;
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));
function cov_2e4dy3e7re() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\utils\\error.ts";
  var hash = "97b86068f6388f6c793bd88d2c49320acba2d1ef";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\utils\\error.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 30
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "1": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "3": {
        start: {
          line: 12,
          column: 6
        },
        end: {
          line: 12,
          column: 41
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "5": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "6": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 23,
          column: 3
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 48
        }
      },
      "8": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "9": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 50,
          column: 1
        }
      },
      "10": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "11": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "12": {
        start: {
          line: 39,
          column: 31
        },
        end: {
          line: 45,
          column: 3
        }
      },
      "13": {
        start: {
          line: 47,
          column: 2
        },
        end: {
          line: 49,
          column: 4
        }
      },
      "14": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "15": {
        start: {
          line: 58,
          column: 34
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "16": {
        start: {
          line: 60,
          column: 2
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "17": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 32
        }
      },
      "18": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "19": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "20": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 45
        }
      },
      "21": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 38
        }
      },
      "22": {
        start: {
          line: 72,
          column: 2
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "23": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "24": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 27
        }
      },
      "25": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 33
        }
      },
      "26": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 21
        }
      },
      "27": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 52
        }
      },
      "28": {
        start: {
          line: 99,
          column: 34
        },
        end: {
          line: 109,
          column: 1
        }
      },
      "29": {
        start: {
          line: 100,
          column: 2
        },
        end: {
          line: 108,
          column: 4
        }
      },
      "30": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "31": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 102,
          column: 29
        }
      },
      "32": {
        start: {
          line: 103,
          column: 11
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "33": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 43
        }
      },
      "34": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 106,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 8,
            column: 31
          }
        },
        loc: {
          start: {
            line: 8,
            column: 54
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 31
          }
        },
        loc: {
          start: {
            line: 34,
            column: 55
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 35
          },
          end: {
            line: 47,
            column: 36
          }
        },
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 59
          }
        },
        line: 48
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 34
          },
          end: {
            line: 58,
            column: 35
          }
        },
        loc: {
          start: {
            line: 58,
            column: 105
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 82,
            column: 3
          }
        },
        loc: {
          start: {
            line: 82,
            column: 63
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 82
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 99,
            column: 34
          },
          end: {
            line: 99,
            column: 35
          }
        },
        loc: {
          start: {
            line: 99,
            column: 98
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 99
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 9
          },
          end: {
            line: 100,
            column: 10
          }
        },
        loc: {
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 100
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 58
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 27
          }
        }, {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 56
          }
        }, {
          start: {
            line: 15,
            column: 60
          },
          end: {
            line: 15,
            column: 93
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 23,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 23,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 6
          },
          end: {
            line: 35,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 6
          },
          end: {
            line: 35,
            column: 12
          }
        }, {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 35,
            column: 30
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 52
          },
          end: {
            line: 58,
            column: 92
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 58,
            column: 90
          },
          end: {
            line: 58,
            column: 92
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 2
          },
          end: {
            line: 62,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 2
          },
          end: {
            line: 62,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "10": {
        loc: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "11": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "12": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: 103,
            column: 11
          },
          end: {
            line: 107,
            column: 5
          }
        }],
        line: 101
      },
      "13": {
        loc: {
          start: {
            line: 103,
            column: 11
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 11
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: 105,
            column: 11
          },
          end: {
            line: 107,
            column: 5
          }
        }],
        line: 103
      },
      "14": {
        loc: {
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 103,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 103,
            column: 29
          }
        }, {
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 52
          }
        }, {
          start: {
            line: 103,
            column: 56
          },
          end: {
            line: 103,
            column: 83
          }
        }],
        line: 103
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "97b86068f6388f6c793bd88d2c49320acba2d1ef"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2e4dy3e7re = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e4dy3e7re();
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
cov_2e4dy3e7re().s[0]++;
var handleApiError = exports.handleApiError = function handleApiError(error) {
  cov_2e4dy3e7re().f[0]++;
  cov_2e4dy3e7re().s[1]++;
  if (error.response) {
    cov_2e4dy3e7re().b[0][0]++;
    cov_2e4dy3e7re().s[2]++;
    if ((cov_2e4dy3e7re().b[2][0]++, error.response.data) && (cov_2e4dy3e7re().b[2][1]++, error.response.data.message)) {
      cov_2e4dy3e7re().b[1][0]++;
      cov_2e4dy3e7re().s[3]++;
      return error.response.data.message;
    } else {
      cov_2e4dy3e7re().b[1][1]++;
    }
    cov_2e4dy3e7re().s[4]++;
    if ((cov_2e4dy3e7re().b[4][0]++, error.response.data) && (cov_2e4dy3e7re().b[4][1]++, error.response.data.error) && (cov_2e4dy3e7re().b[4][2]++, error.response.data.error.message)) {
      cov_2e4dy3e7re().b[3][0]++;
      cov_2e4dy3e7re().s[5]++;
      return error.response.data.error.message;
    } else {
      cov_2e4dy3e7re().b[3][1]++;
    }
  } else {
    cov_2e4dy3e7re().b[0][1]++;
  }
  cov_2e4dy3e7re().s[6]++;
  if (isNetworkError(error)) {
    cov_2e4dy3e7re().b[5][0]++;
    cov_2e4dy3e7re().s[7]++;
    return '네트워크 연결에 문제가 있습니다. 인터넷 연결을 확인해주세요.';
  } else {
    cov_2e4dy3e7re().b[5][1]++;
  }
  cov_2e4dy3e7re().s[8]++;
  return '오류가 발생했습니다. 다시 시도해주세요.';
};
cov_2e4dy3e7re().s[9]++;
var isNetworkError = exports.isNetworkError = function isNetworkError(error) {
  cov_2e4dy3e7re().f[1]++;
  cov_2e4dy3e7re().s[10]++;
  if ((cov_2e4dy3e7re().b[7][0]++, !error) || (cov_2e4dy3e7re().b[7][1]++, !error.message)) {
    cov_2e4dy3e7re().b[6][0]++;
    cov_2e4dy3e7re().s[11]++;
    return false;
  } else {
    cov_2e4dy3e7re().b[6][1]++;
  }
  var networkErrorMessages = (cov_2e4dy3e7re().s[12]++, ['Network Error', 'Failed to fetch', 'ECONNREFUSED', 'Connection refused', 'timeout']);
  cov_2e4dy3e7re().s[13]++;
  return networkErrorMessages.some(function (msg) {
    cov_2e4dy3e7re().f[2]++;
    cov_2e4dy3e7re().s[14]++;
    return error.message.toLowerCase().includes(msg.toLowerCase());
  });
};
cov_2e4dy3e7re().s[15]++;
var formatErrorMessage = exports.formatErrorMessage = function formatErrorMessage(message) {
  var customRules = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_2e4dy3e7re().b[8][0]++, {});
  cov_2e4dy3e7re().f[3]++;
  cov_2e4dy3e7re().s[16]++;
  if (message in customRules) {
    cov_2e4dy3e7re().b[9][0]++;
    cov_2e4dy3e7re().s[17]++;
    return customRules[message];
  } else {
    cov_2e4dy3e7re().b[9][1]++;
  }
  cov_2e4dy3e7re().s[18]++;
  if (/^ERR_[A-Z0-9_]+$/.test(message)) {
    cov_2e4dy3e7re().b[10][0]++;
    cov_2e4dy3e7re().s[19]++;
    if (message === 'ERR_AUTH_001') {
      cov_2e4dy3e7re().b[11][0]++;
      cov_2e4dy3e7re().s[20]++;
      return '인증 오류가 발생했습니다. (ERR_AUTH_001)';
    } else {
      cov_2e4dy3e7re().b[11][1]++;
    }
    cov_2e4dy3e7re().s[21]++;
    return `오류가 발생했습니다. (${message})`;
  } else {
    cov_2e4dy3e7re().b[10][1]++;
  }
  cov_2e4dy3e7re().s[22]++;
  return message;
};
var ApiError = exports.ApiError = function (_Error) {
  function ApiError(message, statusCode, data) {
    var _this;
    (0, _classCallCheck2.default)(this, ApiError);
    cov_2e4dy3e7re().f[4]++;
    cov_2e4dy3e7re().s[23]++;
    _this = _callSuper(this, ApiError, [message]);
    cov_2e4dy3e7re().s[24]++;
    _this.name = 'ApiError';
    cov_2e4dy3e7re().s[25]++;
    _this.statusCode = statusCode;
    cov_2e4dy3e7re().s[26]++;
    _this.data = data;
    cov_2e4dy3e7re().s[27]++;
    Object.setPrototypeOf(_this, ApiError.prototype);
    return _this;
  }
  (0, _inherits2.default)(ApiError, _Error);
  return (0, _createClass2.default)(ApiError);
}((0, _wrapNativeSuper2.default)(Error));
cov_2e4dy3e7re().s[28]++;
var createErrorHandler = exports.createErrorHandler = function createErrorHandler(onError, defaultMessage) {
  cov_2e4dy3e7re().f[5]++;
  cov_2e4dy3e7re().s[29]++;
  return function (error) {
    cov_2e4dy3e7re().f[6]++;
    cov_2e4dy3e7re().s[30]++;
    if (error instanceof Error) {
      cov_2e4dy3e7re().b[12][0]++;
      cov_2e4dy3e7re().s[31]++;
      onError(error.message);
    } else {
      cov_2e4dy3e7re().b[12][1]++;
      cov_2e4dy3e7re().s[32]++;
      if ((cov_2e4dy3e7re().b[14][0]++, error.response) && (cov_2e4dy3e7re().b[14][1]++, error.response.data) && (cov_2e4dy3e7re().b[14][2]++, error.response.data.message)) {
        cov_2e4dy3e7re().b[13][0]++;
        cov_2e4dy3e7re().s[33]++;
        onError(error.response.data.message);
      } else {
        cov_2e4dy3e7re().b[13][1]++;
        cov_2e4dy3e7re().s[34]++;
        onError(defaultMessage);
      }
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,