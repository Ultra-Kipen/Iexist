{"version":3,"names":["_react","_interopRequireDefault","require","_nativeStack","_LoginScreen","_RegisterScreen","_ApiTestScreen","_jsxRuntime","cov_am1mn8coc","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","Stack","createNativeStackNavigator","AuthStack","jsxs","Navigator","screenOptions","headerShown","children","jsx","Screen","component","LoginScreen","RegisterScreen","ApiTestScreen","_default","exports","default"],"sources":["AuthStack.tsx"],"sourcesContent":["// src/navigation/AuthStack.tsx\r\nimport React from 'react';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport RegisterScreen from '../screens/RegisterScreen';\r\nimport ApiTestScreen from '../screens/ApiTestScreen'; // 테스트용\r\n\r\ntype AuthStackParamList = {\r\n  Login: undefined;\r\n  Register: undefined;\r\n  ApiTest: undefined;\r\n};\r\n\r\nconst Stack = createNativeStackNavigator<AuthStackParamList>();\r\n\r\nconst AuthStack = () => {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n      <Stack.Screen name=\"ApiTest\" component={ApiTestScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default AuthStack;"],"mappings":";;;;;AACA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,eAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,cAAA,GAAAL,sBAAA,CAAAC,OAAA;AAAqD,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAAM,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,eAAA;IAAAlB,IAAA;EAAA;EAAA,IAAAmB,QAAA,GAAAlB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAgB,QAAA,CAAApB,IAAA,KAAAoB,QAAA,CAAApB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAmB,QAAA,CAAApB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAgB,cAAA,GAAAD,QAAA,CAAApB,IAAA;EAAA;IAAAD,aAAA,YAAAA,CAAA;MAAA,OAAAsB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAtB,aAAA;AAQrD,IAAMuB,KAAK,IAAAvB,aAAA,GAAAiB,CAAA,OAAG,IAAAO,uCAA0B,EAAqB,CAAC;AAACxB,aAAA,GAAAiB,CAAA;AAE/D,IAAMQ,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EAAAzB,aAAA,GAAAkB,CAAA;EAAAlB,aAAA,GAAAiB,CAAA;EACtB,OACE,IAAAlB,WAAA,CAAA2B,IAAA,EAACH,KAAK,CAACI,SAAS;IACdC,aAAa,EAAE;MACbC,WAAW,EAAE;IACf,CAAE;IAAAC,QAAA,GAEF,IAAA/B,WAAA,CAAAgC,GAAA,EAACR,KAAK,CAACS,MAAM;MAACnB,IAAI,EAAC,OAAO;MAACoB,SAAS,EAAEC;IAAY,CAAE,CAAC,EACrD,IAAAnC,WAAA,CAAAgC,GAAA,EAACR,KAAK,CAACS,MAAM;MAACnB,IAAI,EAAC,UAAU;MAACoB,SAAS,EAAEE;IAAe,CAAE,CAAC,EAC3D,IAAApC,WAAA,CAAAgC,GAAA,EAACR,KAAK,CAACS,MAAM;MAACnB,IAAI,EAAC,SAAS;MAACoB,SAAS,EAAEG;IAAc,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEtB,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEad,SAAS","ignoreList":[]}