28ff189964b6063d653426dc3b303099
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _reactNative2 = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
var KeyboardNavigableForm = function KeyboardNavigableForm() {
  var _React$useState = _react.default.useState({
      name: '',
      email: '',
      message: ''
    }),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    values = _React$useState2[0],
    setValues = _React$useState2[1];
  var _React$useState3 = _react.default.useState(null),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    focusedField = _React$useState4[0],
    setFocusedField = _React$useState4[1];
  var handleSubmit = function handleSubmit() {
    console.log('폼 제출됨:', values);
  };
  return (0, _jsxRuntime.jsxs)(_reactNative2.View, {
    children: [(0, _jsxRuntime.jsx)(_reactNative2.Text, {
      children: "\uC811\uADFC\uC131 \uD14C\uC2A4\uD2B8 \uD3FC"
    }), (0, _jsxRuntime.jsx)(_reactNative2.TextInput, {
      value: values.name,
      onChangeText: function onChangeText(text) {
        return setValues(Object.assign({}, values, {
          name: text
        }));
      },
      placeholder: "\uC774\uB984",
      returnKeyType: "next",
      onFocus: function onFocus() {
        return setFocusedField('name');
      },
      onSubmitEditing: function onSubmitEditing() {
        return setFocusedField('email');
      },
      blurOnSubmit: false,
      accessibilityLabel: "\uC774\uB984 \uC785\uB825",
      testID: "name-input"
    }), (0, _jsxRuntime.jsx)(_reactNative2.TextInput, {
      value: values.email,
      onChangeText: function onChangeText(text) {
        return setValues(Object.assign({}, values, {
          email: text
        }));
      },
      placeholder: "\uC774\uBA54\uC77C",
      returnKeyType: "next",
      onFocus: function onFocus() {
        return setFocusedField('email');
      },
      onSubmitEditing: function onSubmitEditing() {
        return setFocusedField('message');
      },
      blurOnSubmit: false,
      accessibilityLabel: "\uC774\uBA54\uC77C \uC785\uB825",
      testID: "email-input"
    }), (0, _jsxRuntime.jsx)(_reactNative2.TextInput, {
      value: values.message,
      onChangeText: function onChangeText(text) {
        return setValues(Object.assign({}, values, {
          message: text
        }));
      },
      placeholder: "\uBA54\uC2DC\uC9C0",
      returnKeyType: "done",
      onFocus: function onFocus() {
        return setFocusedField('message');
      },
      onSubmitEditing: function onSubmitEditing() {
        return setFocusedField('submit');
      },
      accessibilityLabel: "\uBA54\uC2DC\uC9C0 \uC785\uB825",
      testID: "message-input"
    }), (0, _jsxRuntime.jsx)(_reactNative2.Button, {
      title: "\uC81C\uCD9C",
      onPress: handleSubmit,
      accessibilityLabel: "\uD3FC \uC81C\uCD9C \uBC84\uD2BC",
      testID: "submit-button"
    }), (0, _jsxRuntime.jsxs)(_reactNative2.Text, {
      testID: "focused-field",
      children: ["\uD604\uC7AC \uD3EC\uCEE4\uC2A4: ", focusedField || '없음']
    })]
  });
};
describe('키보드 내비게이션 테스트', function () {
  test('키보드 리턴 키를 사용하여 다음 필드로 이동할 수 있어야 함', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(KeyboardNavigableForm, {})),
      getByTestId = _render.getByTestId;
    var nameInput = getByTestId('name-input');
    (0, _reactNative.fireEvent)(nameInput, 'focus');
    expect(getByTestId('focused-field').props.children).toEqual(['현재 포커스: ', 'name']);
    (0, _reactNative.fireEvent)(nameInput, 'submitEditing');
    expect(getByTestId('focused-field').props.children).toEqual(['현재 포커스: ', 'email']);
    var emailInput = getByTestId('email-input');
    (0, _reactNative.fireEvent)(emailInput, 'submitEditing');
    expect(getByTestId('focused-field').props.children).toEqual(['현재 포커스: ', 'message']);
  });
  test('모든 상호작용 요소에 접근성 레이블이 있어야 함', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(KeyboardNavigableForm, {})),
      getByLabelText = _render2.getByLabelText;
    expect(getByLabelText('이름 입력')).toBeTruthy();
    expect(getByLabelText('이메일 입력')).toBeTruthy();
    expect(getByLabelText('메시지 입력')).toBeTruthy();
    expect(getByLabelText('폼 제출 버튼')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,