{"version":3,"names":["_client","_interopRequireDefault","require","notificationService","getNotifications","_getNotifications","_asyncToGenerator2","default","params","response","apiClient","get","data","error","Error","_x","apply","arguments","markAsRead","_markAsRead","notificationId","put","success","_x2","markAllAsRead","_markAllAsRead","count","getUnreadCount","_getUnreadCount","_response$data","deleteNotification","_deleteNotification","delete","_x3","updateNotificationSettings","_updateNotificationSettings","settings","_x4","getNotificationSettings","_getNotificationSettings","_default","exports"],"sources":["notificationService.ts"],"sourcesContent":["// src/services/api/notificationService.ts\r\n\r\nimport apiClient from './client';\r\n\r\nexport interface Notification {\r\n  id: number;\r\n  user_id: number;\r\n  content: string;\r\n  notification_type: 'like' | 'comment' | 'challenge' | 'system';\r\n  related_id?: number;\r\n  is_read: boolean;\r\n  created_at: string;\r\n}\r\n\r\nconst notificationService = {\r\n  getNotifications: async (params?: { \r\n    page?: number; \r\n    limit?: number;\r\n    unread_only?: boolean; \r\n  }) => {\r\n    try {\r\n      const response = await apiClient.get('/notifications', { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('알림을 가져오는데 실패했습니다.');\r\n    }\r\n  },\r\n  \r\n  markAsRead: async (notificationId: number) => {\r\n    await apiClient.put(`/notifications/${notificationId}/read`);\r\n    return { success: true };\r\n  },\r\n  \r\n  markAllAsRead: async () => {\r\n    await apiClient.put('/notifications/read-all');\r\n    return { success: true, count: 5 };\r\n  },\r\n  \r\n  getUnreadCount: async () => {\r\n    const response = await apiClient.get('/notifications/unread-count');\r\n    return response.data?.count || 0;\r\n  },\r\n  \r\n  deleteNotification: async (notificationId: number) => {\r\n    await apiClient.delete(`/notifications/${notificationId}`);\r\n    return { success: true };\r\n  },\r\n  \r\n  updateNotificationSettings: async (settings: { \r\n    like_notifications?: boolean;\r\n    comment_notifications?: boolean;\r\n    challenge_notifications?: boolean;\r\n    system_notifications?: boolean;\r\n  }) => {\r\n    const response = await apiClient.put('/users/notification-settings', settings);\r\n    return response.data;\r\n  },\r\n  \r\n  getNotificationSettings: async () => {\r\n    const response = await apiClient.get('/users/notification-settings');\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default notificationService;"],"mappings":"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","ignoreList":[]}