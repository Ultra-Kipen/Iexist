57c2c0cd09d688d5b118f83b68f7c259
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useToast = void 0;
var _react = require("react");
var _Toast = require("../components/Toast");
function cov_w9kyuvy2g() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\hooks\\useToast.ts";
  var hash = "40b523f8f152ad17686b732c0fe969a3de866ac9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\hooks\\useToast.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "1": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 23,
          column: 8
        }
      },
      "2": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 22,
          column: 7
        }
      },
      "3": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 27,
          column: 8
        }
      },
      "4": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "5": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 29,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 24
          },
          end: {
            line: 11,
            column: 25
          }
        },
        loc: {
          start: {
            line: 11,
            column: 46
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 32
          },
          end: {
            line: 12,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 7
          },
          end: {
            line: 23,
            column: 3
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 32
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 38
          },
          end: {
            line: 27,
            column: 3
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 28
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 27
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "40b523f8f152ad17686b732c0fe969a3de866ac9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_w9kyuvy2g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_w9kyuvy2g();
cov_w9kyuvy2g().s[0]++;
var useToast = exports.useToast = function useToast() {
  cov_w9kyuvy2g().f[0]++;
  var showToast = (cov_w9kyuvy2g().s[1]++, (0, _react.useCallback)(function (message) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_w9kyuvy2g().b[0][0]++, 'info');
    var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_w9kyuvy2g().b[1][0]++, 3000);
    cov_w9kyuvy2g().f[1]++;
    cov_w9kyuvy2g().s[2]++;
    _Toast.ToastController.show({
      message: message,
      type: type,
      duration: duration,
      position: 'bottom'
    });
  }, []));
  var hideToast = (cov_w9kyuvy2g().s[3]++, (0, _react.useCallback)(function () {
    cov_w9kyuvy2g().f[2]++;
    cov_w9kyuvy2g().s[4]++;
    _Toast.ToastController.hide();
  }, []));
  cov_w9kyuvy2g().s[5]++;
  return {
    showToast: showToast,
    hideToast: hideToast
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX1RvYXN0IiwiY292X3c5a3l1dnkyZyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJ1c2VUb2FzdCIsImV4cG9ydHMiLCJzaG93VG9hc3QiLCJ1c2VDYWxsYmFjayIsIm1lc3NhZ2UiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJkdXJhdGlvbiIsIlRvYXN0Q29udHJvbGxlciIsInNob3ciLCJwb3NpdGlvbiIsImhpZGVUb2FzdCIsImhpZGUiXSwic291cmNlcyI6WyJ1c2VUb2FzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgVG9hc3RDb250cm9sbGVyIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Ub2FzdCc7XHJcblxyXG50eXBlIFRvYXN0VHlwZSA9ICdzdWNjZXNzJyB8ICdlcnJvcicgfCAnaW5mbycgfCAnd2FybmluZyc7XHJcblxyXG5pbnRlcmZhY2UgVXNlVG9hc3RSZXR1cm4ge1xyXG4gIHNob3dUb2FzdDogKG1lc3NhZ2U6IHN0cmluZywgdHlwZT86IFRvYXN0VHlwZSwgZHVyYXRpb24/OiBudW1iZXIpID0+IHZvaWQ7XHJcbiAgaGlkZVRvYXN0OiAoKSA9PiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdXNlVG9hc3QgPSAoKTogVXNlVG9hc3RSZXR1cm4gPT4ge1xyXG4gIGNvbnN0IHNob3dUb2FzdCA9IHVzZUNhbGxiYWNrKChcclxuICAgIG1lc3NhZ2U6IHN0cmluZyxcclxuICAgIHR5cGU6IFRvYXN0VHlwZSA9ICdpbmZvJyxcclxuICAgIGR1cmF0aW9uOiBudW1iZXIgPSAzMDAwXHJcbiAgKSA9PiB7XHJcbiAgICBUb2FzdENvbnRyb2xsZXIuc2hvdyh7XHJcbiAgICAgIG1lc3NhZ2UsXHJcbiAgICAgIHR5cGUsXHJcbiAgICAgIGR1cmF0aW9uLFxyXG4gICAgICBwb3NpdGlvbjogJ2JvdHRvbScsXHJcbiAgICB9KTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGNvbnN0IGhpZGVUb2FzdCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIFRvYXN0Q29udHJvbGxlci5oaWRlKCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4geyBzaG93VG9hc3QsIGhpZGVUb2FzdCB9O1xyXG59OyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUQsT0FBQTtBQUFzRCxTQUFBRSxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFD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