{"version":3,"names":["_getJestObj","mock","interceptors","request","use","jest","fn","response","get","post","put","delete","getItem","Promise","resolve","setItem","removeItem","Text","Button","Chip","TextInput","Card","Title","Content","Actions","Avatar","Icon","IconButton","FAB","Divider","Surface","ActivityIndicator","Portal","Dialog","useTheme","mockReturnValue","colors","primary","background","surface","error","text","onSurface","disabled","placeholder","backdrop","notification","dark","roundness","animation","scale","useAuth","user","username","nickname","isAuthenticated","login","logout","useEmotion","emotions","emotion_id","name","icon","selectedEmotions","selectEmotion","logEmotion","rn","requireActual","Image","View","ScrollView","_interopRequireDefault","require","_react","_reactNative","_HomeScreen","_jsxRuntime","_require","describe","beforeEach","clearAllMocks","it","_render","render","jsx","default","UNSAFE_getByType","expect","toBeTruthy"],"sources":["HomeScreen.test.tsx"],"sourcesContent":["// __tests__/screens/HomeScreen.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport HomeScreen from '../../src/screens/HomeScreen';\r\n\r\n// Mock the external modules\r\njest.mock('../../src/services/api/client', () => ({\r\n  interceptors: {\r\n    request: {\r\n      use: jest.fn()\r\n    },\r\n    response: {\r\n      use: jest.fn()\r\n    }\r\n  },\r\n  get: jest.fn(),\r\n  post: jest.fn(),\r\n  put: jest.fn(),\r\n  delete: jest.fn()\r\n}));\r\n\r\n// Mock AsyncStorage\r\njest.mock('@react-native-async-storage/async-storage', () => ({\r\n  getItem: jest.fn(() => Promise.resolve('test_token')),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn()\r\n}));\r\n\r\n// Mock MaterialCommunityIcons\r\njest.mock('react-native-vector-icons/MaterialCommunityIcons', () => 'MaterialCommunityIcons');\r\n\r\n// Mock react-native-paper\r\njest.mock('react-native-paper', () => {\r\n  return {\r\n    // Mock components with simple string representations\r\n    Text: 'Text',\r\n    Button: 'Button',\r\n    Chip: 'Chip',\r\n    TextInput: 'TextInput',\r\n    Card: {\r\n      Title: 'Card.Title',\r\n      Content: 'Card.Content',\r\n      Actions: 'Card.Actions',\r\n    },\r\n    Avatar: {\r\n      Icon: 'Avatar.Icon',\r\n    },\r\n    IconButton: 'IconButton',\r\n    FAB: 'FAB',\r\n    Divider: 'Divider',\r\n    Surface: 'Surface',\r\n    ActivityIndicator: 'ActivityIndicator',\r\n    Portal: 'Portal',\r\n    Dialog: {\r\n      Title: 'Dialog.Title',\r\n      Content: 'Dialog.Content',\r\n      Actions: 'Dialog.Actions',\r\n    },\r\n    // Mock useTheme hook\r\n    useTheme: jest.fn().mockReturnValue({\r\n      colors: {\r\n        primary: '#6200ee',\r\n        background: '#f6f6f6',\r\n        surface: '#ffffff',\r\n        error: '#B00020',\r\n        text: '#000000',\r\n        onSurface: '#000000',\r\n        disabled: 'rgba(0, 0, 0, 0.26)',\r\n        placeholder: 'rgba(0, 0, 0, 0.54)',\r\n        backdrop: 'rgba(0, 0, 0, 0.5)',\r\n        notification: '#f50057',\r\n      },\r\n      dark: false,\r\n      roundness: 4,\r\n      animation: {\r\n        scale: 1,\r\n      },\r\n    }),\r\n  };\r\n});\r\n\r\n// Mock contexts\r\njest.mock('../../src/contexts/AuthContext', () => ({\r\n  useAuth: jest.fn().mockReturnValue({\r\n    user: { username: 'testuser', nickname: 'Test User' },\r\n    isAuthenticated: true,\r\n    login: jest.fn(),\r\n    logout: jest.fn()\r\n  })\r\n}));\r\n\r\njest.mock('../../src/contexts/EmotionContext', () => ({\r\n  useEmotion: jest.fn().mockReturnValue({\r\n    emotions: [\r\n      { emotion_id: 1, name: '행복', icon: 'emoticon-happy-outline' },\r\n      { emotion_id: 2, name: '감사', icon: 'hand-heart' }\r\n    ],\r\n    selectedEmotions: [],\r\n    selectEmotion: jest.fn(),\r\n    logEmotion: jest.fn()\r\n  })\r\n}));\r\n\r\n// Create mock for test rendering\r\njest.mock('react-native', () => {\r\n  const rn = jest.requireActual('react-native');\r\n  rn.Image = 'Image';\r\n  rn.View = 'View';\r\n  rn.ScrollView = 'ScrollView';\r\n  return rn;\r\n});\r\n\r\ndescribe('HomeScreen', () => {\r\n  beforeEach(() => {\r\n    // Clear all mocks before each test\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it('renders without crashing', () => {\r\n    const { UNSAFE_getByType } = render(<HomeScreen />);\r\n    expect(UNSAFE_getByType('View')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}