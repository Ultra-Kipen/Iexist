7a4a612b46abd5db5c2552c969c8be1a
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._updatePropsJS = void 0;
Object.defineProperty(exports, "createJSReanimatedModule", {
  enumerable: true,
  get: function get() {
    return _JSReanimated.createJSReanimatedModule;
  }
});
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _errors = require("../../errors.js");
var _index = require("../../logger/index.js");
var _propsAllowlists = require("../../propsAllowlists.js");
var _webUtils = require("./webUtils");
var _JSReanimated = require("./JSReanimated.js");
global._makeShareableClone = function () {
  throw new _errors.ReanimatedError('`_makeShareableClone` should never be called from React runtime.');
};
global._scheduleHostFunctionOnJS = function () {
  throw new _errors.ReanimatedError('`_scheduleOnJS` should never be called from React runtime.');
};
global._scheduleOnRuntime = function () {
  throw new _errors.ReanimatedError('`_scheduleOnRuntime` should never be called from React runtime.');
};
var _updatePropsJS = exports._updatePropsJS = function _updatePropsJS(updates, viewRef, isAnimatedProps) {
  if (viewRef) {
    var component = viewRef.getAnimatableRef ? viewRef.getAnimatableRef() : viewRef;
    var _Object$keys$reduce = Object.keys(updates).reduce(function (acc, key) {
        var value = updates[key];
        var index = typeof value === 'function' ? 1 : 0;
        acc[index][key] = value;
        return acc;
      }, [{}, {}]),
      _Object$keys$reduce2 = (0, _slicedToArray2.default)(_Object$keys$reduce, 1),
      rawStyles = _Object$keys$reduce2[0];
    if (typeof component.setNativeProps === 'function') {
      setNativeProps(component, rawStyles, isAnimatedProps);
    } else if (_webUtils.createReactDOMStyle !== undefined && component.style !== undefined) {
      updatePropsDOM(component, rawStyles, isAnimatedProps);
    } else if (Object.keys(component.props).length > 0) {
      Object.keys(component.props).forEach(function (key) {
        if (!rawStyles[key]) {
          return;
        }
        var dashedKey = key.replace(/[A-Z]/g, function (m) {
          return '-' + m.toLowerCase();
        });
        component._touchableNode.setAttribute(dashedKey, rawStyles[key]);
      });
    } else {
      var componentName = 'className' in component ? component == null ? void 0 : component.className : '';
      _index.logger.warn(`It's not possible to manipulate the component ${componentName}`);
    }
  }
};
var setNativeProps = function setNativeProps(component, newProps, isAnimatedProps) {
  if (isAnimatedProps) {
    var uiProps = {};
    for (var key in newProps) {
      if (isNativeProp(key)) {
        uiProps[key] = newProps[key];
      }
    }
    component.setNativeProps == null || component.setNativeProps(uiProps);
  }
  var previousStyle = component.previousStyle ? component.previousStyle : {};
  var currentStyle = Object.assign({}, previousStyle, newProps);
  component.previousStyle = currentStyle;
  component.setNativeProps == null || component.setNativeProps({
    style: currentStyle
  });
};
var updatePropsDOM = function updatePropsDOM(component, style, isAnimatedProps) {
  var previousStyle = component.previousStyle ? component.previousStyle : {};
  var currentStyle = Object.assign({}, previousStyle, style);
  component.previousStyle = currentStyle;
  var domStyle = (0, _webUtils.createReactDOMStyle)(currentStyle);
  if (Array.isArray(domStyle.transform) && _webUtils.createTransformValue !== undefined) {
    domStyle.transform = (0, _webUtils.createTransformValue)(domStyle.transform);
  }
  if (_webUtils.createTextShadowValue !== undefined && (domStyle.textShadowColor || domStyle.textShadowRadius || domStyle.textShadowOffset)) {
    domStyle.textShadow = (0, _webUtils.createTextShadowValue)({
      textShadowColor: domStyle.textShadowColor,
      textShadowOffset: domStyle.textShadowOffset,
      textShadowRadius: domStyle.textShadowRadius
    });
  }
  for (var key in domStyle) {
    if (isAnimatedProps) {
      if (component.nodeName === 'INPUT' && key === 'text') {
        component.value = domStyle[key];
      } else {
        component.setAttribute(key, domStyle[key]);
      }
    } else {
      component.style[key] = domStyle[key];
    }
  }
};
function isNativeProp(propName) {
  return !!_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST[propName];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX3VwZGF0ZVByb3BzSlMiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX0pTUmVhbmltYXRlZCIsImNyZWF0ZUpTUmVhbmltYXRlZE1vZHVsZSIsIl9zbGljZWRUb0FycmF5MiIsIl9lcnJvcnMiLCJfaW5kZXgiLCJfcHJvcHNBbGxvd2xpc3RzIiwiX3dlYlV0aWxzIiwiZ2xvYmFsIiwiX21ha2VTaGFyZWFibGVDbG9uZSIsIlJlYW5pbWF0ZWRFcnJvciIsIl9zY2hlZHVsZUhvc3RGdW5jdGlvbk9uSlMiLCJfc2NoZWR1bGVPblJ1bnRpbWUiLCJ1cGRhdGVzIiwidmlld1JlZiIsImlzQW5pbWF0ZWRQcm9wcyIsImNvbXBvbmVudCIsImdldEFuaW1hdGFibGVSZWYiLCJfT2JqZWN0JGtleXMkcmVkdWNlIiwia2V5cyIsInJlZHVjZSIsImFjYyIsImtleSIsImluZGV4IiwiX09iamVjdCRrZXlzJHJlZHVjZTIiLCJkZWZhdWx0IiwicmF3U3R5bGVzIiwic2V0TmF0aXZlUHJvcHMiLCJjcmVhdGVSZWFjdERPTVN0eWxlIiwidW5kZWZpbmVkIiwic3R5bGUiLCJ1cGRhdGVQcm9wc0RPTSIsInByb3BzIiwibGVuZ3RoIiwiZm9yRWFjaCIsImRhc2hlZEtleSIsInJlcGxhY2UiLCJtIiwidG9Mb3dlckNhc2UiLCJfdG91Y2hhYmxlTm9kZSIsInNldEF0dHJpYnV0ZSIsImNvbXBvbmVudE5hbWUiLCJjbGFzc05hbWUiLCJsb2dnZXIiLCJ3YXJuIiwibmV3UHJvcHMiLCJ1aVByb3BzIiwiaXNOYXRpdmVQcm9wIiwicHJldmlvdXNTdHlsZSIsImN1cnJlbnRTdHlsZSIsImFzc2lnbiIsImRvbVN0eWxlIiwiQXJyYXkiLCJpc0FycmF5IiwidHJhbnNmb3JtIiwiY3JlYXRlVHJhbnNmb3JtVmFsdWUiLCJjcmVhdGVUZXh0U2hhZG93VmFsdWUiLCJ0ZXh0U2hhZG93Q29sb3IiLCJ0ZXh0U2hhZG93UmFkaXVzIiwidGV4dFNoYWRvd09mZnNldCIsInRleHRTaGFkb3ciLCJub2RlTmFtZSIsInByb3BOYW1lIiwiUHJvcHNBbGxvd2xpc3RzIiwiTkFUSVZFX1RIUkVBRF9QUk9QU19XSElURUxJU1QiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvUmVhbmltYXRlZE1vZHVsZS9qcy1yZWFuaW1hdGVkL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUFBLElBQUFBLHNCQUFBLEdBQUFDLE9BQUE7QUFBQUMsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsS0FBQTtBQUFBO0FBQUFELE9BQUEsQ0FBQUUsY0FBQTtBQUFBSixNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBRyxVQUFBO0VBQUFDLEdBQUEsV0FBQUEsSUFBQTtJQUFBLE9BQUFDLGFBQUEsQ0FBQUMsd0JBQUE7RUFBQTtBQUFBO0FBQUEsSUFBQUMsZUFBQSxHQUFBWCxzQkFBQSxDQUFBQyxPQUFBO0FBRVosSUFBQVcsT0FBQSxHQUFBWCxPQUFBO0FBQ0EsSUFBQVksTUFBQSxHQUFBWixPQUFBO0FBQ0EsSUFBQWEsZ0JBQUEsR0FBQWIsT0FBQTtBQUNBLElBQUFjLFNBQUEsR0FBQWQsT0FBQTtBQU1BLElBQUFRLGFBQUEsR0FBQVIsT0FBQTtBQUdBZSxNQUFNLENBQUNDLG1CQUFtQixHQUFHLFlBQU07RUFDakMsTUFBTSxJQUFJQyx1QkFBZSxDQUN2QixrRUFDRixDQUFDO0FBQ0gsQ0FBQztBQUVERixNQUFNLENBQUNHLHlCQUF5QixHQUFHLFlBQU07RUFDdkMsTUFBTSxJQUFJRCx1QkFBZSxDQUN2Qiw0REFDRixDQUFDO0FBQ0gsQ0FBQztBQUVERixNQUFNLENBQUNJLGtCQUFrQixHQUFHLFlBQU07RUFDaEMsTUFBTSxJQUFJRix1QkFBZSxDQUN2QixpRUFDRixDQUFDO0FBQ0gsQ0FBQztBQXdCTSxJQUFNWixjQUFjLEdBQUFGLE9BQUEsQ0FBQUUsY0FBQSxHQUFHLFNBQWpCQSxjQUFjQSxDQUV6QmUsT0FBd0MsRUFDeENDLE9BRUMsRUFDREMsZUFBeUIsRUFDaEI7RUFDVCxJQUFJRCxPQUFPLEVBQUU7SUFDWCxJQUFNRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQ0csZ0JBQWdCLEdBQ3RDSCxPQUFPLENBQUNHLGdCQUFnQixDQUFDLENBQUMsR0FDMUJILE9BQU87SUFDWCxJQUFBSSxtQkFBQSxHQUFvQnhCLE1BQU0sQ0FBQ3lCLElBQUksQ0FBQ04sT0FBTyxDQUFDLENBQUNPLE1BQU0sQ0FDN0MsVUFBQ0MsR0FBcUMsRUFBRUMsR0FBRyxFQUFLO1FBQzlDLElBQU16QixLQUFLLEdBQUdnQixPQUFPLENBQUNTLEdBQUcsQ0FBQztRQUMxQixJQUFNQyxLQUFLLEdBQUcsT0FBTzFCLEtBQUssS0FBSyxVQUFVLEdBQUcsQ0FBQyxHQUFHLENBQUM7UUFDakR3QixHQUFHLENBQUNFLEtBQUssQ0FBQyxDQUFDRCxHQUFHLENBQUMsR0FBR3pCLEtBQUs7UUFDdkIsT0FBT3dCLEdBQUc7TUFDWixDQUFDLEVBQ0QsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FDVCxDQUFDO01BQUFHLG9CQUFBLE9BQUFyQixlQUFBLENBQUFzQixPQUFBLEVBQUFQLG1CQUFBO01BUk1RLFNBQVMsR0FBQUYsb0JBQUE7SUFVaEIsSUFBSSxPQUFPUixTQUFTLENBQUNXLGNBQWMsS0FBSyxVQUFVLEVBQUU7TUFJbERBLGNBQWMsQ0FBQ1gsU0FBUyxFQUFFVSxTQUFTLEVBQUVYLGVBQWUsQ0FBQztJQUN2RCxDQUFDLE1BQU0sSUFDTGEsNkJBQW1CLEtBQUtDLFNBQVMsSUFDakNiLFNBQVMsQ0FBQ2MsS0FBSyxLQUFLRCxTQUFTLEVBQzdCO01BR0FFLGNBQWMsQ0FBQ2YsU0FBUyxFQUFFVSxTQUFTLEVBQUVYLGVBQWUsQ0FBQztJQUN2RCxDQUFDLE1BQU0sSUFBSXJCLE1BQU0sQ0FBQ3lCLElBQUksQ0FBQ0gsU0FBUyxDQUFDZ0IsS0FBSyxDQUFDLENBQUNDLE1BQU0sR0FBRyxDQUFDLEVBQUU7TUFDbER2QyxNQUFNLENBQUN5QixJQUFJLENBQUNILFNBQVMsQ0FBQ2dCLEtBQUssQ0FBQyxDQUFDRSxPQUFPLENBQUUsVUFBQVosR0FBRyxFQUFLO1FBQzVDLElBQUksQ0FBQ0ksU0FBUyxDQUFDSixHQUFHLENBQUMsRUFBRTtVQUNuQjtRQUNGO1FBQ0EsSUFBTWEsU0FBUyxHQUFHYixHQUFHLENBQUNjLE9BQU8sQ0FBQyxRQUFRLEVBQUcsVUFBQUMsQ0FBQztVQUFBLE9BQUssR0FBRyxHQUFHQSxDQUFDLENBQUNDLFdBQVcsQ0FBQyxDQUFDO1FBQUEsRUFBQztRQUNyRXRCLFNBQVMsQ0FBQ3VCLGNBQWMsQ0FBQ0MsWUFBWSxDQUFDTCxTQUFTLEVBQUVULFNBQVMsQ0FBQ0osR0FBRyxDQUFDLENBQUM7TUFDbEUsQ0FBQyxDQUFDO0lBQ0osQ0FBQyxNQUFNO01BQ0wsSUFBTW1CLGFBQWEsR0FDakIsV0FBVyxJQUFJekIsU0FBUyxHQUFHQSxTQUFTLG9CQUFUQSxTQUFTLENBQUUwQixTQUFTLEdBQUcsRUFBRTtNQUN0REMsYUFBTSxDQUFDQyxJQUFJLENBQ1QsaURBQWlESCxhQUFhLEVBQ2hFLENBQUM7SUFDSDtFQUNGO0FBQ0YsQ0FBQztBQUVELElBQU1kLGNBQWMsR0FBRyxTQUFqQkEsY0FBY0EsQ0FDbEJYLFNBQXdELEVBQ3hENkIsUUFBb0IsRUFDcEI5QixlQUF5QixFQUNoQjtFQUNULElBQUlBLGVBQWUsRUFBRTtJQUNuQixJQUFNK0IsT0FBZ0MsR0FBRyxDQUFDLENBQUM7SUFDM0MsS0FBSyxJQUFNeEIsR0FBRyxJQUFJdUIsUUFBUSxFQUFFO01BQzFCLElBQUlFLFlBQVksQ0FBQ3pCLEdBQUcsQ0FBQyxFQUFFO1FBQ3JCd0IsT0FBTyxDQUFDeEIsR0FBRyxDQUFDLEdBQUd1QixRQUFRLENBQUN2QixHQUFHLENBQUM7TUFDOUI7SUFDRjtJQUdBTixTQUFTLENBQUNXLGNBQWMsWUFBeEJYLFNBQVMsQ0FBQ1csY0FBYyxDQUFHbUIsT0FBTyxDQUFDO0VBQ3JDO0VBRUEsSUFBTUUsYUFBYSxHQUFHaEMsU0FBUyxDQUFDZ0MsYUFBYSxHQUFHaEMsU0FBUyxDQUFDZ0MsYUFBYSxHQUFHLENBQUMsQ0FBQztFQUM1RSxJQUFNQyxZQUFZLEdBQUF2RCxNQUFBLENBQUF3RCxNQUFBLEtBQVFGLGFBQWEsRUFBS0gsUUFBQSxDQUFVO0VBQ3REN0IsU0FBUyxDQUFDZ0MsYUFBYSxHQUFHQyxZQUFZO0VBRXRDakMsU0FBUyxDQUFDVyxjQUFjLFlBQXhCWCxTQUFTLENBQUNXLGNBQWMsQ0FBRztJQUFFRyxLQUFLLEVBQUVtQjtFQUFhLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBRUQsSUFBTWxCLGNBQWMsR0FBRyxTQUFqQkEsY0FBY0EsQ0FDbEJmLFNBQThDLEVBQzlDYyxLQUFpQixFQUNqQmYsZUFBeUIsRUFDaEI7RUFDVCxJQUFNaUMsYUFBYSxHQUFJaEMsU0FBUyxDQUEyQmdDLGFBQWEsR0FDbkVoQyxTQUFTLENBQTJCZ0MsYUFBYSxHQUNsRCxDQUFDLENBQUM7RUFDTixJQUFNQyxZQUFZLEdBQUF2RCxNQUFBLENBQUF3RCxNQUFBLEtBQVFGLGFBQWEsRUFBS2xCLEtBQUEsQ0FBTztFQUNsRGQsU0FBUyxDQUEyQmdDLGFBQWEsR0FBR0MsWUFBWTtFQUVqRSxJQUFNRSxRQUFRLEdBQUcsSUFBQXZCLDZCQUFtQixFQUFDcUIsWUFBWSxDQUFDO0VBQ2xELElBQUlHLEtBQUssQ0FBQ0MsT0FBTyxDQUFDRixRQUFRLENBQUNHLFNBQVMsQ0FBQyxJQUFJQyw4QkFBb0IsS0FBSzFCLFNBQVMsRUFBRTtJQUMzRXNCLFFBQVEsQ0FBQ0csU0FBUyxHQUFHLElBQUFDLDhCQUFvQixFQUFDSixRQUFRLENBQUNHLFNBQVMsQ0FBQztFQUMvRDtFQUVBLElBQ0VFLCtCQUFxQixLQUFLM0IsU0FBUyxLQUNsQ3NCLFFBQVEsQ0FBQ00sZUFBZSxJQUN2Qk4sUUFBUSxDQUFDTyxnQkFBZ0IsSUFDekJQLFFBQVEsQ0FBQ1EsZ0JBQWdCLENBQUMsRUFDNUI7SUFDQVIsUUFBUSxDQUFDUyxVQUFVLEdBQUcsSUFBQUosK0JBQXFCLEVBQUM7TUFDMUNDLGVBQWUsRUFBRU4sUUFBUSxDQUFDTSxlQUFlO01BQ3pDRSxnQkFBZ0IsRUFBRVIsUUFBUSxDQUFDUSxnQkFBZ0I7TUFDM0NELGdCQUFnQixFQUFFUCxRQUFRLENBQUNPO0lBQzdCLENBQUMsQ0FBQztFQUNKO0VBRUEsS0FBSyxJQUFNcEMsR0FBRyxJQUFJNkIsUUFBUSxFQUFFO0lBQzFCLElBQUlwQyxlQUFlLEVBQUU7TUFJbkIsSUFBS0MsU0FBUyxDQUFpQjZDLFFBQVEsS0FBSyxPQUFPLElBQUl2QyxHQUFHLEtBQUssTUFBTSxFQUFFO1FBQ3BFTixTQUFTLENBQXNCbkIsS0FBSyxHQUFHc0QsUUFBUSxDQUFDN0IsR0FBRyxDQUFXO01BQ2pFLENBQUMsTUFBTTtRQUNKTixTQUFTLENBQWlCd0IsWUFBWSxDQUFDbEIsR0FBRyxFQUFFNkIsUUFBUSxDQUFDN0IsR0FBRyxDQUFDLENBQUM7TUFDN0Q7SUFDRixDQUFDLE1BQU07TUFDSk4sU0FBUyxDQUFDYyxLQUFLLENBQWdCUixHQUFHLENBQUMsR0FBRzZCLFFBQVEsQ0FBQzdCLEdBQUcsQ0FBQztJQUN0RDtFQUNGO0FBQ0YsQ0FBQztBQUVELFNBQVN5QixZQUFZQSxDQUFDZSxRQUFnQixFQUFXO0VBQy9DLE9BQU8sQ0FBQyxDQUFDQyxnQ0FBZSxDQUFDQyw2QkFBNkIsQ0FBQ0YsUUFBUSxDQUFDO0FBQ2xFIiwiaWdub3JlTGlzdCI6W119