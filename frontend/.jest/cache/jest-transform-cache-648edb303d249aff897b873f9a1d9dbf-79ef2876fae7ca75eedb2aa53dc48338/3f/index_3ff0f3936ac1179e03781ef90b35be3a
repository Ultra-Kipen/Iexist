94bcfed35c974fcd2d36df7fef4fb131
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ActionType", {
  enumerable: true,
  get: function get() {
    return _types.ActionType;
  }
});
Object.defineProperty(exports, "StoreProvider", {
  enumerable: true,
  get: function get() {
    return _StoreContext.StoreProvider;
  }
});
Object.defineProperty(exports, "actions", {
  enumerable: true,
  get: function get() {
    return _actions.actions;
  }
});
exports.default = void 0;
Object.defineProperty(exports, "useStore", {
  enumerable: true,
  get: function get() {
    return _StoreContext.useStore;
  }
});
var _StoreContext = require("./StoreContext");
var _actions = require("./actions");
var _types = require("./types");
function cov_1jsnhvdo13() {
  var path = "C:\\app_build\\Iexist\\frontend\\src\\store\\index.ts";
  var hash = "bb82cddf9d47c51f82c39c51a4797b7933a4d13a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\app_build\\Iexist\\frontend\\src\\store\\index.ts",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb82cddf9d47c51f82c39c51a4797b7933a4d13a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1jsnhvdo13 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jsnhvdo13();
var _default = exports.default = {
  StoreProvider: _StoreContext.StoreProvider,
  useStore: _StoreContext.useStore,
  actions: _actions.actions
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfU3RvcmVDb250ZXh0IiwicmVxdWlyZSIsIl9hY3Rpb25zIiwiX3R5cGVzIiwiY292XzFqc25odmRvMTMiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwiZm5NYXAiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCIsIlN0b3JlUHJvdmlkZXIiLCJ1c2VTdG9yZSIsImFjdGlvbnMiXSwic291cmNlcyI6WyJpbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdG9yZVByb3ZpZGVyLCB1c2VTdG9yZSB9IGZyb20gJy4vU3RvcmVDb250ZXh0JztcclxuaW1wb3J0IHsgYWN0aW9ucyB9IGZyb20gJy4vYWN0aW9ucyc7XHJcbmltcG9ydCB7IEFwcFN0YXRlLCBBY3Rpb24sIEFjdGlvblR5cGUgfSBmcm9tICcuL3R5cGVzJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgU3RvcmVQcm92aWRlcixcclxuICB1c2VTdG9yZSxcclxuICBhY3Rpb25zLFxyXG4gIEFjdGlvblR5cGVcclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIHsgQXBwU3RhdGUsIEFjdGlvbiB9O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIFN0b3JlUHJvdmlkZXIsXHJcbiAgdXNlU3RvcmUsXHJcbiAgYWN0aW9ucyxcclxufTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxhQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxRQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxNQUFBLEdBQUFGLE9BQUE7QUFBdUQsU0FBQUcsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO0lBQUFDLEtBQUE7SUFBQUMsU0FBQTtJQUFBQyxDQUFBO0lBQUFDLENBQUE7SUFBQUMsQ0FBQTtJQUFBQyxlQUFBO0lBQUFYLElBQUE7RUFBQTtFQUFBLElBQUFZLFFBQUEsR0FBQVgsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFTLFFBQUEsQ0FBQWIsSUFBQSxLQUFBYSxRQUFBLENBQUFiLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFZLFFBQUEsQ0FBQWIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBUyxjQUFBLEdBQUFELFFBQUEsQ0FBQWIsSUFBQTtFQUFBO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFlLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFmLGNBQUE7QUFBQSxJQUFBZ0IsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FXeEM7RUFDYkMsYUFBYSxFQUFiQSwyQkFBYTtFQUNiQyxRQUFRLEVBQVJBLHNCQUFRO0VBQ1JDLE9BQU8sRUFBUEE7QUFDRixDQUFDIiwiaWdub3JlTGlzdCI6W119