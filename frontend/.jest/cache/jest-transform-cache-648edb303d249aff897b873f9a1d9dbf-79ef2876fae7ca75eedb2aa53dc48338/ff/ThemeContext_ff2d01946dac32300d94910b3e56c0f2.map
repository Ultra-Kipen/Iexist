{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_asyncStorage","_interopRequireDefault","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ThemeContext","exports","createContext","undefined","useTheme","context","useContext","Error","THEME_STORAGE_KEY","ThemeProvider","_ref","children","systemColorScheme","useColorScheme","_useState","useState","_useState2","_slicedToArray2","theme","setThemeState","_useState3","_useState4","isDarkMode","setIsDarkMode","_useState5","_useState6","isThemeLoaded","setIsThemeLoaded","useEffect","loadTheme","_ref2","_asyncToGenerator2","savedTheme","AsyncStorage","getItem","validTheme","includes","error","console","apply","arguments","setTheme","_ref3","newTheme","setItem","_x","toggleTheme","jsx","Provider","value"],"sources":["ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\r\nimport { useColorScheme } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport type ThemeType = 'light' | 'dark' | 'system';\r\n\r\ninterface ThemeContextType {\r\n  theme: ThemeType;\r\n  isDarkMode: boolean;\r\n  setTheme: (theme: ThemeType) => void;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme는 ThemeProvider 내에서 사용해야 합니다');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst THEME_STORAGE_KEY = 'app_theme_preference';\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const systemColorScheme = useColorScheme() as 'light' | 'dark';\r\n  const [theme, setThemeState] = useState<ThemeType>('system');\r\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(systemColorScheme === 'dark');\r\n  const [isThemeLoaded, setIsThemeLoaded] = useState<boolean>(false);\r\n\r\n  // 저장된 테마 설정 불러오기\r\n  useEffect(() => {\r\n    const loadTheme = async () => {\r\n      try {\r\n        const savedTheme = await AsyncStorage.getItem(THEME_STORAGE_KEY);\r\n        const validTheme = savedTheme && ['light', 'dark', 'system'].includes(savedTheme) \r\n          ? savedTheme as ThemeType \r\n          : 'system';\r\n        \r\n        setThemeState(validTheme);\r\n        \r\n        // 직접 테마에 따라 isDarkMode 설정\r\n        if (validTheme === 'dark') {\r\n          setIsDarkMode(true);\r\n        } else if (validTheme === 'light') {\r\n          setIsDarkMode(false);\r\n        } else {\r\n          // system 모드일 때는 시스템 색상 스키마에 따라 설정\r\n          setIsDarkMode(systemColorScheme === 'dark');\r\n        }\r\n        \r\n        setIsThemeLoaded(true);\r\n      } catch (error) {\r\n        console.error('테마 설정을 불러오는데 실패했습니다:', error);\r\n        setThemeState('system');\r\n        setIsDarkMode(systemColorScheme === 'dark');\r\n        setIsThemeLoaded(true);\r\n      }\r\n    };\r\n\r\n    loadTheme();\r\n  }, [systemColorScheme]);\r\n\r\n  // 테마 설정 변경\r\n  const setTheme = async (newTheme: ThemeType) => {\r\n    setThemeState(newTheme);\r\n    \r\n    // 테마에 따라 isDarkMode 직접 설정\r\n    if (newTheme === 'dark') {\r\n      setIsDarkMode(true);\r\n    } else if (newTheme === 'light') {\r\n      setIsDarkMode(false);\r\n    } else {\r\n      // system 모드일 때는 시스템 색상 스키마에 따라 설정\r\n      setIsDarkMode(systemColorScheme === 'dark');\r\n    }\r\n    \r\n    try {\r\n      await AsyncStorage.setItem(THEME_STORAGE_KEY, newTheme);\r\n    } catch (error) {\r\n      console.error('테마 설정 저장에 실패했습니다:', error);\r\n    }\r\n  };\r\n\r\n  // 라이트/다크 모드 토글\r\n  const toggleTheme = () => {\r\n    const newTheme = isDarkMode ? 'light' : 'dark';\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  // isThemeLoaded가 false일 때는 null을 반환하거나 로딩 상태를 표시할 수 있음\r\n  if (!isThemeLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        isDarkMode,\r\n        setTheme,\r\n        toggleTheme,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]}