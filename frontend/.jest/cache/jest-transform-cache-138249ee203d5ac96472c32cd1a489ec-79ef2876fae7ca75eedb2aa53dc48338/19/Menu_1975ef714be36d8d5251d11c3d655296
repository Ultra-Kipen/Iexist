16aed7b83cf464815a23add8ba0c28d7
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault2(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ELEVATION_LEVELS_MAP = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _MenuItem = _interopRequireDefault(require("./MenuItem"));
var _theming = require("../../core/theming");
var _types = require("../../types");
var _addEventListener = require("../../utils/addEventListener");
var _BackHandler = require("../../utils/BackHandler/BackHandler");
var _Portal = _interopRequireDefault(require("../Portal/Portal"));
var _Surface = _interopRequireDefault(require("../Surface"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var SCREEN_INDENT = 8;
var ANIMATION_DURATION = 250;
var EASING = _reactNative.Easing.bezier(0.4, 0, 0.2, 1);
var WINDOW_LAYOUT = _reactNative.Dimensions.get('window');
var DEFAULT_ELEVATION = 2;
var ELEVATION_LEVELS_MAP = Object.values(_types.ElevationLevels);
exports.ELEVATION_LEVELS_MAP = ELEVATION_LEVELS_MAP;
var DEFAULT_MODE = 'elevated';
var focusFirstDOMNode = function focusFirstDOMNode(el) {
  if (el && _reactNative.Platform.OS === 'web') {
    var node = (0, _reactNative.findNodeHandle)(el);
    var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
    focusableNode === null || focusableNode === void 0 ? void 0 : focusableNode.focus();
  }
};
var isCoordinate = function isCoordinate(anchor) {
  return !React.isValidElement(anchor) && typeof (anchor === null || anchor === void 0 ? void 0 : anchor.x) === 'number' && typeof (anchor === null || anchor === void 0 ? void 0 : anchor.y) === 'number';
};
var isBrowser = function isBrowser() {
  return _reactNative.Platform.OS === 'web' && 'document' in global;
};
var Menu = function Menu(_ref) {
  var visible = _ref.visible,
    statusBarHeight = _ref.statusBarHeight,
    _ref$overlayAccessibi = _ref.overlayAccessibilityLabel,
    overlayAccessibilityLabel = _ref$overlayAccessibi === void 0 ? 'Close menu' : _ref$overlayAccessibi,
    _ref$testID = _ref.testID,
    testID = _ref$testID === void 0 ? 'menu' : _ref$testID,
    anchor = _ref.anchor,
    onDismiss = _ref.onDismiss,
    anchorPosition = _ref.anchorPosition,
    contentStyle = _ref.contentStyle,
    style = _ref.style,
    _ref$elevation = _ref.elevation,
    elevation = _ref$elevation === void 0 ? DEFAULT_ELEVATION : _ref$elevation,
    _ref$mode = _ref.mode,
    mode = _ref$mode === void 0 ? DEFAULT_MODE : _ref$mode,
    children = _ref.children,
    themeOverrides = _ref.theme,
    keyboardShouldPersistTaps = _ref.keyboardShouldPersistTaps;
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var insets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();
  var _React$useState = React.useState(visible),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    rendered = _React$useState2[0],
    setRendered = _React$useState2[1];
  var _React$useState3 = React.useState(0),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    left = _React$useState4[0],
    setLeft = _React$useState4[1];
  var _React$useState5 = React.useState(0),
    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),
    top = _React$useState6[0],
    setTop = _React$useState6[1];
  var _React$useState7 = React.useState({
      width: 0,
      height: 0
    }),
    _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),
    menuLayout = _React$useState8[0],
    setMenuLayout = _React$useState8[1];
  var _React$useState9 = React.useState({
      width: 0,
      height: 0
    }),
    _React$useState10 = (0, _slicedToArray2.default)(_React$useState9, 2),
    anchorLayout = _React$useState10[0],
    setAnchorLayout = _React$useState10[1];
  var _React$useState11 = React.useState({
      width: WINDOW_LAYOUT.width,
      height: WINDOW_LAYOUT.height
    }),
    _React$useState12 = (0, _slicedToArray2.default)(_React$useState11, 2),
    windowLayout = _React$useState12[0],
    setWindowLayout = _React$useState12[1];
  var opacityAnimationRef = React.useRef(new _reactNative.Animated.Value(0));
  var scaleAnimationRef = React.useRef(new _reactNative.Animated.ValueXY({
    x: 0,
    y: 0
  }));
  var keyboardHeightRef = React.useRef(0);
  var prevVisible = React.useRef(null);
  var anchorRef = React.useRef(null);
  var menuRef = React.useRef(null);
  var prevRendered = React.useRef(false);
  var keyboardDidShow = React.useCallback(function (e) {
    var keyboardHeight = e.endCoordinates.height;
    keyboardHeightRef.current = keyboardHeight;
  }, []);
  var keyboardDidHide = React.useCallback(function () {
    keyboardHeightRef.current = 0;
  }, []);
  var keyboardDidShowListenerRef = React.useRef();
  var keyboardDidHideListenerRef = React.useRef();
  var backHandlerSubscriptionRef = React.useRef();
  var dimensionsSubscriptionRef = React.useRef();
  var handleDismiss = React.useCallback(function () {
    if (visible) {
      onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();
    }
  }, [onDismiss, visible]);
  var handleKeypress = React.useCallback(function (e) {
    if (e.key === 'Escape') {
      onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();
    }
  }, [onDismiss]);
  var removeListeners = React.useCallback(function () {
    var _backHandlerSubscript, _dimensionsSubscripti;
    (_backHandlerSubscript = backHandlerSubscriptionRef.current) === null || _backHandlerSubscript === void 0 ? void 0 : _backHandlerSubscript.remove();
    (_dimensionsSubscripti = dimensionsSubscriptionRef.current) === null || _dimensionsSubscripti === void 0 ? void 0 : _dimensionsSubscripti.remove();
    isBrowser() && document.removeEventListener('keyup', handleKeypress);
  }, [handleKeypress]);
  var attachListeners = React.useCallback(function () {
    backHandlerSubscriptionRef.current = (0, _addEventListener.addEventListener)(_BackHandler.BackHandler, 'hardwareBackPress', handleDismiss);
    dimensionsSubscriptionRef.current = (0, _addEventListener.addEventListener)(_reactNative.Dimensions, 'change', handleDismiss);
    _reactNative.Platform.OS === 'web' && document.addEventListener('keyup', handleKeypress);
  }, [handleDismiss, handleKeypress]);
  var measureMenuLayout = function measureMenuLayout() {
    return new Promise(function (resolve) {
      if (menuRef.current) {
        menuRef.current.measureInWindow(function (x, y, width, height) {
          resolve({
            x: x,
            y: y,
            width: width,
            height: height
          });
        });
      }
    });
  };
  var measureAnchorLayout = React.useCallback(function () {
    return new Promise(function (resolve) {
      if (isCoordinate(anchor)) {
        resolve({
          x: anchor.x,
          y: anchor.y,
          width: 0,
          height: 0
        });
        return;
      }
      if (anchorRef.current) {
        anchorRef.current.measureInWindow(function (x, y, width, height) {
          resolve({
            x: x,
            y: y,
            width: width,
            height: height
          });
        });
      }
    });
  }, [anchor]);
  var show = React.useCallback((0, _asyncToGenerator2.default)(function* () {
    var windowLayoutResult = _reactNative.Dimensions.get('window');
    var _yield$Promise$all = yield Promise.all([measureMenuLayout(), measureAnchorLayout()]),
      _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 2),
      menuLayoutResult = _yield$Promise$all2[0],
      anchorLayoutResult = _yield$Promise$all2[1];
    if (!windowLayoutResult.width || !windowLayoutResult.height || !menuLayoutResult.width || !menuLayoutResult.height || !anchorLayoutResult.width && !isCoordinate(anchor) || !anchorLayoutResult.height && !isCoordinate(anchor)) {
      requestAnimationFrame(show);
      return;
    }
    setLeft(anchorLayoutResult.x);
    setTop(anchorLayoutResult.y);
    setAnchorLayout({
      height: anchorLayoutResult.height,
      width: anchorLayoutResult.width
    });
    setMenuLayout({
      height: menuLayoutResult.height,
      width: menuLayoutResult.width
    });
    setWindowLayout({
      height: windowLayoutResult.height - keyboardHeightRef.current,
      width: windowLayoutResult.width
    });
    attachListeners();
    var animation = theme.animation;
    _reactNative.Animated.parallel([_reactNative.Animated.timing(scaleAnimationRef.current, {
      toValue: {
        x: menuLayoutResult.width,
        y: menuLayoutResult.height
      },
      duration: ANIMATION_DURATION * animation.scale,
      easing: EASING,
      useNativeDriver: true
    }), _reactNative.Animated.timing(opacityAnimationRef.current, {
      toValue: 1,
      duration: ANIMATION_DURATION * animation.scale,
      easing: EASING,
      useNativeDriver: true
    })]).start(function (_ref2) {
      var finished = _ref2.finished;
      if (finished) {
        focusFirstDOMNode(menuRef.current);
        prevRendered.current = true;
      }
    });
  }), [anchor, attachListeners, measureAnchorLayout, theme]);
  var hide = React.useCallback(function () {
    removeListeners();
    var animation = theme.animation;
    _reactNative.Animated.timing(opacityAnimationRef.current, {
      toValue: 0,
      duration: ANIMATION_DURATION * animation.scale,
      easing: EASING,
      useNativeDriver: true
    }).start(function (_ref3) {
      var finished = _ref3.finished;
      if (finished) {
        setMenuLayout({
          width: 0,
          height: 0
        });
        setRendered(false);
        prevRendered.current = false;
        focusFirstDOMNode(anchorRef.current);
      }
    });
  }, [removeListeners, theme]);
  var updateVisibility = React.useCallback(function () {
    var _ref5 = (0, _asyncToGenerator2.default)(function* (display) {
      yield Promise.resolve().then(function () {
        if (display && !prevRendered.current) {
          show();
          return;
        }
        if (!display && prevRendered.current) {
          hide();
        }
        return;
      });
    });
    return function (_x) {
      return _ref5.apply(this, arguments);
    };
  }(), [hide, show]);
  React.useEffect(function () {
    var opacityAnimation = opacityAnimationRef.current;
    var scaleAnimation = scaleAnimationRef.current;
    keyboardDidShowListenerRef.current = _reactNative.Keyboard.addListener('keyboardDidShow', keyboardDidShow);
    keyboardDidHideListenerRef.current = _reactNative.Keyboard.addListener('keyboardDidHide', keyboardDidHide);
    return function () {
      var _keyboardDidShowListe, _keyboardDidHideListe;
      removeListeners();
      (_keyboardDidShowListe = keyboardDidShowListenerRef.current) === null || _keyboardDidShowListe === void 0 ? void 0 : _keyboardDidShowListe.remove();
      (_keyboardDidHideListe = keyboardDidHideListenerRef.current) === null || _keyboardDidHideListe === void 0 ? void 0 : _keyboardDidHideListe.remove();
      scaleAnimation.removeAllListeners();
      opacityAnimation === null || opacityAnimation === void 0 ? void 0 : opacityAnimation.removeAllListeners();
    };
  }, [removeListeners, keyboardDidHide, keyboardDidShow]);
  React.useEffect(function () {
    if (prevVisible.current !== visible) {
      prevVisible.current = visible;
      if (visible !== rendered) {
        setRendered(visible);
      }
    }
  }, [visible, rendered]);
  React.useEffect(function () {
    updateVisibility(rendered);
  }, [rendered, updateVisibility]);
  var additionalVerticalValue = _reactNative.Platform.select({
    android: statusBarHeight != null ? statusBarHeight : insets.top,
    default: 0
  });
  var positionTransforms = [];
  var leftTransformation = left;
  var topTransformation = !isCoordinate(anchorRef.current) && anchorPosition === 'bottom' ? top + anchorLayout.height : top;
  if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {
    positionTransforms.push({
      translateX: scaleAnimationRef.current.x.interpolate({
        inputRange: [0, menuLayout.width],
        outputRange: [-(menuLayout.width / 2), 0]
      })
    });
    if (leftTransformation < SCREEN_INDENT) {
      leftTransformation = SCREEN_INDENT;
    }
  } else {
    positionTransforms.push({
      translateX: scaleAnimationRef.current.x.interpolate({
        inputRange: [0, menuLayout.width],
        outputRange: [menuLayout.width / 2, 0]
      })
    });
    leftTransformation += anchorLayout.width - menuLayout.width;
    var right = leftTransformation + menuLayout.width;
    if (right > windowLayout.width - SCREEN_INDENT) {
      leftTransformation = windowLayout.width - SCREEN_INDENT - menuLayout.width;
    }
  }
  var scrollableMenuHeight = 0;
  if (topTransformation >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && topTransformation <= windowLayout.height - topTransformation) {
    scrollableMenuHeight = windowLayout.height - topTransformation - SCREEN_INDENT - additionalVerticalValue;
  } else if (topTransformation >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && topTransformation >= windowLayout.height - top && topTransformation <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {
    scrollableMenuHeight = topTransformation + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;
  }
  scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;
  if (topTransformation <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || topTransformation >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && topTransformation <= windowLayout.height - topTransformation) {
    positionTransforms.push({
      translateY: scaleAnimationRef.current.y.interpolate({
        inputRange: [0, menuLayout.height],
        outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]
      })
    });
    if (topTransformation < SCREEN_INDENT) {
      topTransformation = SCREEN_INDENT;
    }
  } else {
    positionTransforms.push({
      translateY: scaleAnimationRef.current.y.interpolate({
        inputRange: [0, menuLayout.height],
        outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]
      })
    });
    topTransformation += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);
    var bottom = topTransformation + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;
    if (bottom > windowLayout.height - SCREEN_INDENT) {
      topTransformation = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;
    }
  }
  var shadowMenuContainerStyle = Object.assign({
    opacity: opacityAnimationRef.current,
    transform: [{
      scaleX: scaleAnimationRef.current.x.interpolate({
        inputRange: [0, menuLayout.width],
        outputRange: [0, 1]
      })
    }, {
      scaleY: scaleAnimationRef.current.y.interpolate({
        inputRange: [0, menuLayout.height],
        outputRange: [0, 1]
      })
    }],
    borderRadius: theme.roundness
  }, !theme.isV3 && {
    elevation: 8
  }, scrollableMenuHeight ? {
    height: scrollableMenuHeight
  } : {});
  var positionStyle = Object.assign({
    top: isCoordinate(anchor) ? topTransformation : topTransformation + additionalVerticalValue
  }, _reactNative.I18nManager.getConstants().isRTL ? {
    right: leftTransformation
  } : {
    left: leftTransformation
  });
  var pointerEvents = visible ? 'box-none' : 'none';
  return React.createElement(_reactNative.View, {
    ref: function ref(_ref6) {
      return anchorRef.current = _ref6;
    },
    collapsable: false
  }, isCoordinate(anchor) ? null : anchor, rendered ? React.createElement(_Portal.default, null, React.createElement(_reactNative.Pressable, {
    accessibilityLabel: overlayAccessibilityLabel,
    accessibilityRole: "button",
    onPress: onDismiss,
    style: styles.pressableOverlay
  }), React.createElement(_reactNative.View, {
    ref: function ref(_ref7) {
      return menuRef.current = _ref7;
    },
    collapsable: false,
    accessibilityViewIsModal: visible,
    style: [styles.wrapper, positionStyle, style],
    pointerEvents: pointerEvents,
    onAccessibilityEscape: onDismiss,
    testID: `${testID}-view`
  }, React.createElement(_reactNative.Animated.View, {
    pointerEvents: pointerEvents,
    style: {
      transform: positionTransforms
    }
  }, React.createElement(_Surface.default, _extends({
    mode: mode,
    pointerEvents: pointerEvents,
    style: [styles.shadowMenuContainer, shadowMenuContainerStyle, theme.isV3 && {
      backgroundColor: theme.colors.elevation[ELEVATION_LEVELS_MAP[elevation]]
    }, contentStyle]
  }, theme.isV3 && {
    elevation: elevation
  }, {
    testID: `${testID}-surface`,
    theme: theme
  }), scrollableMenuHeight && React.createElement(_reactNative.ScrollView, {
    keyboardShouldPersistTaps: keyboardShouldPersistTaps
  }, children) || React.createElement(React.Fragment, null, children))))) : null);
};
Menu.Item = _MenuItem.default;
var styles = _reactNative.StyleSheet.create({
  wrapper: {
    position: 'absolute'
  },
  shadowMenuContainer: {
    opacity: 0,
    paddingVertical: 8
  },
  pressableOverlay: Object.assign({}, _reactNative.Platform.select({
    web: {
      cursor: 'auto'
    }
  }), _reactNative.StyleSheet.absoluteFillObject, {
    width: '100%'
  })
});
var _default = Menu;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,