{"version":3,"names":["_getJestObj","mock","rn","jest","requireActual","Object","assign","Animated","timing","fn","start","callback","Value","setValue","interpolate","_interopRequireDefault","require","_react","_reactNative","_Toast","_interopRequireWildcard","_reactNative2","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_require","describe","beforeEach","useFakeTimers","afterEach","useRealTimers","clearAllMocks","it","_render","render","jsx","visible","message","getByText","expect","toBeTruthy","_render2","queryByText","toBeNull","types","type","color","forEach","_ref","_render3","_render4","position","_render5","onClose","duration","act","advanceTimersByTime","toHaveBeenCalled","_render6","getByTestId","fireEvent","press","TestIcon","Text","children","_render7","icon","mockInstance","show","hide","ToastController","setRef","toHaveBeenCalledWith","toHaveBeenCalledTimes","not","toThrow"],"sources":["Toast.test.tsx"],"sourcesContent":["// __tests__/components/Toast.test.tsx\r\nimport React from 'react';\r\nimport { render, act, fireEvent } from '@testing-library/react-native';\r\nimport Toast, { ToastController } from '../../src/components/Toast';\r\nimport { Text, View } from 'react-native';\r\n\r\n// Animated 모킹\r\njest.mock('react-native', () => {\r\n  const rn = jest.requireActual('react-native');\r\n  return {\r\n    ...rn,\r\n    Animated: {\r\n      ...rn.Animated,\r\n      timing: jest.fn(() => ({\r\n        start: jest.fn(callback => callback && callback()),\r\n      })),\r\n      Value: jest.fn(() => ({\r\n        setValue: jest.fn(),\r\n        interpolate: jest.fn(() => ({ interpolate: jest.fn() })),\r\n      })),\r\n    },\r\n  };\r\n});\r\n\r\ndescribe('Toast', () => {\r\n  beforeEach(() => {\r\n    jest.useFakeTimers();\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.useRealTimers();\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it('renders correctly with default props', () => {\r\n    const { getByText } = render(\r\n      <Toast visible={true} message=\"테스트 메시지\" />\r\n    );\r\n    \r\n    expect(getByText('테스트 메시지')).toBeTruthy();\r\n  });\r\n\r\n  it('does not render when visible is false', () => {\r\n    const { queryByText } = render(\r\n      <Toast visible={false} message=\"테스트 메시지\" />\r\n    );\r\n    \r\n    expect(queryByText('테스트 메시지')).toBeNull();\r\n  });\r\n\r\n  it('renders with different background colors based on type', () => {\r\n    const types = [\r\n      { type: 'success', color: '#4CAF50' },\r\n      { type: 'error', color: '#F44336' },\r\n      { type: 'warning', color: '#FF9800' },\r\n      { type: 'info', color: '#2196F3' },\r\n    ];\r\n    \r\n    types.forEach(({ type, color }) => {\r\n      const { getByText } = render(\r\n        <Toast visible={true} message=\"테스트 메시지\" type={type as any} />\r\n      );\r\n      \r\n      // 메시지가 렌더링되는지 확인\r\n      expect(getByText('테스트 메시지')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  it('renders at the top when position is set to top', () => {\r\n    const { getByText } = render(\r\n      <Toast visible={true} message=\"테스트 메시지\" position=\"top\" />\r\n    );\r\n    \r\n    // 메시지가 렌더링되는지 확인\r\n    expect(getByText('테스트 메시지')).toBeTruthy();\r\n  });\r\n\r\n  it('renders at the bottom by default', () => {\r\n    const { getByText } = render(\r\n      <Toast visible={true} message=\"테스트 메시지\" />\r\n    );\r\n    \r\n    // 메시지가 렌더링되는지 확인\r\n    expect(getByText('테스트 메시지')).toBeTruthy();\r\n  });\r\n\r\n  it('calls onClose after duration', () => {\r\n    const onClose = jest.fn();\r\n    render(\r\n      <Toast visible={true} message=\"테스트 메시지\" duration={3000} onClose={onClose} />\r\n    );\r\n    \r\n    // 타이머 진행\r\n    act(() => {\r\n      jest.advanceTimersByTime(3300); // 300ms 애니메이션 + 3000ms 타이머\r\n    });\r\n    \r\n    // onClose가 호출되었는지 확인\r\n    expect(onClose).toHaveBeenCalled();\r\n  });\r\n\r\n  it('hides when tapped', () => {\r\n    const onClose = jest.fn();\r\n    const { getByTestId } = render(\r\n        <Toast visible={true} message=\"테스트 메시지\" onClose={onClose} />\r\n      );\r\n      \r\n      // 토스트 터치\r\n      fireEvent.press(getByTestId('toast-touchable'));\r\n    \r\n    // 애니메이션 완료\r\n    act(() => {\r\n      jest.advanceTimersByTime(300); // 애니메이션 시간\r\n    });\r\n    \r\n    // onClose가 호출되었는지 확인\r\n    expect(onClose).toHaveBeenCalled();\r\n  });\r\n\r\n  it('renders icon when provided', () => {\r\n    const TestIcon = () => <Text>아이콘</Text>;\r\n    const { getByText } = render(\r\n      <Toast visible={true} message=\"테스트 메시지\" icon={<TestIcon />} />\r\n    );\r\n    \r\n    // 아이콘과 메시지가 모두 렌더링되는지 확인\r\n    expect(getByText('아이콘')).toBeTruthy();\r\n    expect(getByText('테스트 메시지')).toBeTruthy();\r\n  });\r\n\r\n  it('ToastController manages instances correctly', () => {\r\n    // 모의 인스턴스 생성\r\n    const mockInstance = {\r\n      show: jest.fn(),\r\n      hide: jest.fn(),\r\n    };\r\n    \r\n    // ToastController에 인스턴스 설정\r\n    ToastController.setRef(mockInstance);\r\n    \r\n    // Controller 메서드 호출\r\n    ToastController.show({ message: '테스트 메시지' });\r\n    ToastController.hide();\r\n    \r\n    // 모의 인스턴스 메서드가 호출되었는지 확인\r\n    expect(mockInstance.show).toHaveBeenCalledWith({ message: '테스트 메시지' });\r\n    expect(mockInstance.hide).toHaveBeenCalledTimes(1);\r\n  });\r\n\r\n  it('ToastController handles missing instance gracefully', () => {\r\n    // 인스턴스를 null로 설정\r\n    ToastController.setRef(null);\r\n    \r\n    // 에러가 발생하지 않아야 함\r\n    expect(() => {\r\n      ToastController.show({ message: '테스트 메시지' });\r\n      ToastController.hide();\r\n    }).not.toThrow();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}