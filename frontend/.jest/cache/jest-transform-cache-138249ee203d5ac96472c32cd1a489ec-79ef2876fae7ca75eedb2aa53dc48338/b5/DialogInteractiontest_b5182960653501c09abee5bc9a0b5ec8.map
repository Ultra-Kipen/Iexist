{"version":3,"names":["_getJestObj","mock","__esModule","default","jest","fn","useTheme","mockReturnValue","colors","primary","surface","background","useAuth","user","username","isAuthenticated","useEmotion","emotions","emotion_id","name","logEmotion","_interopRequireDefault","require","_asyncToGenerator2","_slicedToArray2","_react","_reactNative","_reactNative2","_jsxRuntime","_require","TextInput","props","jsx","View","Object","assign","MockHomeScreen","_React$useState","React","useState","_React$useState2","isDialogVisible","setIsDialogVisible","showDialog","hideDialog","jsxs","testID","children","onChangeText","TouchableOpacity","onPress","Text","describe","beforeEach","clearAllMocks","HomeScreenModule","mockImplementation","it","HomeScreen","_render","render","getByTestId","getByText","queryByTestId","contentInput","emotionChip","shareButton","fireEvent","changeText","press","dialog","expect","toBeTruthy","confirmButton","toBeNull"],"sources":["DialogInteraction.test.tsx"],"sourcesContent":["// DialogInteraction.test.tsx (수정)\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { Text, View, TouchableOpacity, ViewProps, TextInputProps } from 'react-native';\r\nimport * as AuthContextModule from '../../src/contexts/AuthContext';\r\nimport * as EmotionContextModule from '../../src/contexts/EmotionContext';\r\n\r\n// TextInput 모의 컴포넌트에 타입 추가\r\ninterface MockTextInputProps extends ViewProps {\r\n  onChangeText?: (text: string) => void;\r\n  testID?: string;\r\n  [key: string]: any; // 기타 속성을 허용\r\n}\r\n\r\nfunction TextInput(props: MockTextInputProps) {\r\n  return <View {...props} />;\r\n}\r\n\r\n// 실제 HomeScreen 대신 사용할 간단한 모의 컴포넌트\r\nfunction MockHomeScreen() {\r\n  const [isDialogVisible, setIsDialogVisible] = React.useState(false);\r\n  \r\n  const showDialog = () => setIsDialogVisible(true);\r\n  const hideDialog = () => setIsDialogVisible(false);\r\n  \r\n  return (\r\n    <View testID=\"home-screen-container\">\r\n      <TextInput \r\n        testID=\"post-content-input\" \r\n        onChangeText={() => {}}\r\n      />\r\n      <TouchableOpacity testID=\"emotion-chip-행복\" onPress={() => {}} />\r\n      <TouchableOpacity testID=\"share-post-button\" onPress={showDialog} />\r\n      \r\n      {isDialogVisible && (\r\n        <View testID=\"success-dialog\">\r\n          <Text>게시 완료</Text>\r\n          <Text>당신의 하루가 성공적으로 공유되었습니다.</Text>\r\n          <TouchableOpacity testID=\"dialog-confirm-button\" onPress={hideDialog}>\r\n            <Text>확인</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\n// 원본 HomeScreen 모듈 모킹\r\njest.mock('../../src/screens/HomeScreen', () => ({\r\n  __esModule: true,\r\n  default: jest.fn()\r\n}));\r\n\r\n// React Native Paper 모킹\r\njest.mock('react-native-paper', () => ({\r\n  useTheme: jest.fn().mockReturnValue({\r\n    colors: {\r\n      primary: '#000',\r\n      surface: '#fff',\r\n      background: '#fff'\r\n    }\r\n  })\r\n}));\r\n\r\n// AuthContext 모킹\r\njest.mock('../../src/contexts/AuthContext', () => ({\r\n  useAuth: jest.fn().mockReturnValue({\r\n    user: { username: 'testuser' },\r\n    isAuthenticated: true\r\n  })\r\n}));\r\n\r\n// EmotionContext 모킹\r\njest.mock('../../src/contexts/EmotionContext', () => ({\r\n  useEmotion: jest.fn().mockReturnValue({\r\n    emotions: [{ emotion_id: 1, name: '행복' }],\r\n    logEmotion: jest.fn()\r\n  })\r\n}));\r\n\r\ndescribe('HomeScreen Dialog Interaction', () => {\r\n  // 테스트 전에 HomeScreen 모킹을 설정\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // 실제 HomeScreen 대신 MockHomeScreen 사용\r\n    const HomeScreenModule = require('../../src/screens/HomeScreen');\r\n    HomeScreenModule.default.mockImplementation(MockHomeScreen);\r\n  });\r\n  \r\n  it('shows and dismisses success dialog', async () => {\r\n    const HomeScreen = require('../../src/screens/HomeScreen').default;\r\n    const { getByTestId, getByText, queryByTestId } = render(<HomeScreen />);\r\n    \r\n    const contentInput = getByTestId('post-content-input');\r\n    const emotionChip = getByTestId('emotion-chip-행복');\r\n    const shareButton = getByTestId('share-post-button');\r\n\r\n    fireEvent.changeText(contentInput, '오늘의 기분');\r\n    fireEvent.press(emotionChip);\r\n    fireEvent.press(shareButton);\r\n\r\n    // 다이얼로그 표시 확인\r\n    const dialog = getByTestId('success-dialog');\r\n    expect(dialog).toBeTruthy();\r\n\r\n    // 확인 버튼 클릭\r\n    const confirmButton = getByTestId('dialog-confirm-button');\r\n    fireEvent.press(confirmButton);\r\n\r\n    // 다이얼로그 사라짐 확인\r\n    expect(queryByTestId('success-dialog')).toBeNull();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}