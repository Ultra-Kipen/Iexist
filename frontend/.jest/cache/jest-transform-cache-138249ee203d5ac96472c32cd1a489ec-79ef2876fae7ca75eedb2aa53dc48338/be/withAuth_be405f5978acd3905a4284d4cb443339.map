{"version":3,"names":["_react","_interopRequireWildcard","require","_native","_store","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","withAuth","exports","WrappedComponent","WithAuth","props","_useStore","useStore","state","navigation","useNavigation","useEffect","isAuthenticated","navigate","jsx","assign","wrappedComponentName","displayName","name"],"sources":["withAuth.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useStore } from '../store';\r\n\r\n/**\r\n * 인증이 필요한 컴포넌트를 래핑하는 HOC\r\n * 인증되지 않은 사용자는 로그인 화면으로 리디렉션\r\n * @param WrappedComponent 래핑할 컴포넌트\r\n * @returns 인증 로직이 추가된 새 컴포넌트\r\n */\r\nexport const withAuth = <P extends object>(\r\n  WrappedComponent: React.ComponentType<P>\r\n) => {\r\n  const WithAuth: React.FC<P> = (props) => {\r\n    const { state } = useStore();\r\n    const navigation = useNavigation();\r\n\r\n    useEffect(() => {\r\n      if (!state.isAuthenticated) {\r\n        // 인증되지 않은 경우 로그인 화면으로 이동\r\n        navigation.navigate('Login' as never);\r\n      }\r\n    }, [state.isAuthenticated, navigation]);\r\n\r\n    // 인증되지 않았다면 null 반환 (렌더링 방지)\r\n    if (!state.isAuthenticated) {\r\n      return null;\r\n    }\r\n\r\n    // 인증된 경우 원래 컴포넌트 렌더링\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n\r\n  // 컴포넌트 디스플레이 이름 설정 (디버깅용)\r\n  const wrappedComponentName = \r\n    WrappedComponent.displayName || \r\n    WrappedComponent.name || \r\n    'Component';\r\n    \r\n  WithAuth.displayName = `withAuth(${wrappedComponentName})`;\r\n\r\n  return WithAuth;\r\n};"],"mappings":";;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAAoC,IAAAG,WAAA,GAAAH,OAAA;AAAA,SAAAI,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAN,wBAAAM,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAQ7B,IAAMW,QAAQ,GAAAC,OAAA,CAAAD,QAAA,GAAG,SAAXA,QAAQA,CACnBE,gBAAwC,EACrC;EACH,IAAMC,QAAqB,GAAG,SAAxBA,QAAqBA,CAAIC,KAAK,EAAK;IACvC,IAAAC,SAAA,GAAkB,IAAAC,eAAQ,EAAC,CAAC;MAApBC,KAAK,GAAAF,SAAA,CAALE,KAAK;IACb,IAAMC,UAAU,GAAG,IAAAC,qBAAa,EAAC,CAAC;IAElC,IAAAC,gBAAS,EAAC,YAAM;MACd,IAAI,CAACH,KAAK,CAACI,eAAe,EAAE;QAE1BH,UAAU,CAACI,QAAQ,CAAC,OAAgB,CAAC;MACvC;IACF,CAAC,EAAE,CAACL,KAAK,CAACI,eAAe,EAAEH,UAAU,CAAC,CAAC;IAGvC,IAAI,CAACD,KAAK,CAACI,eAAe,EAAE;MAC1B,OAAO,IAAI;IACb;IAGA,OAAO,IAAAhC,WAAA,CAAAkC,GAAA,EAACX,gBAAgB,EAAAV,MAAA,CAAAsB,MAAA,KAAKV,KAAK,CAAG,CAAC;EACxC,CAAC;EAGD,IAAMW,oBAAoB,GACxBb,gBAAgB,CAACc,WAAW,IAC5Bd,gBAAgB,CAACe,IAAI,IACrB,WAAW;EAEbd,QAAQ,CAACa,WAAW,GAAG,YAAYD,oBAAoB,GAAG;EAE1D,OAAOZ,QAAQ;AACjB,CAAC","ignoreList":[]}