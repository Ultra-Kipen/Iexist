d2aeb0e6fdff4aa62f7f534d88fa3431
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LogBoxNotificationDismissButton;
var _View = _interopRequireDefault(require("../../Components/View/View"));
var _Image = _interopRequireDefault(require("../../Image/Image"));
var _StyleSheet = _interopRequireDefault(require("../../StyleSheet/StyleSheet"));
var _LogBoxButton = _interopRequireDefault(require("./LogBoxButton"));
var LogBoxStyle = _interopRequireWildcard(require("./LogBoxStyle"));
var React = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function LogBoxNotificationDismissButton(props) {
  return (0, _jsxRuntime.jsx)(_View.default, {
    style: styles.container,
    children: (0, _jsxRuntime.jsx)(_LogBoxButton.default, {
      backgroundColor: {
        default: LogBoxStyle.getTextColor(0.3),
        pressed: LogBoxStyle.getTextColor(0.5)
      },
      hitSlop: {
        top: 12,
        right: 10,
        bottom: 12,
        left: 10
      },
      onPress: props.onPress,
      style: styles.press,
      children: (0, _jsxRuntime.jsx)(_Image.default, {
        source: require('./LogBoxImages/close.png'),
        style: styles.image
      })
    })
  });
}
var styles = _StyleSheet.default.create({
  container: {
    alignSelf: 'center',
    flexDirection: 'row',
    flexGrow: 0,
    flexShrink: 0,
    flexBasis: 'auto',
    marginLeft: 5
  },
  press: {
    height: 20,
    width: 20,
    borderRadius: 25,
    alignSelf: 'flex-end',
    alignItems: 'center',
    justifyContent: 'center'
  },
  image: {
    height: 8,
    width: 8,
    tintColor: LogBoxStyle.getBackgroundColor(1)
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVmlldyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX0ltYWdlIiwiX1N0eWxlU2hlZXQiLCJfTG9nQm94QnV0dG9uIiwiTG9nQm94U3R5bGUiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIlJlYWN0IiwiX2pzeFJ1bnRpbWUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJMb2dCb3hOb3RpZmljYXRpb25EaXNtaXNzQnV0dG9uIiwicHJvcHMiLCJqc3giLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsImNoaWxkcmVuIiwiYmFja2dyb3VuZENvbG9yIiwiZ2V0VGV4dENvbG9yIiwicHJlc3NlZCIsImhpdFNsb3AiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJvblByZXNzIiwicHJlc3MiLCJzb3VyY2UiLCJpbWFnZSIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJhbGlnblNlbGYiLCJmbGV4RGlyZWN0aW9uIiwiZmxleEdyb3ciLCJmbGV4U2hyaW5rIiwiZmxleEJhc2lzIiwibWFyZ2luTGVmdCIsImhlaWdodCIsIndpZHRoIiwiYm9yZGVyUmFkaXVzIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwidGludENvbG9yIiwiZ2V0QmFja2dyb3VuZENvbG9yIl0sInNvdXJjZXMiOlsiTG9nQm94Tm90aWZpY2F0aW9uRGlzbWlzc0J1dHRvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IFZpZXcgZnJvbSAnLi4vLi4vQ29tcG9uZW50cy9WaWV3L1ZpZXcnO1xuaW1wb3J0IEltYWdlIGZyb20gJy4uLy4uL0ltYWdlL0ltYWdlJztcbmltcG9ydCBTdHlsZVNoZWV0IGZyb20gJy4uLy4uL1N0eWxlU2hlZXQvU3R5bGVTaGVldCc7XG5pbXBvcnQgTG9nQm94QnV0dG9uIGZyb20gJy4vTG9nQm94QnV0dG9uJztcbmltcG9ydCAqIGFzIExvZ0JveFN0eWxlIGZyb20gJy4vTG9nQm94U3R5bGUnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMb2dCb3hOb3RpZmljYXRpb25EaXNtaXNzQnV0dG9uKHByb3BzOiB7XG4gIG9uUHJlc3M6ICgpID0+IHZvaWQsXG59KTogUmVhY3QuTm9kZSB7XG4gIHJldHVybiAoXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgPExvZ0JveEJ1dHRvblxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I9e3tcbiAgICAgICAgICBkZWZhdWx0OiBMb2dCb3hTdHlsZS5nZXRUZXh0Q29sb3IoMC4zKSxcbiAgICAgICAgICBwcmVzc2VkOiBMb2dCb3hTdHlsZS5nZXRUZXh0Q29sb3IoMC41KSxcbiAgICAgICAgfX1cbiAgICAgICAgaGl0U2xvcD17e1xuICAgICAgICAgIHRvcDogMTIsXG4gICAgICAgICAgcmlnaHQ6IDEwLFxuICAgICAgICAgIGJvdHRvbTogMTIsXG4gICAgICAgICAgbGVmdDogMTAsXG4gICAgICAgIH19XG4gICAgICAgIG9uUHJlc3M9e3Byb3BzLm9uUHJlc3N9XG4gICAgICAgIHN0eWxlPXtzdHlsZXMucHJlc3N9PlxuICAgICAgICA8SW1hZ2VcbiAgICAgICAgICBzb3VyY2U9e3JlcXVpcmUoJy4vTG9nQm94SW1hZ2VzL2Nsb3NlLnBuZycpfVxuICAgICAgICAgIHN0eWxlPXtzdHlsZXMuaW1hZ2V9XG4gICAgICAgIC8+XG4gICAgICA8L0xvZ0JveEJ1dHRvbj5cbiAgICA8L1ZpZXc+XG4gICk7XG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgYWxpZ25TZWxmOiAnY2VudGVyJyxcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBmbGV4R3JvdzogMCxcbiAgICBmbGV4U2hyaW5rOiAwLFxuICAgIGZsZXhCYXNpczogJ2F1dG8nLFxuICAgIG1hcmdpbkxlZnQ6IDUsXG4gIH0sXG4gIHByZXNzOiB7XG4gICAgaGVpZ2h0OiAyMCxcbiAgICB3aWR0aDogMjAsXG4gICAgYm9yZGVyUmFkaXVzOiAyNSxcbiAgICBhbGlnblNlbGY6ICdmbGV4LWVuZCcsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICB9LFxuICBpbWFnZToge1xuICAgIGhlaWdodDogOCxcbiAgICB3aWR0aDogOCxcbiAgICB0aW50Q29sb3I6IExvZ0JveFN0eWxlLmdldEJhY2tncm91bmRDb2xvcigxKSxcbiAgfSxcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQVVBLElBQUFBLEtBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLFdBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFHLGFBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFJLFdBQUEsR0FBQUMsdUJBQUEsQ0FBQUwsT0FBQTtBQUNBLElBQUFNLEtBQUEsR0FBQUQsdUJBQUEsQ0FBQUwsT0FBQTtBQUErQixJQUFBTyxXQUFBLEdBQUFQLE9BQUE7QUFBQSxTQUFBUSx5QkFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxtQkFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQSxXQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxLQUFBRixDQUFBO0FBQUEsU0FBQUosd0JBQUFJLENBQUEsRUFBQUUsQ0FBQSxTQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUEsZUFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxXQUFBSyxPQUFBLEVBQUFMLENBQUEsUUFBQUcsQ0FBQSxHQUFBSix3QkFBQSxDQUFBRyxDQUFBLE9BQUFDLENBQUEsSUFBQUEsQ0FBQSxDQUFBRyxHQUFBLENBQUFOLENBQUEsVUFBQUcsQ0FBQSxDQUFBSSxHQUFBLENBQUFQLENBQUEsT0FBQVEsQ0FBQSxLQUFBQyxTQUFBLFVBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUEsV0FBQUMsQ0FBQSxJQUFBZCxDQUFBLG9CQUFBYyxDQUFBLE9BQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBaEIsQ0FBQSxFQUFBYyxDQUFBLFNBQUFHLENBQUEsR0FBQVAsQ0FBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFiLENBQUEsRUFBQWMsQ0FBQSxVQUFBRyxDQUFBLEtBQUFBLENBQUEsQ0FBQVYsR0FBQSxJQUFBVSxDQUFBLENBQUFDLEdBQUEsSUFBQVAsTUFBQSxDQUFBQyxjQUFBLENBQUFKLENBQUEsRUFBQU0sQ0FBQSxFQUFBRyxDQUFBLElBQUFULENBQUEsQ0FBQU0sQ0FBQSxJQUFBZCxDQUFBLENBQUFjLENBQUEsWUFBQU4sQ0FBQSxDQUFBSCxPQUFBLEdBQUFMLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBRWhCLFNBQVNXLCtCQUErQkEsQ0FBQ0MsS0FFdkQsRUFBYztFQUNiLE9BQ0UsSUFBQXRCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQ2hDLEtBQUEsQ0FBQWdCLE9BQUk7SUFBQ2lCLEtBQUssRUFBRUMsTUFBTSxDQUFDQyxTQUFVO0lBQUFDLFFBQUEsRUFDNUIsSUFBQTNCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQzNCLGFBQUEsQ0FBQVcsT0FBWTtNQUNYcUIsZUFBZSxFQUFFO1FBQ2ZyQixPQUFPLEVBQUVWLFdBQVcsQ0FBQ2dDLFlBQVksQ0FBQyxHQUFHLENBQUM7UUFDdENDLE9BQU8sRUFBRWpDLFdBQVcsQ0FBQ2dDLFlBQVksQ0FBQyxHQUFHO01BQ3ZDLENBQUU7TUFDRkUsT0FBTyxFQUFFO1FBQ1BDLEdBQUcsRUFBRSxFQUFFO1FBQ1BDLEtBQUssRUFBRSxFQUFFO1FBQ1RDLE1BQU0sRUFBRSxFQUFFO1FBQ1ZDLElBQUksRUFBRTtNQUNSLENBQUU7TUFDRkMsT0FBTyxFQUFFZCxLQUFLLENBQUNjLE9BQVE7TUFDdkJaLEtBQUssRUFBRUMsTUFBTSxDQUFDWSxLQUFNO01BQUFWLFFBQUEsRUFDcEIsSUFBQTNCLFdBQUEsQ0FBQXVCLEdBQUEsRUFBQzdCLE1BQUEsQ0FBQWEsT0FBSztRQUNKK0IsTUFBTSxFQUFFN0MsT0FBTyxDQUFDLDBCQUEwQixDQUFFO1FBQzVDK0IsS0FBSyxFQUFFQyxNQUFNLENBQUNjO01BQU0sQ0FDckI7SUFBQyxDQUNVO0VBQUMsQ0FDWCxDQUFDO0FBRVg7QUFFQSxJQUFNZCxNQUFNLEdBQUdlLG1CQUFVLENBQUNDLE1BQU0sQ0FBQztFQUMvQmYsU0FBUyxFQUFFO0lBQ1RnQixTQUFTLEVBQUUsUUFBUTtJQUNuQkMsYUFBYSxFQUFFLEtBQUs7SUFDcEJDLFFBQVEsRUFBRSxDQUFDO0lBQ1hDLFVBQVUsRUFBRSxDQUFDO0lBQ2JDLFNBQVMsRUFBRSxNQUFNO0lBQ2pCQyxVQUFVLEVBQUU7RUFDZCxDQUFDO0VBQ0RWLEtBQUssRUFBRTtJQUNMVyxNQUFNLEVBQUUsRUFBRTtJQUNWQyxLQUFLLEVBQUUsRUFBRTtJQUNUQyxZQUFZLEVBQUUsRUFBRTtJQUNoQlIsU0FBUyxFQUFFLFVBQVU7SUFDckJTLFVBQVUsRUFBRSxRQUFRO0lBQ3BCQyxjQUFjLEVBQUU7RUFDbEIsQ0FBQztFQUNEYixLQUFLLEVBQUU7SUFDTFMsTUFBTSxFQUFFLENBQUM7SUFDVEMsS0FBSyxFQUFFLENBQUM7SUFDUkksU0FBUyxFQUFFeEQsV0FBVyxDQUFDeUQsa0JBQWtCLENBQUMsQ0FBQztFQUM3QztBQUNGLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==