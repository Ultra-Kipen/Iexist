c13bc5d9dcede379eebab5b42ecd0143
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["children", "enterTouchDelay", "leaveTouchDelay", "title", "theme", "titleMaxFontSizeMultiplier"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _utils = require("./utils");
var _theming = require("../../core/theming");
var _addEventListener = require("../../utils/addEventListener");
var _Portal = _interopRequireDefault(require("../Portal/Portal"));
var _Text = _interopRequireDefault(require("../Typography/Text"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var Tooltip = function Tooltip(_ref) {
  var children = _ref.children,
    _ref$enterTouchDelay = _ref.enterTouchDelay,
    enterTouchDelay = _ref$enterTouchDelay === void 0 ? 500 : _ref$enterTouchDelay,
    _ref$leaveTouchDelay = _ref.leaveTouchDelay,
    leaveTouchDelay = _ref$leaveTouchDelay === void 0 ? 1500 : _ref$leaveTouchDelay,
    title = _ref.title,
    themeOverrides = _ref.theme,
    titleMaxFontSizeMultiplier = _ref.titleMaxFontSizeMultiplier,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var isWeb = _reactNative.Platform.OS === 'web';
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var _React$useState = React.useState(false),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    visible = _React$useState2[0],
    setVisible = _React$useState2[1];
  var _React$useState3 = React.useState({
      children: {},
      tooltip: {},
      measured: false
    }),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    measurement = _React$useState4[0],
    setMeasurement = _React$useState4[1];
  var showTooltipTimer = React.useRef([]);
  var hideTooltipTimer = React.useRef([]);
  var childrenWrapperRef = React.useRef();
  var touched = React.useRef(false);
  React.useEffect(function () {
    return function () {
      if (showTooltipTimer.current.length) {
        showTooltipTimer.current.forEach(function (t) {
          return clearTimeout(t);
        });
        showTooltipTimer.current = [];
      }
      if (hideTooltipTimer.current.length) {
        hideTooltipTimer.current.forEach(function (t) {
          return clearTimeout(t);
        });
        hideTooltipTimer.current = [];
      }
    };
  }, []);
  React.useEffect(function () {
    var subscription = (0, _addEventListener.addEventListener)(_reactNative.Dimensions, 'change', function () {
      return setVisible(false);
    });
    return function () {
      return subscription.remove();
    };
  }, []);
  var handleOnLayout = function handleOnLayout(_ref2) {
    var layout = _ref2.nativeEvent.layout;
    childrenWrapperRef.current.measure(function (_x, _y, width, height, pageX, pageY) {
      setMeasurement({
        children: {
          pageX: pageX,
          pageY: pageY,
          height: height,
          width: width
        },
        tooltip: Object.assign({}, layout),
        measured: true
      });
    });
  };
  var handleTouchStart = function handleTouchStart() {
    if (hideTooltipTimer.current.length) {
      hideTooltipTimer.current.forEach(function (t) {
        return clearTimeout(t);
      });
      hideTooltipTimer.current = [];
    }
    if (isWeb) {
      var id = setTimeout(function () {
        touched.current = true;
        setVisible(true);
      }, enterTouchDelay);
      showTooltipTimer.current.push(id);
    } else {
      touched.current = true;
      setVisible(true);
    }
  };
  var handleTouchEnd = function handleTouchEnd() {
    touched.current = false;
    if (showTooltipTimer.current.length) {
      showTooltipTimer.current.forEach(function (t) {
        return clearTimeout(t);
      });
      showTooltipTimer.current = [];
    }
    var id = setTimeout(function () {
      setVisible(false);
      setMeasurement({
        children: {},
        tooltip: {},
        measured: false
      });
    }, leaveTouchDelay);
    hideTooltipTimer.current.push(id);
  };
  var mobilePressProps = {
    onPress: React.useCallback(function () {
      if (touched.current) {
        return null;
      } else {
        var _children$props$onPre, _children$props;
        if (children.props.disabled) return null;
        return (_children$props$onPre = (_children$props = children.props).onPress) === null || _children$props$onPre === void 0 ? void 0 : _children$props$onPre.call(_children$props);
      }
    }, [children.props]),
    onLongPress: function onLongPress() {
      return handleTouchStart();
    },
    onPressOut: function onPressOut() {
      return handleTouchEnd();
    },
    delayLongPress: enterTouchDelay
  };
  var webPressProps = {
    onHoverIn: function onHoverIn() {
      var _children$props$onHov, _children$props2;
      handleTouchStart();
      (_children$props$onHov = (_children$props2 = children.props).onHoverIn) === null || _children$props$onHov === void 0 ? void 0 : _children$props$onHov.call(_children$props2);
    },
    onHoverOut: function onHoverOut() {
      var _children$props$onHov2, _children$props3;
      handleTouchEnd();
      (_children$props$onHov2 = (_children$props3 = children.props).onHoverOut) === null || _children$props$onHov2 === void 0 ? void 0 : _children$props$onHov2.call(_children$props3);
    }
  };
  return React.createElement(React.Fragment, null, visible && React.createElement(_Portal.default, null, React.createElement(_reactNative.View, {
    onLayout: handleOnLayout,
    style: [styles.tooltip, Object.assign({
      backgroundColor: theme.isV3 ? theme.colors.onSurface : theme.colors.tooltip
    }, (0, _utils.getTooltipPosition)(measurement, children), {
      borderRadius: theme.roundness
    }, measurement.measured ? styles.visible : styles.hidden)],
    testID: "tooltip-container"
  }, React.createElement(_Text.default, {
    accessibilityLiveRegion: "polite",
    numberOfLines: 1,
    selectable: false,
    variant: "labelLarge",
    style: {
      color: theme.colors.surface
    },
    maxFontSizeMultiplier: titleMaxFontSizeMultiplier
  }, title))), React.createElement(_reactNative.Pressable, _extends({
    ref: childrenWrapperRef,
    style: styles.pressContainer
  }, isWeb ? webPressProps : mobilePressProps), React.cloneElement(children, Object.assign({}, rest, isWeb ? webPressProps : mobilePressProps))));
};
Tooltip.displayName = 'Tooltip';
var styles = _reactNative.StyleSheet.create({
  tooltip: {
    alignSelf: 'flex-start',
    justifyContent: 'center',
    paddingHorizontal: 16,
    height: 32,
    maxHeight: 32
  },
  visible: {
    opacity: 1
  },
  hidden: {
    opacity: 0
  },
  pressContainer: Object.assign({}, _reactNative.Platform.OS === 'web' && {
    cursor: 'default'
  })
});
var _default = Tooltip;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,