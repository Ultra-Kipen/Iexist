{"version":3,"names":["_getJestObj","mock","useNavigation","navigate","jest","fn","goBack","getNotifications","markAsRead","markAllAsRead","alert","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_NotificationScreen","_notificationService","_reactNative2","_jsxRuntime","_require","mockNotifications","id","content","notification_type","related_id","is_read","created_at","Date","toISOString","now","describe","beforeEach","clearAllMocks","notificationService","mockResolvedValue","data","pagination","page","limit","total","it","render","jsx","default","expect","screen","getByText","toBeTruthy","waitFor","notification","fireEvent","press","toHaveBeenCalledWith","markAllButton","toHaveBeenCalled","Alert","mockRejectedValue","Error","markAllReadButton"],"sources":["NotificationScreen.test.tsx"],"sourcesContent":["// __TESTS__/screens/NotificationScreen.test.tsx\r\nimport React from 'react';\r\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react-native';\r\nimport NotificationScreen from '../../src/screens/NotificationScreen';\r\nimport notificationService from '../../src/services/api/notificationService';\r\nimport { Alert } from 'react-native';\r\nimport { NavigationProp } from '@react-navigation/native';\r\n\r\n// 모킹\r\njest.mock('@react-navigation/native', () => ({\r\n  useNavigation: () => ({\r\n    navigate: jest.fn(),\r\n    goBack: jest.fn(),\r\n  }),\r\n}));\r\n\r\njest.mock('../../src/services/api/notificationService', () => ({\r\n  getNotifications: jest.fn(),\r\n  markAsRead: jest.fn(),\r\n  markAllAsRead: jest.fn(),\r\n}));\r\n\r\njest.mock('react-native/Libraries/Alert/Alert', () => ({\r\n  alert: jest.fn(),\r\n}));\r\n\r\n// 테스트 데이터\r\nconst mockNotifications = [\r\n  {\r\n    id: 1,\r\n    content: '홍길동님이 회원님의 게시물에 좋아요를 눌렀습니다.',\r\n    notification_type: 'like',\r\n    related_id: 101,\r\n    is_read: false,\r\n    created_at: new Date().toISOString(),\r\n  },\r\n  {\r\n    id: 2,\r\n    content: '김철수님이 회원님의 게시물에 댓글을 남겼습니다.',\r\n    notification_type: 'comment',\r\n    related_id: 102,\r\n    is_read: true,\r\n    created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), // 1일 전\r\n  },\r\n  {\r\n    id: 3,\r\n    content: '행복 챌린지가 시작되었습니다.',\r\n    notification_type: 'challenge',\r\n    related_id: 5,\r\n    is_read: false,\r\n    created_at: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(), // 3일 전\r\n  },\r\n];\r\n\r\ndescribe('NotificationScreen', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // notificationService의 타입을 명시적으로 지정하고 모킹\r\n    (notificationService.getNotifications as jest.MockedFunction<typeof notificationService.getNotifications>).mockResolvedValue({\r\n      data: { \r\n        data: mockNotifications,\r\n        pagination: { page: 1, limit: 20, total: 3 }\r\n      },\r\n    });\r\n  });\r\n\r\n  it('renders loading state initially', () => {\r\n    render(<NotificationScreen />);\r\n    expect(screen.getByText('알림 로딩 중...')).toBeTruthy();\r\n  });\r\n\r\n  it('renders notifications list correctly', async () => {\r\n    render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      expect(screen.getByText('알림')).toBeTruthy();\r\n      expect(screen.getByText('홍길동님이 회원님의 게시물에 좋아요를 눌렀습니다.')).toBeTruthy();\r\n      expect(screen.getByText('김철수님이 회원님의 게시물에 댓글을 남겼습니다.')).toBeTruthy();\r\n      expect(screen.getByText('행복 챌린지가 시작되었습니다.')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  it('shows empty state when no notifications', async () => {\r\n    (notificationService.getNotifications as jest.MockedFunction<typeof notificationService.getNotifications>).mockResolvedValue({\r\n      data: { \r\n        data: [],\r\n        pagination: { page: 1, limit: 20, total: 0 }\r\n      },\r\n    });\r\n    \r\n    render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      expect(screen.getByText('알림이 없습니다.')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  it('marks notification as read when clicked', async () => {\r\n    render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      const notification = screen.getByText('홍길동님이 회원님의 게시물에 좋아요를 눌렀습니다.');\r\n      fireEvent.press(notification);\r\n    });\r\n    \r\n    expect(notificationService.markAsRead).toHaveBeenCalledWith(1);\r\n  });\r\n\r\n  it('marks all notifications as read', async () => {\r\n    render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      const markAllButton = screen.getByText('모두 읽음');\r\n      fireEvent.press(markAllButton);\r\n    });\r\n    \r\n    expect(notificationService.markAllAsRead).toHaveBeenCalled();\r\n    expect(Alert.alert).toHaveBeenCalledWith('성공', '모든 알림이 읽음 처리되었습니다.');\r\n  });\r\n\r\n  it('handles error during loading', async () => {\r\n    (notificationService.getNotifications as jest.MockedFunction<typeof notificationService.getNotifications>).mockRejectedValue(new Error('네트워크 오류'));\r\n    \r\n    render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      expect(screen.getByText('알림을 불러오는 중 오류가 발생했습니다.')).toBeTruthy();\r\n      expect(screen.getByText('다시 시도')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  it('handles refresh functionality', async () => {\r\n    render(<NotificationScreen />);\r\n    \r\n    await waitFor(() => {\r\n      expect(screen.getByText('알림')).toBeTruthy();\r\n    });\r\n\r\n    // 모든 읽음 버튼 클릭으로 테스트 변경\r\n    const markAllReadButton = screen.getByText('모두 읽음');\r\n    fireEvent.press(markAllReadButton);\r\n    \r\n    await waitFor(() => {\r\n      expect(notificationService.markAllAsRead).toHaveBeenCalled();\r\n    });\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}