{"version":3,"names":["_getJestObj","mock","useTheme","theme","colors","background","dark","React","require","ReactNative","__esModule","default","createElement","View","testID","_interopRequireDefault","_react","_reactNative","_reactNative2","_FormLayout","_jsxRuntime","_require","jest","describe","it","_render","render","jsx","children","Text","getByText","expect","toBeTruthy","_render2","loading","getByTestId","queryByText","toBeNull","_render3","header","footer","onSubmitMock","fn","_render4","onSubmit","Button","title","onPress","fireEvent","press","toHaveBeenCalledTimes","_render5","avoidKeyboard","customStyle","backgroundColor","_render6","style","customContentContainerStyle","padding","_render7","contentContainerStyle"],"sources":["FormLayout.test.tsx"],"sourcesContent":["// tests/layouts/FormLayout.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport { Text, Button } from 'react-native';\r\nimport FormLayout from '../../src/layouts/FormLayout';\r\n\r\n// useTheme 모킹\r\njest.mock('../../src/hooks/useTheme', () => ({\r\n  useTheme: () => ({\r\n    theme: {\r\n      colors: {\r\n        background: '#ffffff',\r\n      },\r\n      dark: false,\r\n    },\r\n  }),\r\n}));\r\n\r\n// LoadingIndicator 모킹\r\njest.mock('../../src/components/LoadingIndicator', () => {\r\n  const React = require('react');\r\n  const ReactNative = require('react-native');\r\n  return {\r\n    __esModule: true,\r\n    default: () => React.createElement(ReactNative.View, { testID: 'loading-indicator' }),\r\n  };\r\n});\r\n\r\ndescribe('FormLayout', () => {\r\n  it('renders children correctly', () => {\r\n    const { getByText } = render(\r\n      <FormLayout>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('shows loading indicator when loading is true', () => {\r\n    const { getByTestId, queryByText } = render(\r\n      <FormLayout loading={true}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByTestId('loading-indicator')).toBeTruthy();\r\n    expect(queryByText('폼 내용')).toBeNull();\r\n  });\r\n  \r\n  it('renders header and footer when provided', () => {\r\n    const { getByText } = render(\r\n      <FormLayout\r\n        header={<Text>폼 헤더</Text>}\r\n        footer={<Text>폼 푸터</Text>}\r\n      >\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 헤더')).toBeTruthy();\r\n    expect(getByText('폼 푸터')).toBeTruthy();\r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('calls onSubmit when form is submitted via footer button', () => {\r\n    const onSubmitMock = jest.fn();\r\n    const { getByText } = render(\r\n      <FormLayout\r\n        onSubmit={onSubmitMock}\r\n        footer={<Button title=\"제출\" onPress={onSubmitMock} />}\r\n      >\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    fireEvent.press(getByText('제출'));\r\n    expect(onSubmitMock).toHaveBeenCalledTimes(1);\r\n  });\r\n  \r\n  it('renders without KeyboardAvoidingView when avoidKeyboard is false', () => {\r\n    const { getByText } = render(\r\n      <FormLayout avoidKeyboard={false}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('applies custom style when provided', () => {\r\n    const customStyle = { backgroundColor: 'red' };\r\n    const { getByText } = render(\r\n      <FormLayout style={customStyle}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n  \r\n  it('applies custom contentContainerStyle when provided', () => {\r\n    const customContentContainerStyle = { padding: 20 };\r\n    const { getByText } = render(\r\n      <FormLayout contentContainerStyle={customContentContainerStyle}>\r\n        <Text>폼 내용</Text>\r\n      </FormLayout>\r\n    );\r\n    \r\n    expect(getByText('폼 내용')).toBeTruthy();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}