2b06e99cc8412c652f86cd2c5b5e1c5b
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["children", "theme", "style"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.DialogTitle = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _theming = require("../../core/theming");
var _Text = _interopRequireDefault(require("../Typography/Text"));
var _Title = _interopRequireDefault(require("../Typography/v2/Title"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var DialogTitle = function DialogTitle(_ref) {
  var children = _ref.children,
    themeOverrides = _ref.theme,
    style = _ref.style,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var isV3 = theme.isV3,
    colors = theme.colors,
    fonts = theme.fonts;
  var TextComponent = isV3 ? _Text.default : _Title.default;
  var headerTextStyle = Object.assign({
    color: isV3 ? colors.onSurface : colors === null || colors === void 0 ? void 0 : colors.text
  }, isV3 ? fonts.headlineSmall : {});
  return React.createElement(TextComponent, _extends({
    variant: "headlineSmall",
    accessibilityRole: "header",
    style: [styles.text, isV3 && styles.v3Text, headerTextStyle, style]
  }, rest), children);
};
exports.DialogTitle = DialogTitle;
DialogTitle.displayName = 'Dialog.Title';
var styles = _reactNative.StyleSheet.create({
  text: {
    marginTop: 22,
    marginBottom: 18,
    marginHorizontal: 24
  },
  v3Text: {
    marginTop: 16,
    marginBottom: 16
  }
});
var _default = DialogTitle;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl90aGVtaW5nIiwiX1RleHQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX1RpdGxlIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJhcHBseSIsIkRpYWxvZ1RpdGxlIiwiX3JlZiIsImNoaWxkcmVuIiwidGhlbWVPdmVycmlkZXMiLCJ0aGVtZSIsInN0eWxlIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXhjbHVkZWQiLCJ1c2VJbnRlcm5hbFRoZW1lIiwiaXNWMyIsImNvbG9ycyIsImZvbnRzIiwiVGV4dENvbXBvbmVudCIsImhlYWRlclRleHRTdHlsZSIsImNvbG9yIiwib25TdXJmYWNlIiwidGV4dCIsImhlYWRsaW5lU21hbGwiLCJjcmVhdGVFbGVtZW50IiwidmFyaWFudCIsImFjY2Vzc2liaWxpdHlSb2xlIiwic3R5bGVzIiwidjNUZXh0IiwiZXhwb3J0cyIsImRpc3BsYXlOYW1lIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsIm1hcmdpbkhvcml6b250YWwiLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0RpYWxvZy9EaWFsb2dUaXRsZS50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUVBLElBQUFFLFFBQUEsR0FBQUYsT0FBQTtBQUVBLElBQUFHLEtBQUEsR0FBQUMsc0JBQUEsQ0FBQUosT0FBQTtBQUNBLElBQUFLLE1BQUEsR0FBQUQsc0JBQUEsQ0FBQUosT0FBQTtBQUEyQyxTQUFBSSx1QkFBQUUsR0FBQTtFQUFBLE9BQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUE7SUFBQUUsT0FBQSxFQUFBRjtFQUFBO0FBQUE7QUFBQSxTQUFBRyx5QkFBQUMsV0FBQTtFQUFBLFdBQUFDLE9BQUE7RUFBQSxJQUFBQyxpQkFBQSxPQUFBRCxPQUFBO0VBQUEsSUFBQUUsZ0JBQUEsT0FBQUYsT0FBQTtFQUFBLFFBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBO0lBQUEsT0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQTtFQUFBLEdBQUFGLFdBQUE7QUFBQTtBQUFBLFNBQUFYLHdCQUFBTyxHQUFBLEVBQUFJLFdBQUE7RUFBQSxLQUFBQSxXQUFBLElBQUFKLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBO0lBQUEsT0FBQUQsR0FBQTtFQUFBO0VBQUEsSUFBQUEsR0FBQSxvQkFBQUEsR0FBQSx3QkFBQUEsR0FBQTtJQUFBO01BQUFFLE9BQUEsRUFBQUY7SUFBQTtFQUFBO0VBQUEsSUFBQVEsS0FBQSxHQUFBTCx3QkFBQSxDQUFBQyxXQUFBO0VBQUEsSUFBQUksS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQVQsR0FBQTtJQUFBLE9BQUFRLEtBQUEsQ0FBQUUsR0FBQSxDQUFBVixHQUFBO0VBQUE7RUFBQSxJQUFBVyxNQUFBO0VBQUEsSUFBQUMscUJB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