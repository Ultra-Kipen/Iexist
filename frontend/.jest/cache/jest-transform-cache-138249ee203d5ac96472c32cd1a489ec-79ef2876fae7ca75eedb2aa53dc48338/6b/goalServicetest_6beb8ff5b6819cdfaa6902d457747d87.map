{"version":3,"names":["_getJestObj","mock","get","jest","fn","post","put","delete","_interopRequireDefault","require","_asyncToGenerator2","_client","_goalService","_require","describe","beforeEach","clearAllMocks","it","default","mockResponse","data","status","goal_id","progress","apiClient","mockResolvedValueOnce","result","goalService","getGoals","active_only","expect","toHaveBeenCalledWith","params","toEqual","pagination","total","page","limit","newGoal","target_emotion_id","start_date","end_date","Object","assign","user_id","emotion_name","emotion_color","created_at","updated_at","createGoal","goalId","message","updateGoalProgress","deleteGoal"],"sources":["goalService.test.ts"],"sourcesContent":["// __tests__/unit/services/api/goalService.test.ts - 추가 내용\r\n\r\nimport apiClient from '../../../../src/services/api/client';\r\nimport goalService, { GoalCreateData } from '../../../../src/services/api/goalService';\r\n\r\n// apiClient 모킹\r\njest.mock('../../../../src/services/api/client', () => ({\r\n  get: jest.fn(),\r\n  post: jest.fn(),\r\n  put: jest.fn(),\r\n  delete: jest.fn()\r\n}));\r\n\r\ndescribe('goalService 기본 기능 테스트', () => {\r\n  beforeEach(() => {\r\n    // 모든 모킹 함수 초기화\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('getGoals', () => {\r\n    it('활성 목표만 조회할 수 있음', async () => {\r\n      const mockResponse = { \r\n        data: { \r\n          status: 'success', \r\n          data: [{ goal_id: 1, progress: 50 }] \r\n        } \r\n      };\r\n      \r\n      (apiClient.get as jest.Mock).mockResolvedValueOnce(mockResponse);\r\n      \r\n      const result = await goalService.getGoals({ active_only: true });\r\n      \r\n      expect(apiClient.get).toHaveBeenCalledWith('/goals', { \r\n        params: { active_only: true } \r\n      });\r\n      expect(result).toEqual(mockResponse);\r\n    });\r\n\r\n    it('페이징을 사용해 목표를 조회할 수 있음', async () => {\r\n      const mockResponse = { \r\n        data: { \r\n          status: 'success', \r\n          data: [{ goal_id: 1 }, { goal_id: 2 }],\r\n          pagination: { total: 10, page: 1, limit: 2 }\r\n        } \r\n      };\r\n      \r\n      (apiClient.get as jest.Mock).mockResolvedValueOnce(mockResponse);\r\n      \r\n      const result = await goalService.getGoals({ page: 1, limit: 2 });\r\n      \r\n      expect(apiClient.get).toHaveBeenCalledWith('/goals', { \r\n        params: { page: 1, limit: 2 } \r\n      });\r\n      expect(result).toEqual(mockResponse);\r\n    });\r\n  });\r\n\r\n  describe('createGoal', () => {\r\n    it('새 목표를 생성할 수 있음', async () => {\r\n      const newGoal: GoalCreateData = {\r\n        target_emotion_id: 1,\r\n        start_date: '2025-05-01',\r\n        end_date: '2025-05-31'\r\n      };\r\n      \r\n      const mockResponse = { \r\n        data: { \r\n          status: 'success', \r\n          data: {\r\n            goal_id: 1,\r\n            user_id: 100,\r\n            ...newGoal,\r\n            emotion_name: '행복',\r\n            emotion_color: '#FFD700',\r\n            progress: 0,\r\n            created_at: '2025-04-26T10:00:00Z',\r\n            updated_at: '2025-04-26T10:00:00Z'\r\n          }\r\n        } \r\n      };\r\n      \r\n      (apiClient.post as jest.Mock).mockResolvedValueOnce(mockResponse);\r\n      \r\n      const result = await goalService.createGoal(newGoal);\r\n      \r\n      expect(apiClient.post).toHaveBeenCalledWith('/goals', newGoal);\r\n      expect(result).toEqual(mockResponse);\r\n    });\r\n  });\r\n\r\n  describe('updateGoalProgress', () => {\r\n    it('목표 진행 상황을 업데이트할 수 있음', async () => {\r\n      const goalId = 1;\r\n      const progress = 75;\r\n      \r\n      const mockResponse = { \r\n        data: { \r\n          status: 'success', \r\n          message: '목표 진행 상황이 업데이트되었습니다' \r\n        } \r\n      };\r\n      \r\n      (apiClient.put as jest.Mock).mockResolvedValueOnce(mockResponse);\r\n      \r\n      const result = await goalService.updateGoalProgress(goalId, progress);\r\n      \r\n      expect(apiClient.put).toHaveBeenCalledWith(\r\n        `/goals/${goalId}/progress`, \r\n        { progress }\r\n      );\r\n      expect(result).toEqual(mockResponse);\r\n    });\r\n  });\r\n\r\n  describe('deleteGoal', () => {\r\n    it('목표를 삭제할 수 있음', async () => {\r\n      const goalId = 1;\r\n      \r\n      const mockResponse = { \r\n        data: { \r\n          status: 'success', \r\n          message: '목표가 삭제되었습니다' \r\n        } \r\n      };\r\n      \r\n      (apiClient.delete as jest.Mock).mockResolvedValueOnce(mockResponse);\r\n      \r\n      const result = await goalService.deleteGoal(goalId);\r\n      \r\n      expect(apiClient.delete).toHaveBeenCalledWith(`/goals/${goalId}`);\r\n      expect(result).toEqual(mockResponse);\r\n    });\r\n  });\r\n});"],"mappings":"AAMAA,WAAA,GAAKC,IAAI,CAAC,qCAAqC,EAAE;EAAA,OAAO;IACtDC,GAAG,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;IACdC,IAAI,EAAEF,IAAI,CAACC,EAAE,CAAC,CAAC;IACfE,GAAG,EAAEH,IAAI,CAACC,EAAE,CAAC,CAAC;IACdG,MAAM,EAAEJ,IAAI,CAACC,EAAE,CAAC;EAClB,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAI,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AATJ,IAAAE,OAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAAuF,SAAAT,YAAA;EAAA,IAAAa,QAAA,GAAAJ,OAAA;IAAAN,IAAA,GAAAU,QAAA,CAAAV,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAUvFW,QAAQ,CAAC,uBAAuB,EAAE,YAAM;EACtCC,UAAU,CAAC,YAAM;IAEfZ,IAAI,CAACa,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFF,QAAQ,CAAC,UAAU,EAAE,YAAM;IACzBG,EAAE,CAAC,iBAAiB,MAAAP,kBAAA,CAAAQ,OAAA,EAAE,aAAY;MAChC,IAAMC,YAAY,GAAG;QACnBC,IAAI,EAAE;UACJC,MAAM,EAAE,SAAS;UACjBD,IAAI,EAAE,CAAC;YAAEE,OAAO,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAG,CAAC;QACrC;MACF,CAAC;MAEAC,eAAS,CAACtB,GAAG,CAAeuB,qBAAqB,CAACN,YAAY,CAAC;MAEhE,IAAMO,MAAM,SAASC,oBAAW,CAACC,QAAQ,CAAC;QAAEC,WAAW,EAAE;MAAK,CAAC,CAAC;MAEhEC,MAAM,CAACN,eAAS,CAACtB,GAAG,CAAC,CAAC6B,oBAAoB,CAAC,QAAQ,EAAE;QACnDC,MAAM,EAAE;UAAEH,WAAW,EAAE;QAAK;MAC9B,CAAC,CAAC;MACFC,MAAM,CAACJ,MAAM,CAAC,CAACO,OAAO,CAACd,YAAY,CAAC;IACtC,CAAC,EAAC;IAEFF,EAAE,CAAC,uBAAuB,MAAAP,kBAAA,CAAAQ,OAAA,EAAE,aAAY;MACtC,IAAMC,YAAY,GAAG;QACnBC,IAAI,EAAE;UACJC,MAAM,EAAE,SAAS;UACjBD,IAAI,EAAE,CAAC;YAAEE,OAAO,EAAE;UAAE,CAAC,EAAE;YAAEA,OAAO,EAAE;UAAE,CAAC,CAAC;UACtCY,UAAU,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,IAAI,EAAE,CAAC;YAAEC,KAAK,EAAE;UAAE;QAC7C;MACF,CAAC;MAEAb,eAAS,CAACtB,GAAG,CAAeuB,qBAAqB,CAACN,YAAY,CAAC;MAEhE,IAAMO,MAAM,SAASC,oBAAW,CAACC,QAAQ,CAAC;QAAEQ,IAAI,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAC;MAEhEP,MAAM,CAACN,eAAS,CAACtB,GAAG,CAAC,CAAC6B,oBAAoB,CAAC,QAAQ,EAAE;QACnDC,MAAM,EAAE;UAAEI,IAAI,EAAE,CAAC;UAAEC,KAAK,EAAE;QAAE;MAC9B,CAAC,CAAC;MACFP,MAAM,CAACJ,MAAM,CAAC,CAACO,OAAO,CAACd,YAAY,CAAC;IACtC,CAAC,EAAC;EACJ,CAAC,CAAC;EAEFL,QAAQ,CAAC,YAAY,EAAE,YAAM;IAC3BG,EAAE,CAAC,gBAAgB,MAAAP,kBAAA,CAAAQ,OAAA,EAAE,aAAY;MAC/B,IAAMoB,OAAuB,GAAG;QAC9BC,iBAAiB,EAAE,CAAC;QACpBC,UAAU,EAAE,YAAY;QACxBC,QAAQ,EAAE;MACZ,CAAC;MAED,IAAMtB,YAAY,GAAG;QACnBC,IAAI,EAAE;UACJC,MAAM,EAAE,SAAS;UACjBD,IAAI,EAAAsB,MAAA,CAAAC,MAAA;YACFrB,OAAO,EAAE,CAAC;YACVsB,OAAO,EAAE;UAAG,GACTN,OAAO;YACVO,YAAY,EAAE,IAAI;YAClBC,aAAa,EAAE,SAAS;YACxBvB,QAAQ,EAAE,CAAC;YACXwB,UAAU,EAAE,sBAAsB;YAClCC,UAAU,EAAE;UAAsB;QAEtC;MACF,CAAC;MAEAxB,eAAS,CAACnB,IAAI,CAAeoB,qBAAqB,CAACN,YAAY,CAAC;MAEjE,IAAMO,MAAM,SAASC,oBAAW,CAACsB,UAAU,CAACX,OAAO,CAAC;MAEpDR,MAAM,CAACN,eAAS,CAACnB,IAAI,CAAC,CAAC0B,oBAAoB,CAAC,QAAQ,EAAEO,OAAO,CAAC;MAC9DR,MAAM,CAACJ,MAAM,CAAC,CAACO,OAAO,CAACd,YAAY,CAAC;IACtC,CAAC,EAAC;EACJ,CAAC,CAAC;EAEFL,QAAQ,CAAC,oBAAoB,EAAE,YAAM;IACnCG,EAAE,CAAC,sBAAsB,MAAAP,kBAAA,CAAAQ,OAAA,EAAE,aAAY;MACrC,IAAMgC,MAAM,GAAG,CAAC;MAChB,IAAM3B,QAAQ,GAAG,EAAE;MAEnB,IAAMJ,YAAY,GAAG;QACnBC,IAAI,EAAE;UACJC,MAAM,EAAE,SAAS;UACjB8B,OAAO,EAAE;QACX;MACF,CAAC;MAEA3B,eAAS,CAAClB,GAAG,CAAemB,qBAAqB,CAACN,YAAY,CAAC;MAEhE,IAAMO,MAAM,SAASC,oBAAW,CAACyB,kBAAkB,CAACF,MAAM,EAAE3B,QAAQ,CAAC;MAErEO,MAAM,CAACN,eAAS,CAAClB,GAAG,CAAC,CAACyB,oBAAoB,CACxC,UAAUmB,MAAM,WAAW,EAC3B;QAAE3B,QAAQ,EAARA;MAAS,CACb,CAAC;MACDO,MAAM,CAACJ,MAAM,CAAC,CAACO,OAAO,CAACd,YAAY,CAAC;IACtC,CAAC,EAAC;EACJ,CAAC,CAAC;EAEFL,QAAQ,CAAC,YAAY,EAAE,YAAM;IAC3BG,EAAE,CAAC,cAAc,MAAAP,kBAAA,CAAAQ,OAAA,EAAE,aAAY;MAC7B,IAAMgC,MAAM,GAAG,CAAC;MAEhB,IAAM/B,YAAY,GAAG;QACnBC,IAAI,EAAE;UACJC,MAAM,EAAE,SAAS;UACjB8B,OAAO,EAAE;QACX;MACF,CAAC;MAEA3B,eAAS,CAACjB,MAAM,CAAekB,qBAAqB,CAACN,YAAY,CAAC;MAEnE,IAAMO,MAAM,SAASC,oBAAW,CAAC0B,UAAU,CAACH,MAAM,CAAC;MAEnDpB,MAAM,CAACN,eAAS,CAACjB,MAAM,CAAC,CAACwB,oBAAoB,CAAC,UAAUmB,MAAM,EAAE,CAAC;MACjEpB,MAAM,CAACJ,MAAM,CAAC,CAACO,OAAO,CAACd,YAAY,CAAC;IACtC,CAAC,EAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}