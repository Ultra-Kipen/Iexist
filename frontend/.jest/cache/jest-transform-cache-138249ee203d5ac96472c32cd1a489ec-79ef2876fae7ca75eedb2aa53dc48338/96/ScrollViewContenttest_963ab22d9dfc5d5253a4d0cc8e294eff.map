{"version":3,"names":["_getJestObj","mock","__esModule","default","require","useTheme","colors","Card","Content","useAuth","user","isAuthenticated","useEmotion","emotions","selectedEmotions","setSelectedEmotions","jest","fn","logEmotion","_interopRequireDefault","_react","_reactNative","_HomeScreenMock","_jsxRuntime","_require","describe","it","_render","render","jsx","getByTestId","getByText","expect","toBeTruthy"],"sources":["ScrollViewContent.test.tsx"],"sourcesContent":["// ScrollViewContent.test.tsx\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react-native';\r\nimport MockHomeScreen from '../../__mocks__/HomeScreenMock';\r\n\r\n// 실제 HomeScreen 모듈을 모킹\r\njest.mock('../../src/screens/HomeScreen', () => {\r\n  return {\r\n    __esModule: true,\r\n    default: require('../__mocks__/HomeScreenMock').default\r\n  };\r\n});\r\n\r\n// 모든 필요한 컨텍스트와 훅 모킹\r\njest.mock('react-native-paper', () => ({\r\n  useTheme: () => ({ colors: {} }),\r\n  Card: { Content: () => null }\r\n}));\r\n\r\njest.mock('../../src/contexts/AuthContext', () => ({\r\n  useAuth: () => ({ user: {}, isAuthenticated: true })\r\n}));\r\n\r\njest.mock('../../src/contexts/EmotionContext', () => ({\r\n  useEmotion: () => ({ \r\n    emotions: [], \r\n    selectedEmotions: [], \r\n    setSelectedEmotions: jest.fn(),\r\n    logEmotion: jest.fn()\r\n  })\r\n}));\r\n\r\ndescribe('HomeScreen UI Components', () => {\r\n  it('renders main sections of the HomeScreen', () => {\r\n    const { getByTestId, getByText } = render(<MockHomeScreen />);\r\n    \r\n    // 주요 섹션들이 렌더링되었는지 확인\r\n    expect(getByTestId('home-screen-mock')).toBeTruthy();\r\n    expect(getByTestId('emotion-surface')).toBeTruthy();\r\n    expect(getByTestId('post-input-card')).toBeTruthy();\r\n    \r\n    // 텍스트 내용 확인\r\n    expect(getByText('오늘의 감정')).toBeTruthy();\r\n    expect(getByText('나의 하루는...')).toBeTruthy();\r\n    expect(getByText('누군가의 하루는..')).toBeTruthy();\r\n  });\r\n});"],"mappings":"AAMAA,WAAA,GAAKC,IAAI,CAAC,8BAA8B,EAAE,YAAM;EAC9C,OAAO;IACLC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAEC,OAAO,CAAC,6BAA6B,CAAC,CAACD;EAClD,CAAC;AACH,CAAC,CAAC;AAGFH,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE;EAAA,OAAO;IACrCI,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAS;QAAEC,MAAM,EAAE,CAAC;MAAE,CAAC;IAAA,CAAC;IAChCC,IAAI,EAAE;MAAEC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQ,IAAI;MAAA;IAAC;EAC9B,CAAC;AAAA,CAAC,CAAC;AAEHR,WAAA,GAAKC,IAAI,CAAC,gCAAgC,EAAE;EAAA,OAAO;IACjDQ,OAAO,EAAE,SAATA,OAAOA,CAAA;MAAA,OAAS;QAAEC,IAAI,EAAE,CAAC,CAAC;QAAEC,eAAe,EAAE;MAAK,CAAC;IAAA;EACrD,CAAC;AAAA,CAAC,CAAC;AAEHX,WAAA,GAAKC,IAAI,CAAC,mCAAmC,EAAE;EAAA,OAAO;IACpDW,UAAU,EAAE,SAAZA,UAAUA,CAAA;MAAA,OAAS;QACjBC,QAAQ,EAAE,EAAE;QACZC,gBAAgB,EAAE,EAAE;QACpBC,mBAAmB,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;QAC9BC,UAAU,EAAEF,IAAI,CAACC,EAAE,CAAC;MACtB,CAAC;IAAA;EACH,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAE,sBAAA,GAAAf,OAAA;AA7BJ,IAAAgB,MAAA,GAAAD,sBAAA,CAAAf,OAAA;AACA,IAAAiB,YAAA,GAAAjB,OAAA;AACA,IAAAkB,eAAA,GAAAH,sBAAA,CAAAf,OAAA;AAA4D,IAAAmB,WAAA,GAAAnB,OAAA;AAAA,SAAAJ,YAAA;EAAA,IAAAwB,QAAA,GAAApB,OAAA;IAAAY,IAAA,GAAAQ,QAAA,CAAAR,IAAA;EAAAhB,WAAA,YAAAA,YAAA;IAAA,OAAAgB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AA6B5DS,QAAQ,CAAC,0BAA0B,EAAE,YAAM;EACzCC,EAAE,CAAC,yCAAyC,EAAE,YAAM;IAClD,IAAAC,OAAA,GAAmC,IAAAC,mBAAM,EAAC,IAAAL,WAAA,CAAAM,GAAA,EAACP,eAAA,CAAAnB,OAAc,IAAE,CAAC,CAAC;MAArD2B,WAAW,GAAAH,OAAA,CAAXG,WAAW;MAAEC,SAAS,GAAAJ,OAAA,CAATI,SAAS;IAG9BC,MAAM,CAACF,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IACpDD,MAAM,CAACF,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IACnDD,MAAM,CAACF,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;IAGnDD,MAAM,CAACD,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACxCD,MAAM,CAACD,SAAS,CAAC,WAAW,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IAC3CD,MAAM,CAACD,SAAS,CAAC,YAAY,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}