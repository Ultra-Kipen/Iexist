4d283a3d04d687d2d2e7d5590f0e875c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _useTheme2 = require("../hooks/useTheme");
var _LoadingIndicator = _interopRequireDefault(require("../components/LoadingIndicator"));
var _jsxRuntime = require("react/jsx-runtime");
var MainLayout = function MainLayout(_ref) {
  var children = _ref.children,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? false : _ref$loading,
    header = _ref.header,
    footer = _ref.footer,
    style = _ref.style,
    contentContainerStyle = _ref.contentContainerStyle,
    backgroundColor = _ref.backgroundColor;
  var _useTheme = (0, _useTheme2.useTheme)(),
    theme = _useTheme.theme;
  return (0, _jsxRuntime.jsxs)(_reactNative.SafeAreaView, {
    style: [styles.container, {
      backgroundColor: backgroundColor || theme.colors.background
    }, style],
    children: [(0, _jsxRuntime.jsx)(_reactNative.StatusBar, {
      backgroundColor: backgroundColor || theme.colors.background,
      barStyle: theme.dark ? 'light-content' : 'dark-content'
    }), header && (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.headerContainer,
      children: header
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: [styles.contentContainer, contentContainerStyle],
      children: loading ? (0, _jsxRuntime.jsx)(_LoadingIndicator.default, {}) : children
    }), footer && (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.footerContainer,
      children: footer
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    paddingTop: _reactNative.Platform.OS === 'android' ? _reactNative.StatusBar.currentHeight : 0
  },
  headerContainer: {
    width: '100%',
    zIndex: 10
  },
  contentContainer: {
    flex: 1,
    width: '100%'
  },
  footerContainer: {
    width: '100%',
    zIndex: 10
  }
});
var _default = exports.default = MainLayout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl91c2VUaGVtZTIiLCJfTG9hZGluZ0luZGljYXRvciIsIl9qc3hSdW50aW1lIiwiTWFpbkxheW91dCIsIl9yZWYiLCJjaGlsZHJlbiIsIl9yZWYkbG9hZGluZyIsImxvYWRpbmciLCJoZWFkZXIiLCJmb290ZXIiLCJzdHlsZSIsImNvbnRlbnRDb250YWluZXJTdHlsZSIsImJhY2tncm91bmRDb2xvciIsIl91c2VUaGVtZSIsInVzZVRoZW1lIiwidGhlbWUiLCJqc3hzIiwiU2FmZUFyZWFWaWV3Iiwic3R5bGVzIiwiY29udGFpbmVyIiwiY29sb3JzIiwiYmFja2dyb3VuZCIsImpzeCIsIlN0YXR1c0JhciIsImJhclN0eWxlIiwiZGFyayIsIlZpZXciLCJoZWFkZXJDb250YWluZXIiLCJjb250ZW50Q29udGFpbmVyIiwiZGVmYXVsdCIsImZvb3RlckNvbnRhaW5lciIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJmbGV4IiwicGFkZGluZ1RvcCIsIlBsYXRmb3JtIiwiT1MiLCJjdXJyZW50SGVpZ2h0Iiwid2lkdGgiLCJ6SW5kZXgiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJNYWluTGF5b3V0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsYXlvdXRzL01haW5MYXlvdXQudHN4XHJcbi8vIOyVseydmCDrqZTsnbgg7ZmU66m07J2EIOychO2VnCDroIjsnbTslYTsm4Mg7Lu07Y+s64SM7Yq4XHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge1xyXG4gIFZpZXcsXHJcbiAgU3R5bGVTaGVldCxcclxuICBTYWZlQXJlYVZpZXcsXHJcbiAgUGxhdGZvcm0sXHJcbiAgU3RhdHVzQmFyLFxyXG4gIFN0eWxlUHJvcCxcclxuICBWaWV3U3R5bGUsXHJcbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICcuLi9ob29rcy91c2VUaGVtZSc7XHJcbmltcG9ydCBMb2FkaW5nSW5kaWNhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvTG9hZGluZ0luZGljYXRvcic7XHJcblxyXG5pbnRlcmZhY2UgTWFpbkxheW91dFByb3BzIHtcclxuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xyXG4gIGxvYWRpbmc/OiBib29sZWFuO1xyXG4gIGhlYWRlcj86IFJlYWN0LlJlYWN0Tm9kZTtcclxuICBmb290ZXI/OiBSZWFjdC5SZWFjdE5vZGU7XHJcbiAgc3R5bGU/OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcclxuICBjb250ZW50Q29udGFpbmVyU3R5bGU/OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcclxuICBiYWNrZ3JvdW5kQ29sb3I/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmNvbnN0IE1haW5MYXlvdXQ6IFJlYWN0LkZDPE1haW5MYXlvdXRQcm9wcz4gPSAoe1xyXG4gIGNoaWxkcmVuLFxyXG4gIGxvYWRpbmcgPSBmYWxzZSxcclxuICBoZWFkZXIsXHJcbiAgZm9vdGVyLFxyXG4gIHN0eWxlLFxyXG4gIGNvbnRlbnRDb250YWluZXJTdHlsZSxcclxuICBiYWNrZ3JvdW5kQ29sb3IsXHJcbn0pID0+IHtcclxuICBjb25zdCB7IHRoZW1lIH0gPSB1c2VUaGVtZSgpO1xyXG4gIFxyXG4gIHJldHVybiAoXHJcbiAgICA8U2FmZUFyZWFWaWV3XHJcbiAgICAgIHN0eWxlPXtbXHJcbiAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcclxuICAgICAgICB7IGJhY2tncm91bmRDb2xvcjogYmFja2dyb3VuZENvbG9yIHx8IHRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kIH0sXHJcbiAgICAgICAgc3R5bGUsXHJcbiAgICAgIF19XHJcbiAgICA+XHJcbiAgICAgIDxTdGF0dXNCYXJcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I9e2JhY2tncm91bmRDb2xvciB8fCB0aGVtZS5jb2xvcnMuYmFja2dyb3VuZH1cclxuICAgICAgICBiYXJTdHlsZT17dGhlbWUuZGFyayA/ICdsaWdodC1jb250ZW50JyA6ICdkYXJrLWNvbnRlbnQnfVxyXG4gICAgICAvPlxyXG4gICAgICBcclxuICAgICAgey8qIO2XpOuNlCDsmIHsl60gKi99XHJcbiAgICAgIHtoZWFkZXIgJiYgPFZpZXcgc3R5bGU9e3N0eWxlcy5oZWFkZXJDb250YWluZXJ9PntoZWFkZXJ9PC9WaWV3Pn1cclxuICAgICAgXHJcbiAgICAgIHsvKiDrqZTsnbgg7L2Y7YWQ7LigICovfVxyXG4gICAgICA8VmlldyBzdHlsZT17W3N0eWxlcy5jb250ZW50Q29udGFpbmVyLCBjb250ZW50Q29udGFpbmVyU3R5bGVdfT5cclxuICAgICAgICB7bG9hZGluZyA/IDxMb2FkaW5nSW5kaWNhdG9yIC8+IDogY2hpbGRyZW59XHJcbiAgICAgIDwvVmlldz5cclxuICAgICAgXHJcbiAgICAgIHsvKiDtkbjthLAg7JiB7JetICovfVxyXG4gICAgICB7Zm9vdGVyICYmIDxWaWV3IHN0eWxlPXtzdHlsZXMuZm9vdGVyQ29udGFpbmVyfT57Zm9vdGVyfTwvVmlldz59XHJcbiAgICA8L1NhZmVBcmVhVmlldz5cclxuICApO1xyXG59O1xyXG5cclxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gIGNvbnRhaW5lcjoge1xyXG4gICAgZmxleDogMSxcclxuICAgIHBhZGRpbmdUb3A6IFBsYXRmb3JtLk9TID09PSAnYW5kcm9pZCcgPyBTdGF0dXNCYXIuY3VycmVudEhlaWdodCA6IDAsXHJcbiAgfSxcclxuICBoZWFkZXJDb250YWluZXI6IHtcclxuICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgICB6SW5kZXg6IDEwLFxyXG4gIH0sXHJcbiAgY29udGVudENvbnRhaW5lcjoge1xyXG4gICAgZmxleDogMSxcclxuICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgfSxcclxuICBmb290ZXJDb250YWluZXI6IHtcclxuICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgICB6SW5kZXg6IDEwLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTWFpbkxheW91dDsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBR0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBU0EsSUFBQUUsVUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsaUJBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUE4RCxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFZOUQsSUFBTUssVUFBcUMsR0FBRyxTQUF4Q0EsVUFBcUNBLENBQUFDLElBQUEsRUFRckM7RUFBQSxJQVBKQyxRQUFRLEdBQUFELElBQUEsQ0FBUkMsUUFBUTtJQUFBQyxZQUFBLEdBQUFGLElBQUEsQ0FDUkcsT0FBTztJQUFQQSxPQUFPLEdBQUFELFlBQUEsY0FBRyxLQUFLLEdBQUFBLFlBQUE7SUFDZkUsTUFBTSxHQUFBSixJQUFBLENBQU5JLE1BQU07SUFDTkMsTUFBTSxHQUFBTCxJQUFBLENBQU5LLE1BQU07SUFDTkMsS0FBSyxHQUFBTixJQUFBLENBQUxNLEtBQUs7SUFDTEMscUJBQXFCLEdBQUFQLElBQUEsQ0FBckJPLHFCQUFxQjtJQUNyQkMsZUFBZSxHQUFBUixJQUFBLENBQWZRLGVBQWU7RUFFZixJQUFBQyxTQUFBLEdBQWtCLElBQUFDLG1CQUFRLEVBQUMsQ0FBQztJQUFwQkMsS0FBSyxHQUFBRixTQUFBLENBQUxFLEtBQUs7RUFFYixPQUNFLElBQUFiLFdBQUEsQ0FBQWMsSUFBQSxFQUFDakIsWUFBQSxDQUFBa0IsWUFBWTtJQUNYUCxLQUFLLEVBQUUsQ0FDTFEsTUFBTSxDQUFDQyxTQUFTLEVBQ2hCO01BQUVQLGVBQWUsRUFBRUEsZUFBZSxJQUFJRyxLQUFLLENBQUNLLE1BQU0sQ0FBQ0M7SUFBVyxDQUFDLEVBQy9EWCxLQUFLLENBQ0w7SUFBQUwsUUFBQSxHQUVGLElBQUFILFdBQUEsQ0FBQW9CLEdBQUEsRUFBQ3ZCLFlBQUEsQ0FBQXdCLFNBQVM7TUFDUlgsZUFBZSxFQUFFQSxlQUFlLElBQUlHLEtBQUssQ0FBQ0ssTUFBTSxDQUFDQyxVQUFXO01BQzVERyxRQUFRLEVBQUVULEtBQUssQ0FBQ1UsSUFBSSxHQUFHLGVBQWUsR0FBRztJQUFlLENBQ3pELENBQUMsRUFHRGpCLE1BQU0sSUFBSSxJQUFBTixXQUFBLENBQUFvQixHQUFBLEVBQUN2QixZQUFBLENBQUEyQixJQUFJO01BQUNoQixLQUFLLEVBQUVRLE1BQU0sQ0FBQ1MsZUFBZ0I7TUFBQXRCLFFBQUEsRUFBRUc7SUFBTSxDQUFPLENBQUMsRUFHL0QsSUFBQU4sV0FBQSxDQUFBb0IsR0FBQSxFQUFDdkIsWUFBQSxDQUFBMkIsSUFBSTtNQUFDaEIsS0FBSyxFQUFFLENBQUNRLE1BQU0sQ0FBQ1UsZ0JBQWdCLEVBQUVqQixxQkFBcUIsQ0FBRTtNQUFBTixRQUFBLEVBQzNERSxPQUFPLEdBQUcsSUFBQUwsV0FBQSxDQUFBb0IsR0FBQSxFQUFDckIsaUJBQUEsQ0FBQTRCLE9BQWdCLElBQUUsQ0FBQyxHQUFHeEI7SUFBUSxDQUN0QyxDQUFDLEVBR05JLE1BQU0sSUFBSSxJQUFBUCxXQUFBLENBQUFvQixHQUFBLEVBQUN2QixZQUFBLENBQUEyQixJQUFJO01BQUNoQixLQUFLLEVBQUVRLE1BQU0sQ0FBQ1ksZUFBZ0I7TUFBQXpCLFFBQUEsRUFBRUk7SUFBTSxDQUFPLENBQUM7RUFBQSxDQUNuRCxDQUFDO0FBRW5CLENBQUM7QUFFRCxJQUFNUyxNQUFNLEdBQUdhLHVCQUFVLENBQUNDLE1BQU0sQ0FBQztFQUMvQmIsU0FBUyxFQUFFO0lBQ1RjLElBQUksRUFBRSxDQUFDO0lBQ1BDLFVBQVUsRUFBRUMscUJBQVEsQ0FBQ0MsRUFBRSxLQUFLLFNBQVMsR0FBR2Isc0JBQVMsQ0FBQ2MsYUFBYSxHQUFHO0VBQ3BFLENBQUM7RUFDRFYsZUFBZSxFQUFFO0lBQ2ZXLEtBQUssRUFBRSxNQUFNO0lBQ2JDLE1BQU0sRUFBRTtFQUNWLENBQUM7RUFDRFgsZ0JBQWdCLEVBQUU7SUFDaEJLLElBQUksRUFBRSxDQUFDO0lBQ1BLLEtBQUssRUFBRTtFQUNULENBQUM7RUFDRFIsZUFBZSxFQUFFO0lBQ2ZRLEtBQUssRUFBRSxNQUFNO0lBQ2JDLE1BQU0sRUFBRTtFQUNWO0FBQ0YsQ0FBQyxDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFaLE9BQUEsR0FFWTFCLFVBQVUiLCJpZ25vcmVMaXN0IjpbXX0=