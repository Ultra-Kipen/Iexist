57c7377ad038d6dfa7a3fe0599b04bf1
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../../../../Libraries/TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');
var constants = null;
var NativeStatusBarManager = {
  getConstants: function getConstants() {
    if (constants == null) {
      constants = NativeModule.getConstants();
    }
    return constants;
  },
  setColor: function setColor(color, animated) {
    NativeModule.setColor(color, animated);
  },
  setTranslucent: function setTranslucent(translucent) {
    NativeModule.setTranslucent(translucent);
  },
  setStyle: function setStyle(statusBarStyle) {
    NativeModule.setStyle(statusBarStyle);
  },
  setHidden: function setHidden(hidden) {
    NativeModule.setHidden(hidden);
  }
};
var _default = exports.default = NativeStatusBarManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaGFzIiwiZ2V0IiwibiIsIl9fcHJvdG9fXyIsImEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpIiwic2V0IiwiTmF0aXZlTW9kdWxlIiwiZ2V0RW5mb3JjaW5nIiwiY29uc3RhbnRzIiwiTmF0aXZlU3RhdHVzQmFyTWFuYWdlciIsImdldENvbnN0YW50cyIsInNldENvbG9yIiwiY29sb3IiLCJhbmltYXRlZCIsInNldFRyYW5zbHVjZW50IiwidHJhbnNsdWNlbnQiLCJzZXRTdHlsZSIsInN0YXR1c0JhclN0eWxlIiwic2V0SGlkZGVuIiwiaGlkZGVuIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiTmF0aXZlU3RhdHVzQmFyTWFuYWdlckFuZHJvaWQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdFxuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCB0eXBlIHtUdXJib01vZHVsZX0gZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1R1cmJvTW9kdWxlL1JDVEV4cG9ydCc7XG5cbmltcG9ydCAqIGFzIFR1cmJvTW9kdWxlUmVnaXN0cnkgZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1R1cmJvTW9kdWxlL1R1cmJvTW9kdWxlUmVnaXN0cnknO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gICtnZXRDb25zdGFudHM6ICgpID0+IHt8XG4gICAgK0hFSUdIVDogbnVtYmVyLFxuICAgICtERUZBVUxUX0JBQ0tHUk9VTkRfQ09MT1I6IG51bWJlcixcbiAgfH07XG4gICtzZXRDb2xvcjogKGNvbG9yOiBudW1iZXIsIGFuaW1hdGVkOiBib29sZWFuKSA9PiB2b2lkO1xuICArc2V0VHJhbnNsdWNlbnQ6ICh0cmFuc2x1Y2VudDogYm9vbGVhbikgPT4gdm9pZDtcblxuICAvKipcbiAgICogIC0gc3RhdHVzQmFyU3R5bGVzIGNhbiBiZTpcbiAgICogICAgLSAnZGVmYXVsdCdcbiAgICogICAgLSAnZGFyay1jb250ZW50J1xuICAgKi9cbiAgK3NldFN0eWxlOiAoc3RhdHVzQmFyU3R5bGU/OiA/c3RyaW5nKSA9PiB2b2lkO1xuICArc2V0SGlkZGVuOiAoaGlkZGVuOiBib29sZWFuKSA9PiB2b2lkO1xufVxuXG5jb25zdCBOYXRpdmVNb2R1bGUgPSBUdXJib01vZHVsZVJlZ2lzdHJ5LmdldEVuZm9yY2luZzxTcGVjPignU3RhdHVzQmFyTWFuYWdlcicpO1xubGV0IGNvbnN0YW50cyA9IG51bGw7XG5cbmNvbnN0IE5hdGl2ZVN0YXR1c0Jhck1hbmFnZXIgPSB7XG4gIGdldENvbnN0YW50cygpOiB7fFxuICAgICtIRUlHSFQ6IG51bWJlcixcbiAgICArREVGQVVMVF9CQUNLR1JPVU5EX0NPTE9SPzogbnVtYmVyLFxuICB8fSB7XG4gICAgaWYgKGNvbnN0YW50cyA9PSBudWxsKSB7XG4gICAgICBjb25zdGFudHMgPSBOYXRpdmVNb2R1bGUuZ2V0Q29uc3RhbnRzKCk7XG4gICAgfVxuICAgIHJldHVybiBjb25zdGFudHM7XG4gIH0sXG5cbiAgc2V0Q29sb3IoY29sb3I6IG51bWJlciwgYW5pbWF0ZWQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICBOYXRpdmVNb2R1bGUuc2V0Q29sb3IoY29sb3IsIGFuaW1hdGVkKTtcbiAgfSxcblxuICBzZXRUcmFuc2x1Y2VudCh0cmFuc2x1Y2VudDogYm9vbGVhbik6IHZvaWQge1xuICAgIE5hdGl2ZU1vZHVsZS5zZXRUcmFuc2x1Y2VudCh0cmFuc2x1Y2VudCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqICAtIHN0YXR1c0JhclN0eWxlcyBjYW4gYmU6XG4gICAqICAgIC0gJ2RlZmF1bHQnXG4gICAqICAgIC0gJ2RhcmstY29udGVudCdcbiAgICovXG4gIHNldFN0eWxlKHN0YXR1c0JhclN0eWxlPzogP3N0cmluZyk6IHZvaWQge1xuICAgIE5hdGl2ZU1vZHVsZS5zZXRTdHlsZShzdGF0dXNCYXJTdHlsZSk7XG4gIH0sXG5cbiAgc2V0SGlkZGVuKGhpZGRlbjogYm9vbGVhbik6IHZvaWQge1xuICAgIE5hdGl2ZU1vZHVsZS5zZXRIaWRkZW4oaGlkZGVuKTtcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5hdGl2ZVN0YXR1c0Jhck1hbmFnZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFZQSxJQUFBQSxtQkFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQTZGLFNBQUFDLHlCQUFBQyxDQUFBLDZCQUFBQyxPQUFBLG1CQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxDQUFBLFdBQUFBLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLEtBQUFGLENBQUE7QUFBQSxTQUFBSCx3QkFBQUcsQ0FBQSxFQUFBRSxDQUFBLFNBQUFBLENBQUEsSUFBQUYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJLFVBQUEsU0FBQUosQ0FBQSxlQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFdBQUFLLE9BQUEsRUFBQUwsQ0FBQSxRQUFBRyxDQUFBLEdBQUFKLHdCQUFBLENBQUFHLENBQUEsT0FBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQSxPQUFBUSxDQUFBLEtBQUFDLFNBQUEsVUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLENBQUEsU0FBQUcsQ0FBQSxHQUFBUCxDQUFBLEdBQUFDLE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQWIsQ0FBQSxFQUFBYyxDQUFBLFVBQUFHLENBQUEsS0FBQUEsQ0FBQSxDQUFBVixHQUFBLElBQUFVLENBQUEsQ0FBQUMsR0FBQSxJQUFBUCxNQUFBLENBQUFDLGNBQUEsQ0FBQUosQ0FBQSxFQUFBTSxDQUFBLEVBQUFHLENBQUEsSUFBQVQsQ0FBQSxDQUFBTSxDQUFBLElBQUFkLENBQUEsQ0FBQWMsQ0FBQSxZQUFBTixDQUFBLENBQUFILE9BQUEsR0FBQUwsQ0FBQSxFQUFBRyxDQUFBLElBQUFBLENBQUEsQ0FBQWUsR0FBQSxDQUFBbEIsQ0FBQSxFQUFBUSxDQUFBLEdBQUFBLENBQUE7QUFtQjdGLElBQU1XLFlBQVksR0FBR3ZCLG1CQUFtQixDQUFDd0IsWUFBWSxDQUFPLGtCQUFrQixDQUFDO0FBQy9FLElBQUlDLFNBQVMsR0FBRyxJQUFJO0FBRXBCLElBQU1DLHNCQUFzQixHQUFHO0VBQzdCQyxZQUFZLFdBQVpBLFlBQVlBLENBQUEsRUFHVDtJQUNELElBQUlGLFNBQVMsSUFBSSxJQUFJLEVBQUU7TUFDckJBLFNBQVMsR0FBR0YsWUFBWSxDQUFDSSxZQUFZLENBQUMsQ0FBQztJQUN6QztJQUNBLE9BQU9GLFNBQVM7RUFDbEIsQ0FBQztFQUVERyxRQUFRLFdBQVJBLFFBQVFBLENBQUNDLEtBQWEsRUFBRUMsUUFBaUIsRUFBUTtJQUMvQ1AsWUFBWSxDQUFDSyxRQUFRLENBQUNDLEtBQUssRUFBRUMsUUFBUSxDQUFDO0VBQ3hDLENBQUM7RUFFREMsY0FBYyxXQUFkQSxjQUFjQSxDQUFDQyxXQUFvQixFQUFRO0lBQ3pDVCxZQUFZLENBQUNRLGNBQWMsQ0FBQ0MsV0FBVyxDQUFDO0VBQzFDLENBQUM7RUFPREMsUUFBUSxXQUFSQSxRQUFRQSxDQUFDQyxjQUF3QixFQUFRO0lBQ3ZDWCxZQUFZLENBQUNVLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDO0VBQ3ZDLENBQUM7RUFFREMsU0FBUyxXQUFUQSxTQUFTQSxDQUFDQyxNQUFlLEVBQVE7SUFDL0JiLFlBQVksQ0FBQ1ksU0FBUyxDQUFDQyxNQUFNLENBQUM7RUFDaEM7QUFDRixDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUE3QixPQUFBLEdBRWFpQixzQkFBc0IiLCJpZ25vcmVMaXN0IjpbXX0=