8a1ca81fe4dc3c740dccbc51385fab17
_getJestObj().mock('../../src/contexts/NotificationContext', function () {
  return {
    useNotification: jest.fn()
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _NotificationBadge = _interopRequireDefault(require("../../src/components/NotificationBadge"));
var _NotificationContext = require("../../src/contexts/NotificationContext");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
describe('NotificationBadge 컴포넌트', function () {
  beforeEach(function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 0
    });
  });
  it('unreadCount가 0이고 showZero가 false이면 배지가 표시되지 않아야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 0
    });
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {
        showZero: false
      })),
      queryByText = _render.queryByText;
    expect(queryByText('0')).toBeNull();
  });
  it('unreadCount가 0이지만 showZero가 true이면 배지가 표시되어야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 0
    });
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {
        showZero: true
      })),
      getByText = _render2.getByText;
    expect(getByText('0')).toBeTruthy();
  });
  it('unreadCount가 있으면 배지에 카운트가 표시되어야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 5
    });
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {})),
      getByText = _render3.getByText;
    expect(getByText('5')).toBeTruthy();
  });
  it('maxCount보다 큰 unreadCount는 maxCount+로 표시되어야 합니다', function () {
    _NotificationContext.useNotification.mockReturnValue({
      unreadCount: 120
    });
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_NotificationBadge.default, {
        maxCount: 99
      })),
      getByText = _render4.getByText;
    expect(getByText('99+')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ1c2VOb3RpZmljYXRpb24iLCJqZXN0IiwiZm4iLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdE5hdGl2ZSIsIl9Ob3RpZmljYXRpb25CYWRnZSIsIl9Ob3RpZmljYXRpb25Db250ZXh0IiwiX2pzeFJ1bnRpbWUiLCJfcmVxdWlyZSIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsIm1vY2tSZXR1cm5WYWx1ZSIsInVucmVhZENvdW50IiwiaXQiLCJfcmVuZGVyIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsInNob3daZXJvIiwicXVlcnlCeVRleHQiLCJleHBlY3QiLCJ0b0JlTnVsbCIsIl9yZW5kZXIyIiwiZ2V0QnlUZXh0IiwidG9CZVRydXRoeSIsIl9yZW5kZXIzIiwiX3JlbmRlcjQiLCJtYXhDb3VudCJdLCJzb3VyY2VzIjpbIk5vdGlmaWNhdGlvbkJhZGdlLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIF9fVEVTVFNfXy9jb21wb25lbnRzL05vdGlmaWNhdGlvbkJhZGdlLnRlc3QudHN4XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IE5vdGlmaWNhdGlvbkJhZGdlIGZyb20gJy4uLy4uL3NyYy9jb21wb25lbnRzL05vdGlmaWNhdGlvbkJhZGdlJztcclxuaW1wb3J0IHsgdXNlTm90aWZpY2F0aW9uIH0gZnJvbSAnLi4vLi4vc3JjL2NvbnRleHRzL05vdGlmaWNhdGlvbkNvbnRleHQnO1xyXG5cclxuLy8gTm90aWZpY2F0aW9uQ29udGV4dCDrqqjsnZgoTW9jaylcclxuamVzdC5tb2NrKCcuLi8uLi9zcmMvY29udGV4dHMvTm90aWZpY2F0aW9uQ29udGV4dCcsICgpID0+ICh7XHJcbiAgdXNlTm90aWZpY2F0aW9uOiBqZXN0LmZuKClcclxufSkpO1xyXG5cclxuZGVzY3JpYmUoJ05vdGlmaWNhdGlvbkJhZGdlIOy7tO2PrOuEjO2KuCcsICgpID0+IHtcclxuICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgIC8vIOq4sOuzuCDrqqjsnZgg7ISk7KCVXHJcbiAgICAodXNlTm90aWZpY2F0aW9uIGFzIGplc3QuTW9jaykubW9ja1JldHVyblZhbHVlKHtcclxuICAgICAgdW5yZWFkQ291bnQ6IDBcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICBpdCgndW5yZWFkQ291bnTqsIAgMOydtOqzoCBzaG93WmVyb+qwgCBmYWxzZeydtOuptCDrsLDsp4DqsIAg7ZGc7Iuc65CY7KeAIOyViuyVhOyVvCDtlanri4jri6QnLCAoKSA9PiB7XHJcbiAgICAodXNlTm90aWZpY2F0aW9uIGFzIGplc3QuTW9jaykubW9ja1JldHVyblZhbHVlKHtcclxuICAgICAgdW5yZWFkQ291bnQ6IDBcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBjb25zdCB7IHF1ZXJ5QnlUZXh0IH0gPSByZW5kZXIoXHJcbiAgICAgIDxOb3RpZmljYXRpb25CYWRnZSBzaG93WmVybz17ZmFsc2V9IC8+XHJcbiAgICApO1xyXG4gICAgXHJcbiAgICBleHBlY3QocXVlcnlCeVRleHQoJzAnKSkudG9CZU51bGwoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3VucmVhZENvdW506rCAIDDsnbTsp4Drp4wgc2hvd1plcm/qsIAgdHJ1ZeydtOuptCDrsLDsp4DqsIAg7ZGc7Iuc65CY7Ja07JW8IO2VqeuLiOuLpCcsICgpID0+IHtcclxuICAgICh1c2VOb3RpZmljYXRpb24gYXMgamVzdC5Nb2NrKS5tb2NrUmV0dXJuVmFsdWUoe1xyXG4gICAgICB1bnJlYWRDb3VudDogMFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSByZW5kZXIoXHJcbiAgICAgIDxOb3RpZmljYXRpb25CYWRnZSBzaG93WmVybz17dHJ1ZX0gLz5cclxuICAgICk7XHJcbiAgICBcclxuICAgIGV4cGVjdChnZXRCeVRleHQoJzAnKSkudG9CZVRydXRoeSgpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgndW5yZWFkQ291bnTqsIAg7J6I7Jy866m0IOuwsOyngOyXkCDsubTsmrTtirjqsIAg7ZGc7Iuc65CY7Ja07JW8IO2VqeuLiOuLpCcsICgpID0+IHtcclxuICAgICh1c2VOb3RpZmljYXRpb24gYXMgamVzdC5Nb2NrKS5tb2NrUmV0dXJuVmFsdWUoe1xyXG4gICAgICB1bnJlYWRDb3VudDogNVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSByZW5kZXIoXHJcbiAgICAgIDxOb3RpZmljYXRpb25CYWRnZSAvPlxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgnNScpKS50b0JlVHJ1dGh5KCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCdtYXhDb3VudOuztOuLpCDtgbAgdW5yZWFkQ291bnTripQgbWF4Q291bnQr66GcIO2RnOyLnOuQmOyWtOyVvCDtlanri4jri6QnLCAoKSA9PiB7XHJcbiAgICAodXNlTm90aWZpY2F0aW9uIGFzIGplc3QuTW9jaykubW9ja1JldHVyblZhbHVlKHtcclxuICAgICAgdW5yZWFkQ291bnQ6IDEyMFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSByZW5kZXIoXHJcbiAgICAgIDxOb3RpZmljYXRpb25CYWRnZSBtYXhDb3VudD17OTl9IC8+XHJcbiAgICApO1xyXG4gICAgXHJcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCc5OSsnKSkudG9CZVRydXRoeSgpO1xyXG4gIH0pO1xyXG59KTsiXSwibWFwcGluZ3MiOiJBQU9BQSxXQUFBLEdBQUtDLElBQUksQ0FBQyx3Q0FBd0MsRUFBRTtFQUFBLE9BQU87SUFDekRDLGVBQWUsRUFBRUMsSUFBSSxDQUFDQyxFQUFFLENBQUM7RUFDM0IsQ0FBQztBQUFBLENBQUMsQ0FBQztBQUFDLElBQUFDLHNCQUFBLEdBQUFD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