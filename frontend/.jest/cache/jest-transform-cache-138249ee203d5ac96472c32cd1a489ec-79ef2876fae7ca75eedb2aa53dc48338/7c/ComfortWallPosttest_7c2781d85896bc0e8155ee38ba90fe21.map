{"version":3,"names":["_getJestObj","mock","_interopRequireDefault","require","_react","_reactNative","_ComfortWallPost","_jsxRuntime","_require","jest","describe","mockPost","post_id","title","content","created_at","like_count","comment_count","is_anonymous","user","nickname","profile_image_url","comments","comment_id","user_id","mockHandlers","onLikePress","fn","onCommentPress","onPostPress","beforeEach","clearAllMocks","it","_render","render","jsx","default","Object","assign","post","getByText","expect","toBeTruthy","_render2","anonymousPost","_render3","longContentPost","repeat","_render4","fireEvent","press","postWithImage","image_url","_render5","getByTestId","postImage","props","source","toEqual","uri","_render6","toHaveBeenCalledWith","_render7","_render8","_render9","_render10","isLiked","likeButton"],"sources":["ComfortWallPost.test.tsx"],"sourcesContent":["// tests/components/ComfortWallPost.test.tsx\r\nimport React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport ComfortWallPost from '../../src/components/ComfortWallPost';\r\n\r\n// Ïù¥ÎØ∏ÏßÄ Î™®ÌÇπ\r\njest.mock('../../assets/images/default_avatar.png', () => 'default_avatar');\r\njest.mock('../../assets/images/anonymous_avatar.png', () => 'anonymous_avatar');\r\n\r\ndescribe('ComfortWallPost', () => {\r\n  const mockPost = {\r\n    post_id: 1,\r\n    title: 'ÌÖåÏä§Ìä∏ Í≤åÏãúÎ¨º',\r\n    content: 'Ïù¥Í≤ÉÏùÄ ÌÖåÏä§Ìä∏ Í≤åÏãúÎ¨º ÎÇ¥Ïö©ÏûÖÎãàÎã§.',\r\n    created_at: '2025-04-20T12:34:56.000Z',\r\n    like_count: 10,\r\n    comment_count: 5,\r\n    is_anonymous: false,\r\n    user: {\r\n      nickname: 'ÌÖåÏä§ÌÑ∞',\r\n      profile_image_url: 'https://example.com/profile.jpg',\r\n    },\r\n    comments: [\r\n      {\r\n        comment_id: 1,\r\n        user_id: 2,\r\n        content: 'Ï≤´ Î≤àÏß∏ ÎåìÍ∏ÄÏûÖÎãàÎã§.',\r\n        is_anonymous: false,\r\n        created_at: '2025-04-20T13:00:00.000Z',\r\n        user: {\r\n          nickname: 'ÎåìÍ∏ÄÏûëÏÑ±Ïûê',\r\n        },\r\n      },\r\n      {\r\n        comment_id: 2,\r\n        user_id: 3,\r\n        content: 'Îëê Î≤àÏß∏ ÎåìÍ∏ÄÏûÖÎãàÎã§.',\r\n        is_anonymous: true,\r\n        created_at: '2025-04-20T13:10:00.000Z',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const mockHandlers = {\r\n    onLikePress: jest.fn(),\r\n    onCommentPress: jest.fn(),\r\n    onPostPress: jest.fn(),\r\n  };\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it('renders post details correctly', () => {\r\n    const { getByText } = render(\r\n      <ComfortWallPost post={mockPost} {...mockHandlers} />\r\n    );\r\n    \r\n    expect(getByText('ÌÖåÏä§Ìä∏ Í≤åÏãúÎ¨º')).toBeTruthy();\r\n    expect(getByText('Ïù¥Í≤ÉÏùÄ ÌÖåÏä§Ìä∏ Í≤åÏãúÎ¨º ÎÇ¥Ïö©ÏûÖÎãàÎã§.')).toBeTruthy();\r\n    expect(getByText('ÌÖåÏä§ÌÑ∞')).toBeTruthy();\r\n    expect(getByText(/‚ô• Ï¢ãÏïÑÏöî 10/)).toBeTruthy();\r\n    expect(getByText(/üí¨ ÎåìÍ∏Ä 5/)).toBeTruthy();\r\n  });\r\n\r\n  it('displays formatted date correctly', () => {\r\n    const { getByText } = render(\r\n      <ComfortWallPost post={mockPost} {...mockHandlers} />\r\n    );\r\n    \r\n    // ÎÇ†Ïßú ÌòïÏãùÏùÑ ÌôïÏù∏ (2025ÎÖÑ 04Ïõî 20Ïùº 12:34 ÌòïÏãù)\r\n    expect(getByText(/2025ÎÖÑ 04Ïõî 20Ïùº/)).toBeTruthy();\r\n  });\r\n\r\n  it('shows anonymous user when post is anonymous', () => {\r\n    const anonymousPost = {\r\n      ...mockPost,\r\n      is_anonymous: true,\r\n    };\r\n    \r\n    const { getByText } = render(\r\n      <ComfortWallPost post={anonymousPost} {...mockHandlers} />\r\n    );\r\n    \r\n    expect(getByText('ÏùµÎ™Ö')).toBeTruthy();\r\n  });\r\n\r\n  it('truncates long content and shows \"Îçî Î≥¥Í∏∞\" button', () => {\r\n    const longContentPost = {\r\n      ...mockPost,\r\n      content: 'A'.repeat(200), // ÏµúÎåÄ Í∏∏Ïù¥(150)Î≥¥Îã§ Í∏¥ ÎÇ¥Ïö©\r\n    };\r\n    \r\n    const { getByText } = render(\r\n      <ComfortWallPost post={longContentPost} {...mockHandlers} />\r\n    );\r\n    \r\n    expect(getByText('Îçî Î≥¥Í∏∞')).toBeTruthy();\r\n    \r\n    // Îçî Î≥¥Í∏∞ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ Ï†ÑÏ≤¥ ÎÇ¥Ïö©Ïù¥ ÌëúÏãúÎêòÍ≥† Î≤ÑÌäº ÌÖçÏä§Ìä∏Í∞Ä Î∞îÎÄåÏñ¥Ïïº Ìï®\r\n    fireEvent.press(getByText('Îçî Î≥¥Í∏∞'));\r\n    expect(getByText('Ï†ëÍ∏∞')).toBeTruthy();\r\n  });\r\n\r\n// ÏàòÏ†ï ÌõÑ\r\n// ÏàòÏ†ï ÌõÑ\r\nit('displays image when image_url is provided', () => {\r\n    const postWithImage = {\r\n      ...mockPost,\r\n      image_url: 'https://example.com/image.jpg',\r\n    };\r\n    \r\n    const { getByTestId } = render(\r\n      <ComfortWallPost post={postWithImage} {...mockHandlers} />\r\n    );\r\n    \r\n    // ComfortWallPost Ïª¥Ìè¨ÎÑåÌä∏Ïóê testIDÎ•º Ï∂îÍ∞ÄÌïòÍ≥† Í∑∏Í≤ÉÏùÑ ÏÇ¨Ïö©\r\n    const postImage = getByTestId('post-image');\r\n    expect(postImage.props.source).toEqual({ uri: 'https://example.com/image.jpg' });\r\n  });\r\n  it('calls onLikePress when like button is pressed', () => {\r\n    const { getByText } = render(\r\n      <ComfortWallPost post={mockPost} {...mockHandlers} />\r\n    );\r\n    \r\n    fireEvent.press(getByText(/‚ô• Ï¢ãÏïÑÏöî 10/));\r\n    expect(mockHandlers.onLikePress).toHaveBeenCalledWith(mockPost.post_id);\r\n    \r\n    // Ï¢ãÏïÑÏöî ÏÉÅÌÉúÍ∞Ä Î≥ÄÍ≤ΩÎêòÏóàÎäîÏßÄ ÌôïÏù∏\r\n    expect(getByText(/‚ô• Ï¢ãÏïÑÏöî 11/)).toBeTruthy();\r\n  });\r\n\r\n  it('calls onCommentPress when comment button is pressed', () => {\r\n    const { getByText } = render(\r\n      <ComfortWallPost post={mockPost} {...mockHandlers} />\r\n    );\r\n    \r\n    fireEvent.press(getByText(/üí¨ ÎåìÍ∏Ä 5/));\r\n    expect(mockHandlers.onCommentPress).toHaveBeenCalledWith(mockPost.post_id);\r\n  });\r\n\r\n  it('calls onPostPress when post title is pressed', () => {\r\n    const { getByText } = render(\r\n      <ComfortWallPost post={mockPost} {...mockHandlers} />\r\n    );\r\n    \r\n    fireEvent.press(getByText('ÌÖåÏä§Ìä∏ Í≤åÏãúÎ¨º'));\r\n    expect(mockHandlers.onPostPress).toHaveBeenCalledWith(mockPost.post_id);\r\n  });\r\n\r\n  it('shows comment previews', () => {\r\n    const { getByText } = render(\r\n      <ComfortWallPost post={mockPost} {...mockHandlers} />\r\n    );\r\n    \r\n    expect(getByText('ÎåìÍ∏ÄÏûëÏÑ±Ïûê:')).toBeTruthy();\r\n    expect(getByText('Ï≤´ Î≤àÏß∏ ÎåìÍ∏ÄÏûÖÎãàÎã§.')).toBeTruthy();\r\n    expect(getByText('ÏùµÎ™Ö:')).toBeTruthy();\r\n    expect(getByText('Îëê Î≤àÏß∏ ÎåìÍ∏ÄÏûÖÎãàÎã§.')).toBeTruthy();\r\n  });\r\n\r\n  it('handles pre-liked state correctly', () => {\r\n    const { getByText } = render(\r\n      <ComfortWallPost post={mockPost} {...mockHandlers} isLiked={true} />\r\n    );\r\n    \r\n    // Ïù¥ÎØ∏ Ï¢ãÏïÑÏöî ÏÉÅÌÉúÏù∏ Î≤ÑÌäº Ïä§ÌÉÄÏùº ÌôïÏù∏ (ÌÖçÏä§Ìä∏ Ïä§ÌÉÄÏùºÎßå ÌôïÏù∏ Í∞ÄÎä•)\r\n    const likeButton = getByText(/‚ô• Ï¢ãÏïÑÏöî 10/);\r\n    expect(likeButton).toBeTruthy();\r\n    \r\n    // Ï¢ãÏïÑÏöî Ï∑®ÏÜå\r\n    fireEvent.press(likeButton);\r\n    expect(mockHandlers.onLikePress).toHaveBeenCalledWith(mockPost.post_id);\r\n    \r\n    // Ï¢ãÏïÑÏöî ÏàòÍ∞Ä Í∞êÏÜåÌñàÎäîÏßÄ ÌôïÏù∏\r\n    expect(getByText(/‚ô• Ï¢ãÏïÑÏöî 9/)).toBeTruthy();\r\n  });\r\n});"],"mappings":"AAMAA,WAAA,GAAKC,IAAI,CAAC,wCAAwC,EAAE;EAAA,OAAM,gBAAgB;AAAA,EAAC;AAC3ED,WAAA,GAAKC,IAAI,CAAC,0CAA0C,EAAE;EAAA,OAAM,kBAAkB;AAAA,EAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AANhF,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,gBAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAAmE,IAAAI,WAAA,GAAAJ,OAAA;AAAA,SAAAH,YAAA;EAAA,IAAAQ,QAAA,GAAAL,OAAA;IAAAM,IAAA,GAAAD,QAAA,CAAAC,IAAA;EAAAT,WAAA,YAAAA,YAAA;IAAA,OAAAS,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAMnEC,QAAQ,CAAC,iBAAiB,EAAE,YAAM;EAChC,IAAMC,QAAQ,GAAG;IACfC,OAAO,EAAE,CAAC;IACVC,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAE,oBAAoB;IAC7BC,UAAU,EAAE,0BAA0B;IACtCC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,CAAC;IAChBC,YAAY,EAAE,KAAK;IACnBC,IAAI,EAAE;MACJC,QAAQ,EAAE,KAAK;MACfC,iBAAiB,EAAE;IACrB,CAAC;IACDC,QAAQ,EAAE,CACR;MACEC,UAAU,EAAE,CAAC;MACbC,OAAO,EAAE,CAAC;MACVV,OAAO,EAAE,aAAa;MACtBI,YAAY,EAAE,KAAK;MACnBH,UAAU,EAAE,0BAA0B;MACtCI,IAAI,EAAE;QACJC,QAAQ,EAAE;MACZ;IACF,CAAC,EACD;MACEG,UAAU,EAAE,CAAC;MACbC,OAAO,EAAE,CAAC;MACVV,OAAO,EAAE,aAAa;MACtBI,YAAY,EAAE,IAAI;MAClBH,UAAU,EAAE;IACd,CAAC;EAEL,CAAC;EAED,IAAMU,YAAY,GAAG;IACnBC,WAAW,EAAEjB,IAAI,CAACkB,EAAE,CAAC,CAAC;IACtBC,cAAc,EAAEnB,IAAI,CAACkB,EAAE,CAAC,CAAC;IACzBE,WAAW,EAAEpB,IAAI,CAACkB,EAAE,CAAC;EACvB,CAAC;EAEDG,UAAU,CAAC,YAAM;IACfrB,IAAI,CAACsB,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFC,EAAE,CAAC,gCAAgC,EAAE,YAAM;IACzC,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAC1B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAE5B;MAAS,GAAKc,YAAY,CAAG,CACtD,CAAC;MAFOe,SAAS,GAAAP,OAAA,CAATO,SAAS;IAIjBC,MAAM,CAACD,SAAS,CAAC,SAAS,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACzCD,MAAM,CAACD,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACpDD,MAAM,CAACD,SAAS,CAAC,KAAK,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACrCD,MAAM,CAACD,SAAS,CAAC,UAAU,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IAC1CD,MAAM,CAACD,SAAS,CAAC,SAAS,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC3C,CAAC,CAAC;EAEFV,EAAE,CAAC,mCAAmC,EAAE,YAAM;IAC5C,IAAAW,QAAA,GAAsB,IAAAT,mBAAM,EAC1B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAE5B;MAAS,GAAKc,YAAY,CAAG,CACtD,CAAC;MAFOe,SAAS,GAAAG,QAAA,CAATH,SAAS;IAKjBC,MAAM,CAACD,SAAS,CAAC,eAAe,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EACjD,CAAC,CAAC;EAEFV,EAAE,CAAC,6CAA6C,EAAE,YAAM;IACtD,IAAMY,aAAa,GAAAP,MAAA,CAAAC,MAAA,KACd3B,QAAQ;MACXO,YAAY,EAAE;IAAI,EACnB;IAED,IAAA2B,QAAA,GAAsB,IAAAX,mBAAM,EAC1B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAEK;MAAc,GAAKnB,YAAY,CAAG,CAC3D,CAAC;MAFOe,SAAS,GAAAK,QAAA,CAATL,SAAS;IAIjBC,MAAM,CAACD,SAAS,CAAC,IAAI,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EACtC,CAAC,CAAC;EAEFV,EAAE,CAAC,gDAAgD,EAAE,YAAM;IACzD,IAAMc,eAAe,GAAAT,MAAA,CAAAC,MAAA,KAChB3B,QAAQ;MACXG,OAAO,EAAE,GAAG,CAACiC,MAAM,CAAC,GAAG;IAAC,EACzB;IAED,IAAAC,QAAA,GAAsB,IAAAd,mBAAM,EAC1B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAEO;MAAgB,GAAKrB,YAAY,CAAG,CAC7D,CAAC;MAFOe,SAAS,GAAAQ,QAAA,CAATR,SAAS;IAIjBC,MAAM,CAACD,SAAS,CAAC,MAAM,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IAGtCO,sBAAS,CAACC,KAAK,CAACV,SAAS,CAAC,MAAM,CAAC,CAAC;IAClCC,MAAM,CAACD,SAAS,CAAC,IAAI,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EACtC,CAAC,CAAC;EAIJV,EAAE,CAAC,2CAA2C,EAAE,YAAM;IAClD,IAAMmB,aAAa,GAAAd,MAAA,CAAAC,MAAA,KACd3B,QAAQ;MACXyC,SAAS,EAAE;IAA+B,EAC3C;IAED,IAAAC,QAAA,GAAwB,IAAAnB,mBAAM,EAC5B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAEY;MAAc,GAAK1B,YAAY,CAAG,CAC3D,CAAC;MAFO6B,WAAW,GAAAD,QAAA,CAAXC,WAAW;IAKnB,IAAMC,SAAS,GAAGD,WAAW,CAAC,YAAY,CAAC;IAC3Cb,MAAM,CAACc,SAAS,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,OAAO,CAAC;MAAEC,GAAG,EAAE;IAAgC,CAAC,CAAC;EAClF,CAAC,CAAC;EACF3B,EAAE,CAAC,+CAA+C,EAAE,YAAM;IACxD,IAAA4B,QAAA,GAAsB,IAAA1B,mBAAM,EAC1B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAE5B;MAAS,GAAKc,YAAY,CAAG,CACtD,CAAC;MAFOe,SAAS,GAAAoB,QAAA,CAATpB,SAAS;IAIjBS,sBAAS,CAACC,KAAK,CAACV,SAAS,CAAC,UAAU,CAAC,CAAC;IACtCC,MAAM,CAAChB,YAAY,CAACC,WAAW,CAAC,CAACmC,oBAAoB,CAAClD,QAAQ,CAACC,OAAO,CAAC;IAGvE6B,MAAM,CAACD,SAAS,CAAC,UAAU,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC5C,CAAC,CAAC;EAEFV,EAAE,CAAC,qDAAqD,EAAE,YAAM;IAC9D,IAAA8B,QAAA,GAAsB,IAAA5B,mBAAM,EAC1B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAE5B;MAAS,GAAKc,YAAY,CAAG,CACtD,CAAC;MAFOe,SAAS,GAAAsB,QAAA,CAATtB,SAAS;IAIjBS,sBAAS,CAACC,KAAK,CAACV,SAAS,CAAC,SAAS,CAAC,CAAC;IACrCC,MAAM,CAAChB,YAAY,CAACG,cAAc,CAAC,CAACiC,oBAAoB,CAAClD,QAAQ,CAACC,OAAO,CAAC;EAC5E,CAAC,CAAC;EAEFoB,EAAE,CAAC,8CAA8C,EAAE,YAAM;IACvD,IAAA+B,QAAA,GAAsB,IAAA7B,mBAAM,EAC1B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAE5B;MAAS,GAAKc,YAAY,CAAG,CACtD,CAAC;MAFOe,SAAS,GAAAuB,QAAA,CAATvB,SAAS;IAIjBS,sBAAS,CAACC,KAAK,CAACV,SAAS,CAAC,SAAS,CAAC,CAAC;IACrCC,MAAM,CAAChB,YAAY,CAACI,WAAW,CAAC,CAACgC,oBAAoB,CAAClD,QAAQ,CAACC,OAAO,CAAC;EACzE,CAAC,CAAC;EAEFoB,EAAE,CAAC,wBAAwB,EAAE,YAAM;IACjC,IAAAgC,QAAA,GAAsB,IAAA9B,mBAAM,EAC1B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAE5B;MAAS,GAAKc,YAAY,CAAG,CACtD,CAAC;MAFOe,SAAS,GAAAwB,QAAA,CAATxB,SAAS;IAIjBC,MAAM,CAACD,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACxCD,MAAM,CAACD,SAAS,CAAC,aAAa,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IAC7CD,MAAM,CAACD,SAAS,CAAC,KAAK,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACrCD,MAAM,CAACD,SAAS,CAAC,aAAa,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC/C,CAAC,CAAC;EAEFV,EAAE,CAAC,mCAAmC,EAAE,YAAM;IAC5C,IAAAiC,SAAA,GAAsB,IAAA/B,mBAAM,EAC1B,IAAA3B,WAAA,CAAA4B,GAAA,EAAC7B,gBAAA,CAAA8B,OAAe,EAAAC,MAAA,CAAAC,MAAA;QAACC,IAAI,EAAE5B;MAAS,GAAKc,YAAY;QAAEyC,OAAO,EAAE;MAAK,EAAE,CACrE,CAAC;MAFO1B,SAAS,GAAAyB,SAAA,CAATzB,SAAS;IAKjB,IAAM2B,UAAU,GAAG3B,SAAS,CAAC,UAAU,CAAC;IACxCC,MAAM,CAAC0B,UAAU,CAAC,CAACzB,UAAU,CAAC,CAAC;IAG/BO,sBAAS,CAACC,KAAK,CAACiB,UAAU,CAAC;IAC3B1B,MAAM,CAAChB,YAAY,CAACC,WAAW,CAAC,CAACmC,oBAAoB,CAAClD,QAAQ,CAACC,OAAO,CAAC;IAGvE6B,MAAM,CAACD,SAAS,CAAC,SAAS,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC3C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}