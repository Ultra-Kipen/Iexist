6215ccf43019ce2febf60e7f6178502d
_getJestObj().mock('../../src/contexts/AuthContext', function () {
  return {
    useAuth: jest.fn()
  };
});
_getJestObj().mock('@react-navigation/native', function () {
  return {
    NavigationContainer: function NavigationContainer(_ref) {
      var children = _ref.children;
      return (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
        children: children
      });
    }
  };
});
_getJestObj().mock('@react-navigation/native-stack', function () {
  return {
    createNativeStackNavigator: function createNativeStackNavigator() {
      return {
        Navigator: function Navigator(_ref3) {
          var children = _ref3.children;
          return (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
            children: children
          });
        },
        Screen: function Screen(props) {
          return mockScreen(props);
        }
      };
    }
  };
});
_getJestObj().mock('../../src/navigation/AuthStack', function () {
  return 'MockedAuthStack';
});
_getJestObj().mock('../../src/navigation/MainTabs', function () {
  return 'MockedMainTabs';
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _AuthContext = require("../../src/contexts/AuthContext");
var _AppNavigator = _interopRequireDefault(require("../../src/navigation/AppNavigator"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockScreen = jest.fn().mockImplementation(function (_ref2) {
  var name = _ref2.name;
  return (0, _jsxRuntime.jsx)("div", {
    children: name
  });
});
describe('AppNavigator', function () {
  beforeEach(function () {
    mockScreen.mockClear();
  });
  it('인증되지 않은 상태일 때 AuthStack 스크린이 포함되어야 함', function () {
    _AuthContext.useAuth.mockReturnValue({
      isAuthenticated: false,
      isLoading: false
    });
    (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AppNavigator.default, {}));
    expect(mockScreen).toHaveBeenCalledWith(expect.objectContaining({
      name: 'AuthStack'
    }));
  });
  it('인증된 상태일 때 MainTabs 스크린이 포함되어야 함', function () {
    _AuthContext.useAuth.mockReturnValue({
      isAuthenticated: true,
      isLoading: false
    });
    (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AppNavigator.default, {}));
    expect(mockScreen).toHaveBeenCalledWith(expect.objectContaining({
      name: 'MainTabs'
    }));
  });
  it('로딩 중일 때 null을 반환해야 함', function () {
    _AuthContext.useAuth.mockReturnValue({
      isAuthenticated: false,
      isLoading: true
    });
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AppNavigator.default, {})),
      toJSON = _render.toJSON;
    expect(toJSON()).toBeNull();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ1c2VBdXRoIiwiamVzdCIsImZuIiwiTmF2aWdhdGlvbkNvbnRhaW5lciIsIl9yZWYiLCJjaGlsZHJlbiIsIl9qc3hSdW50aW1lIiwianN4IiwiRnJhZ21lbnQiLCJjcmVhdGVOYXRpdmVTdGFja05hdmlnYXRvciIsIk5hdmlnYXRvciIsIl9yZWYzIiwiU2NyZWVuIiwicHJvcHMiLCJtb2NrU2NyZWVuIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJfcmVhY3ROYXRpdmUiLCJfQXV0aENvbnRleHQiLCJfQXBwTmF2aWdhdG9yIiwiX3JlcXVpcmUiLCJtb2NrSW1wbGVtZW50YXRpb24iLCJfcmVmMiIsIm5hbWUiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJtb2NrQ2xlYXIiLCJpdCIsIm1vY2tSZXR1cm5WYWx1ZSIsImlzQXV0aGVudGljYXRlZCIsImlzTG9hZGluZyIsInJlbmRlciIsImRlZmF1bHQiLCJleHBlY3QiLCJ0b0hhdmVCZWVuQ2FsbGVkV2l0aCIsIm9iamVjdENvbnRhaW5pbmciLCJfcmVuZGVyIiwidG9KU09OIiwidG9CZU51bGwiXSwic291cmNlcyI6WyJBcHBOYXZpZ2F0b3IudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gX190ZXN0c19fL25hdmlnYXRpb24vQXBwTmF2aWdhdG9yLnRlc3QudHN4XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHsgdXNlQXV0aCB9IGZyb20gJy4uLy4uL3NyYy9jb250ZXh0cy9BdXRoQ29udGV4dCc7XHJcbmltcG9ydCBBcHBOYXZpZ2F0b3IgZnJvbSAnLi4vLi4vc3JjL25hdmlnYXRpb24vQXBwTmF2aWdhdG9yJztcclxuXHJcbi8vIOy7tO2PrOuEjO2KuCDrqqjtgrlcclxuamVzdC5tb2NrKCcuLi8uLi9zcmMvY29udGV4dHMvQXV0aENvbnRleHQnLCAoKSA9PiAoe1xyXG4gIHVzZUF1dGg6IGplc3QuZm4oKSxcclxufSkpO1xyXG5cclxuLy8g64Sk67mE6rKM7J207IWYIOq0gOugqCDrqqjtgrlcclxuamVzdC5tb2NrKCdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUnLCAoKSA9PiAoe1xyXG4gIE5hdmlnYXRpb25Db250YWluZXI6ICh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSA9PiA8PntjaGlsZHJlbn08Lz5cclxufSkpO1xyXG5cclxuLy8g7Iqk7YOdIOuEpOu5hOqyjOydtO2EsCDrqqjtgrlcclxuY29uc3QgbW9ja1NjcmVlbiA9IGplc3QuZm4oKS5tb2NrSW1wbGVtZW50YXRpb24oKHsgbmFtZSB9KSA9PiA8ZGl2PntuYW1lfTwvZGl2Pik7XHJcblxyXG5qZXN0Lm1vY2soJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZS1zdGFjaycsICgpID0+ICh7XHJcbiAgY3JlYXRlTmF0aXZlU3RhY2tOYXZpZ2F0b3I6ICgpID0+ICh7XHJcbiAgICBOYXZpZ2F0b3I6ICh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSA9PiA8PntjaGlsZHJlbn08Lz4sXHJcbiAgICBTY3JlZW46IChwcm9wczogYW55KSA9PiBtb2NrU2NyZWVuKHByb3BzKVxyXG4gIH0pXHJcbn0pKTtcclxuXHJcbi8vIOyKpO2DnSDsu7Ttj6zrhIztirgg66qo7YK5XHJcbmplc3QubW9jaygnLi4vLi4vc3JjL25hdmlnYXRpb24vQXV0aFN0YWNrJywgKCkgPT4gJ01vY2tlZEF1dGhTdGFjaycpO1xyXG5qZXN0Lm1vY2soJy4uLy4uL3NyYy9uYXZpZ2F0aW9uL01haW5UYWJzJywgKCkgPT4gJ01vY2tlZE1haW5UYWJzJyk7XHJcblxyXG5kZXNjcmliZSgnQXBwTmF2aWdhdG9yJywgKCkgPT4ge1xyXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gICAgbW9ja1NjcmVlbi5tb2NrQ2xlYXIoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ+yduOymneuQmOyngCDslYrsnYAg7IOB7YOc7J28IOuVjCBBdXRoU3RhY2sg7Iqk7YGs66aw7J20IO2PrO2VqOuQmOyWtOyVvCDtlagnLCAoKSA9PiB7XHJcbiAgICAvLyDsnbjspp3rkJjsp4Ag7JWK7J2AIOyDge2DnCDshKTsoJVcclxuICAgICh1c2VBdXRoIGFzIGplc3QuTW9jaykubW9ja1JldHVyblZhbHVlKHtcclxuICAgICAgaXNBdXRoZW50aWNhdGVkOiBmYWxzZSxcclxuICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICByZW5kZXIoPEFwcE5hdmlnYXRvciAvPik7XHJcbiAgICBleHBlY3QobW9ja1NjcmVlbikudG9IYXZlQmVlbkNhbGxlZFdpdGgoXHJcbiAgICAgIGV4cGVjdC5vYmplY3RDb250YWluaW5nKHtcclxuICAgICAgICBuYW1lOiAnQXV0aFN0YWNrJ1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9KTtcclxuICBcclxuICBpdCgn7J247Kad65CcIOyDge2DnOydvCDrlYwgTWFpblRhYnMg7Iqk7YGs66aw7J20IO2PrO2VqOuQmOyWtOyVvCDtlagnLCAoKSA9PiB7XHJcbiAgICAvLyDsnbjspp3rkJwg7IOB7YOcIOyEpOyglVxyXG4gICAgKHVzZUF1dGggYXMgamVzdC5Nb2NrKS5tb2NrUmV0dXJuVmFsdWUoe1xyXG4gICAgICBpc0F1dGhlbnRpY2F0ZWQ6IHRydWUsXHJcbiAgICAgIGlzTG9hZGluZzogZmFsc2UsXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgcmVuZGVyKDxBcHBOYXZpZ2F0b3IgLz4pO1xyXG4gICAgZXhwZWN0KG1vY2tTY3JlZW4pLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKFxyXG4gICAgICBleHBlY3Qub2JqZWN0Q29udGFpbmluZyh7XHJcbiAgICAgICAgbmFtZTogJ01haW5UYWJzJ1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9KTtcclxuICBcclxuICBpdCgn66Gc65SpIOykkeydvCDrlYwgbnVsbOydhCDrsJjtmZjtlbTslbwg7ZWoJywgKCkgPT4ge1xyXG4gICAgLy8g66Gc65SpIOyDge2DnCDshKTsoJVcclxuICAgICh1c2VBdXRoIGFzIGplc3QuTW9jaykubW9ja1JldHVyblZhbHVlKHtcclxuICAgICAgaXNBdXRoZW50aWNhdGVkOiBmYWxzZSxcclxuICAgICAgaXNMb2FkaW5nOiB0cnVlLFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGNvbnN0IHsgdG9KU09OIH0gPSByZW5kZXIoPEFwcE5hdmlnYXRvciAvPik7XHJcbiAgICBleHBlY3QodG9KU09OKCkpLnRvQmVOdWxsKCk7XHJcbiAgfSk7XHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBT0FBLFdBQUEsR0FBS0MsSUFBSSxDQUFDLGdDQUFnQyxFQUFFO0VBQUEsT0FBTztJQUNqREMsT0FBTyxFQUFFQyxJQUFJLENBQUNDLEVBQUUsQ0FBQztFQUNuQixDQUFDO0FBQUEsQ0FBQyxDQUFDO0FBR0hKLFdBQUEsR0FBS0MsSUFBSSxDQUFDLDBCQUEwQixFQUFFO0VBQUEsT0FBTztJQUMzQ0ksbUJBQW1CLEVBQUUsU0FBckJBLG1CQUFtQkEsQ0FBQUMsSUFBQTtNQUFBLElBQUtDLFFBQVEsR0FBQUQsSUFBQSxDQUFSQyxRQUFRO01BQUEsT0FBc0MsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUFELFdBQUEsQ0FBQUUsUUFBQTtRQUFBSCxRQUFBLEVBQUdBO01BQVEsQ0FBRyxDQUFDO0lBQUE7RUFDdkYsQ0FBQztBQUFBLENBQUMsQ0FBQztBQUtIUCxXQUFBLEdBQUtDLElBQUksQ0FBQyxnQ0FBZ0MsRUFBRTtFQUFBLE9BQU87SUFDakRVLDBCQUEwQixFQUFFLFNBQTVCQSwwQkFBMEJBLENBQUE7TUFBQSxPQUFTO1FBQ2pDQyxTQUFTLEVBQUUsU0FBWEEsU0FBU0EsQ0FBQUMsS0FBQTtVQUFBLElBQUtOLFFBQVEsR0FBQU0sS0FBQSxDQUFSTixRQUFRO1VBQUEsT0FBc0MsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUFELFdBQUEsQ0FBQUUsUUFBQTtZQUFBSCxRQUFBLEVBQUdBO1VBQVEsQ0FBRyxDQUFDO1FBQUE7UUFDM0VPLE1BQU0sRUFBRSxTQUFSQSxNQUFNQSxDQUFHQyxLQUFVO1VBQUEsT0FBS0MsVUFBVSxDQUFDRCxLQUFLLENBQUM7UUFBQTtNQUMzQyxDQUFDO0lBQUE7RUFDSCxDQUFDO0FBQUEsQ0FBQyxDQUFDO0FBR0hmLFdBQUEsR0FBS0MsSUFBSSxDQUFDLGdDQUFnQyxFQUFFO0VBQUEsT0FBTSxpQkFBaUI7QUFBQSxFQUFDO0FBQ3BFRCxXQUFBLEdBQUtDLElBQUksQ0FBQywrQkFBK0IsRUFBRTtFQUFBLE9BQU0sZ0JBQWdCO0FBQUEsRUFBQztBQUFDLElBQUFnQixzQkFBQSxHQUFBQyxPQUFBO0FBM0JuRSxJQUFBQyxNQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxZQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxZQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxhQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFBNkQsSUFBQVYsV0FBQSxHQUFBVSxPQUFBO0FBQUEsU0FBQWxCLFlBQUE7RUFBQSxJQUFBdUIsUUFBQSxHQUFBTCxPQUFBO0lBQUFmLElBQUEsR0FBQW9CLFFBQUEsQ0FBQXBCLElBQUE7RUFBQUgsV0FBQSxZQUFBQSxZQUFBO0lBQUEsT0FBQUcsSUFBQTtFQUFBO0VBQUEsT0FBQUEsSUFBQTtBQUFBO0FBYTdELElBQU1hLFVBQVUsR0FBR2IsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQyxDQUFDb0Isa0JBQWtCLENBQUMsVUFBQUMsS0FBQTtFQUFBLElBQUdDLElBQUksR0FBQUQsS0FBQSxDQUFKQyxJQUFJO0VBQUEsT0FBTyxJQUFBbEIsV0FBQSxDQUFBQyxHQUFBO0lBQUFGLFFBQUEsRUFBTW1CO0VBQUksQ0FBTSxDQUFDO0FBQUEsRUFBQztBQWFoRkMsUUFBUSxDQUFDLGNBQWMsRUFBRSxZQUFNO0VBQzdCQyxVQUFVLENBQUMsWUFBTTtJQUNmWixVQUFVLENBQUNhLFNBQVMsQ0FBQyxDQUFDO0VBQ3hCLENBQUMsQ0FBQztFQUVGQyxFQUFFLENBQUMsc0NBQXNDLEVBQUUsWUFBTTtJQUU5QzVCLG9CQUFPLENBQWU2QixlQUFlLENBQUM7TUFDckNDLGVBQWUsRUFBRSxLQUFLO01BQ3RCQyxTQUFTLEVBQUU7SUFDYixDQUFDLENBQUM7SUFFRixJQUFBQyxtQkFBTSxFQUFDLElBQUExQixXQUFBLENBQUFDLEdBQUEsRUFBQ2EsYUFBQSxDQUFBYSxPQUFZLElBQUUsQ0FBQyxDQUFDO0lBQ3hCQyxNQUFNLENBQUNwQixVQUFVLENBQUMsQ0FBQ3FCLG9CQUFvQixDQUNyQ0QsTUFBTSxDQUFDRSxnQkFBZ0IsQ0FBQztNQUN0QlosSUFBSSxFQUFFO0lBQ1IsQ0FBQyxDQUNILENBQUM7RUFDSCxDQUFDLENBQUM7RUFFRkksRUFBRSxDQUFDLGlDQUFpQyxFQUFFLFlBQU07SUFFekM1QixvQkFBTyxDQUFlNkIsZUFBZSxDQUFDO01BQ3JDQyxlQUFlLEVBQUUsSUFBSTtNQUNyQkMsU0FBUyxFQUFFO0lBQ2IsQ0FBQyxDQUFDO0lBRUYsSUFBQUMsbUJBQU0sRUFBQyxJQUFBMUIsV0FBQSxDQUFBQyxHQUFBLEVBQUNhLGFBQUEsQ0FBQWEsT0FBWSxJQUFFLENBQUMsQ0FBQztJQUN4QkMsTUFBTSxDQUFDcEIsVUFBVSxDQUFDLENBQUNxQixvQkFBb0IsQ0FDckNELE1BQU0sQ0FBQ0UsZ0JBQWdCLENBQUM7TUFDdEJaLElBQUksRUFBRTtJQUNSLENBQUMsQ0FDSCxDQUFDO0VBQ0gsQ0FBQyxDQUFDO0VBRUZJLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSxZQUFNO0lBRTlCNUIsb0JBQU8sQ0FBZTZCLGVBQWUsQ0FBQztNQUNyQ0MsZUFBZSxFQUFFLEtBQUs7TUFDdEJDLFNBQVMsRUFBRTtJQUNiLENBQUMsQ0FBQztJQUVGLElBQUFNLE9BQUEsR0FBbUIsSUFBQUwsbUJBQU0sRUFBQyxJQUFBMUIsV0FBQSxDQUFBQyxHQUFBLEVBQUNhLGFBQUEsQ0FBQWEsT0FBWSxJQUFFLENBQUMsQ0FBQztNQUFuQ0ssTUFBTSxHQUFBRCxPQUFBLENBQU5DLE1BQU07SUFDZEosTUFBTSxDQUFDSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDO0VBQzdCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==